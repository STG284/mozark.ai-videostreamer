{"version":3,"sources":["app/pages/TestAnalytics/components/Table/index.tsx","styles/Assets/Automation.svg","../node_modules/@chakra-ui/hooks/node_modules/copy-to-clipboard/index.js","app/pages/ManageCredentials/components/Wrapper.tsx","app/pages/ManageCredentials/slice/types.ts","app/pages/ManageCredentials/slice/saga.ts","app/pages/ManageCredentials/slice/index.ts","app/pages/ManageCredentials/slice/selector.ts","app/pages/ManageCredentials/components/KeyRow.tsx","app/pages/ManageCredentials/components/PopupFooter.tsx","app/pages/ManageCredentials/Features/EditSecret.tsx","app/pages/ManageCredentials/Features/ManageAccessTable.tsx","app/pages/ManageCredentials/components/CraeteKeyComponent.tsx","../../../src/use-clipboard.ts","app/pages/ManageCredentials/Features/SecretAcessCopyDownload.tsx","app/pages/ManageCredentials/index.tsx"],"names":["PaginatedTable","_ref","columns","data","leftIcon","rightHoverIcon","type","getTabIndex","editUserClickHandler","deleteUserClickHandler","history","useNavigate","GetLastAuthUser","last_auth","concat","UserPool","getClientId","reg","RegExp","document","cookie","match","email","getEmailId","getTabIndexKey","inputRef","useRef","homePageActions","useHomePageSlice","getPageIndexinit","useSelector","selectPageIndexInisialValue","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","state","pageIndex","pageSize","useDispatch","useTable","initialState","hasOwnProperty","key","value","autoResetPage","usePagination","_jsxs","Flex","flexDirection","paddingTop","width","backgroundColor","children","CustomTable","fontFamily","fontWeight","variant","_jsx","Thead","color","map","headerGroup","Tr","getHeaderGroupProps","Th","minWidth","paddingLeft","paddingRight","headers","column","textTransform","padding","getHeaderProps","render","Tbody","row","i","textDecoration","cursor","className","cells","original","uuid","onClick","id","_id","_hover","background","getRowProps","Td","testType","Icon","title","w","h","as","MdOutlineMonitor","RiDeviceLine","testId","AiOutlineSetting","MdOutlineTouchApp","cell","index","testStatus","getCellProps","dateTimeConverter","testStartTime","updatedAt","sessionId","Date","createdDate","toGMTString","slice","user_role","Text","bg","align","borderRadius","isMFAEnabled","AiOutlineCheckSquare","MdOutlineDisabledByDefault","status","Badge","sx","display","justify","alignItems","MdOutlineAnalytics","HStack","user_name","e","FaTrashAlt","MdEdit","GrShieldSecurity","createdBy","justifyContent","marginRight","boxShadow","marginTop","disabled","Box","paddingBottom","Input","size","_focus","textAlign","fontSize","borderBottom","borderBottomColor","ref","onFocus","target","select","onKeyUp","onChange","Number","length","deselectCurrent","require","clipboardToIE11Formatting","module","exports","text","options","debug","message","reselectPrevious","range","selection","mark","success","createRange","getSelection","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","error","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","Wrapper","ManageAccessKeyErrorType","BASE_URL","REACT_APP_APP_TESTING_BASE_URL","getManageAccessKeyData","param","idToken","GetIdToken","requestURL","config","method","Authorization","manageAccessKeyData","call","requestNew","put","actions","manageAccessKeyDataLoaded","result","manageAccessKeyError","RESPONSE_ERROR","deleteManageAccessKeyData","deleteId","log","redirect","payload","manageKeyDeleteResponse","deleteManageKeyResponse","deleteManageAccessKeyError","createManageAccessKeyData","manageKeyCreateResponse","createManageKeyResponse","createManageAccessKeyError","manageAccessKeySaga","takeLatest","loadManageAccessKeys","loadDeleteKey","loadCreateKey","loading","loadingKeyDelete","deleteKeyError","deleteKeyResponse","loadingKeyCreate","createKeyError","createKeyResponse","createSlice","name","reducers","action","manageAccessKeyActions","useManageAccessKeySlice","useInjectReducer","reducer","useInjectSaga","saga","selectManageAccessKey","createSelector","manageAccessKey","KeyRow","getKey","deleteKeyHandler","Stack","direction","minW","ButtonComp","buttonHandler","PopupFooter","updateHandler","cancelHandler","secondTitle","borderTop","borderColor","StyledStack","styled","_templateObject","_taggedTemplateLiteral","StyledLabel","_templateObject2","EditSecret","userData","onClose","dispatch","keyId","spacing","username","apiKeys","item","accessKey","Header","accessor","ManageAccessTable","isOpen","onOpen","useDisclosure","userInfo","setUserInfo","useState","LoadingComponent","_Fragment","NoContent","height","IoMdContact","userDetail","PopupComponent","buttonHandler1","footer","CraeteKeyComponent","createNewKeyHandler","useClipboard","optionsOrTimeout","hasCopied","setHasCopied","timeout","copyOptions","useCallback","didCopy","copy","useEffect","timeoutId","setTimeout","clearTimeout","SecretAcessCopyDownload","getSecretKey","secretKey","keys","keyString","JSON","stringify","setValue","mb","overflow","textOverflow","ManageCredentials","setSecretKey","toast","useToast","statusCode","isClosable","response","SubContainer","LoaderOverlay","isloading","SubLayout"],"mappings":"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","file":"static/js/22.5f1ca18a.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useEffect, useRef } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Table as CustomTable,\n  Thead,\n  Tr,\n  Img,\n  Text,\n  Box,\n  // Container,\n  Td,\n  Th,\n  Tbody,\n  Input,\n  Flex,\n  //  IconButton,\n  Icon,\n  Center,\n  HStack,\n  Badge,\n} from '@chakra-ui/react';\n\nimport { useTable, usePagination } from 'react-table';\n\nimport automationIcon from '../../../../../styles/Assets/Automation.svg';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { GrShieldSecurity } from 'react-icons/gr';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport {\n  MdEdit,\n  MdOutlineAnalytics,\n  MdOutlineDisabledByDefault,\n  MdOutlineMonitor,\n  MdOutlineTouchApp,\n} from 'react-icons/md';\n\nimport { useTestAnalyticsSlice } from '../../testAnalyticsSlice';\nimport { AiOutlineCheckSquare, AiOutlineSetting } from 'react-icons/ai';\nimport { dateTimeConverter } from 'utils/gernricfunction';\nimport UserPool from 'Authentication/configuration/UserPool';\nimport { FiTv } from 'react-icons/fi';\nimport { RiDeviceLine } from 'react-icons/ri';\n\nimport { HomePageActions, useHomePageSlice } from 'app/pages/HomePage/slice';\nimport { selectPageIndexInisialValue } from 'app/pages/HomePage/slice/selectors';\nimport { getEmailId } from 'Authentication/configuration/GetEmail';\nimport { BsCheckCircle } from 'react-icons/bs';\n\nconst AutomationIcon = () => {\n  return (\n    <Flex as=\"span\" padding=\"0px\">\n      {' '}\n      <Img\n        width=\"22px\"\n        marginLeft=\"5px\"\n        height=\"22px\"\n        src={automationIcon}\n        alt=\"debug\"\n      ></Img>\n    </Flex>\n  );\n};\n//\n\n// const actionBoxShow = e => {\n//   if (document.getElementById(`box${e}`)) {\n//     document.getElementById(`box${e}`).style.display = 'block';\n//   }\n// };\n// const actionBoxHide = e => {\n//   document.getElementById(`box${e}`).style.display = 'none';\n// };\n\nconst getTestIdHandler = id => {\n  // console.log(id)\n};\n\n// const getPageIndexForTable = (type, getTabIndex) => {\n//   if (type) {\n//     const getTabIndexKey = getTabIndex || getTabIndex === 0 ? getTabIndex : '';\n//     if (\n//       parseInt(localStorage.getItem(`pageIndexKey${type}${getTabIndexKey}`))\n//     ) {\n//       return parseInt(\n//         localStorage.getItem(`pageIndexKey${type}${getTabIndexKey}`),\n//       );\n//     } else {\n//       return 0;\n//     }\n//   }\n//   return 0;\n// };\n\nexport function PaginatedTable({\n  columns,\n  data,\n  leftIcon,\n  rightHoverIcon,\n  type,\n  getTabIndex,\n  editUserClickHandler,\n  deleteUserClickHandler,\n}) {\n  let history = useNavigate();\n  const getRowId = id => {\n    history(`/testsummary/${id}`);\n    //  console.log(id)\n  };\n\n  const GetLastAuthUser = () => {\n    const last_auth = `CognitoIdentityServiceProvider.${UserPool.getClientId()}.LastAuthUser`;\n    const reg = new RegExp(`(?<=${last_auth}=)[^;]*`);\n    try {\n      return document.cookie.match(reg)[0];\n    } catch {\n      return null;\n    }\n  };\n\n  const username = GetLastAuthUser();\n  const email = getEmailId();\n\n  const getTabIndexKey = getTabIndex || getTabIndex === 0 ? getTabIndex : '';\n  const inputRef = useRef();\n  //const { actions } = useManageUserSlice();\n  const { homePageActions } = useHomePageSlice();\n  const getPageIndexinit = useSelector(selectPageIndexInisialValue);\n  const dispatch = useDispatch();\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page, // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    // pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    //setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        pageIndex:\n          getPageIndexinit.hasOwnProperty('key') &&\n          getPageIndexinit.key === `pageIndexKey${type}${getTabIndexKey}`\n            ? getPageIndexinit.value\n            : 0,\n        //getPageIndexForTable(type, getTabIndex),\n        //getPageIndexForTable(type)\n        // parseInt(localStorage.getItem(`pageIndexKey${type}${getTabIndexKey}`)) === 'NAN' ?  0 :  parseInt(localStorage.getItem(`pageIndexKey${type}${getTabIndexKey}`)),\n        pageSize: 20,\n      },\n      autoResetPage: true,\n      // manualPagination: false,\n      //autoResetPageIndex : false,\n    },\n    usePagination,\n  );\n\n  // Render the UI for your table\n  return (\n    <Flex\n      flexDirection=\"column\"\n      paddingTop=\"5px\"\n      width=\"100%\"\n      backgroundColor=\"white\"\n    >\n      <CustomTable\n        fontFamily=\"Montserrat\"\n        fontWeight=\"500\"\n        variant=\"simple\"\n        {...getTableProps()}\n      >\n        <Thead fontWeight=\"500\" color=\"grey1\">\n          {headerGroups.map(headerGroup => (\n            <Tr {...headerGroup.getHeaderGroupProps()}>\n              {/* <Th\n                fontFamily=\"Montserrat\"\n                minWidth=\"0px\"\n                paddingLeft=\"0px\"\n                paddingRight=\"0px\"\n              ></Th> */}\n              {leftIcon && (\n                <Th\n                  fontFamily=\"Montserrat\"\n                  minWidth=\"0px\"\n                  paddingLeft=\"0px\"\n                  paddingRight=\"0px\"\n                ></Th>\n              )}\n              {headerGroup.headers.map(column => (\n                <Th\n                  fontFamily=\"Montserrat\"\n                  textTransform=\"capitalize\"\n                  padding=\"2px 5px\"\n                  color=\"grey1\"\n                  {...column.getHeaderProps()}\n                >\n                  {column.render('Header')}\n                </Th>\n              ))}\n              {rightHoverIcon && <Th></Th>}\n            </Tr>\n          ))}\n        </Thead>\n        <Tbody fontWeight=\"500\" color=\"grey13\" {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row);\n\n            return (\n              <Tr\n                textDecoration=\"none\"\n                cursor={type === 'testAnalyticsTable ' && 'pointer'}\n                className=\"testTr\"\n                data-scriptappbuild-id={\n                  (type === 'deleteappbuilds' || type === 'deletetestsuite') &&\n                  row.cells[0].row.original.uuid\n                }\n                data-manageproject-id={\n                  type === 'manangeProjectTable' &&\n                  row.cells[0].row.original.uuid\n                }\n                onClick={() => {\n                  if (type === 'testAnalyticsTable ') {\n                    getRowId(row.cells[0].row.original.uuid._id);\n                  }\n                }}\n                _hover={rightHoverIcon ? { background: 'grey14' } : ''}\n                {...row.getRowProps()}\n              >\n                {leftIcon && (\n                  <Td minWidth=\"10px\" paddingLeft=\"10px\" paddingRight=\"5px\">\n                    {type === 'testAnalyticsTable ' ? (\n                      row.cells[0].row.original.testType === 'lr-automation' ? (\n                        <Icon\n                          title=\"LR Automation\"\n                          w=\"22px\"\n                          h=\"22px\"\n                          color=\"grey1\"\n                          as={MdOutlineMonitor}\n                        ></Icon>\n                      ) : row.cells[0].row.original.testType ===\n                        'lr-interact' ? (\n                        <Icon\n                          w=\"22px\"\n                          title=\"LR Interact\"\n                          h=\"22px\"\n                          color=\"grey1\"\n                          as={RiDeviceLine}\n                        ></Icon>\n                      ) : row.cells[0].row.original.uuid.testId !== '' ? (\n                        <Icon\n                          w=\"22px\"\n                          h=\"22px\"\n                          title=\"App Automation\"\n                          color=\"grey1\"\n                          as={AiOutlineSetting}\n                        ></Icon>\n                      ) : (\n                        <Icon\n                          color=\"grey1\"\n                          w=\"22px\"\n                          h=\"22px\"\n                          title=\"Manual\"\n                          as={MdOutlineTouchApp}\n                        ></Icon>\n                      )\n                    ) : (\n                      leftIcon\n                    )}\n                  </Td>\n                )}\n\n                {row.cells.map((cell, index) => {\n                  // {console.log(cell.render('Cell').props.data[i].id)}\n                  return (\n                    <Td\n                      color={\n                        type === 'testAnalyticsTable '\n                          ? row.cells[0].row.original.testStatus === 'Started'\n                            ? '#0d5bb5'\n                            : row.cells[0].row.original.testStatus === 'Failed'\n                            ? '#EF4E90'\n                            : ''\n                          : ''\n                      }\n                      // color={\n                      //   type === 'testAnalyticsTable ' &&\n                      //   row.cells[0].row.original.testStatus === 'Completed'\n                      //     ? ' '\n                      //     : '#0d5bb5'\n                      // }\n                      textTransform=\"none\"\n                      minWidth={\n                        type === 'testAnalyticsTable ' ? '60px' : '70px'\n                      }\n                      // minWidth={index === 5 ? '100px' : '70px'}\n                      padding=\"5px 4px\"\n                      {...cell.getCellProps()}\n                      minWidth=\"75px\"\n                    >\n                      {/* get the data of particular cell */}\n                      {/* {console.log(row.cells[0].row.original.user_role)} */}\n\n                      {(index === 0 &&\n                        type === 'testAnalyticsTable ' &&\n                        ((row.cells[0].row.original.testStatus ===\n                          'Completed' &&\n                          'Success') ||\n                          (row.cells[0].row.original.testStatus === 'Aborted' &&\n                            'User Aborted'))) ||\n                        (index === 1 &&\n                          type === 'testAnalyticsTable ' &&\n                          dateTimeConverter(\n                            row.cells[0].row.original.testStartTime,\n                          )) ||\n                        (index === 2 &&\n                          type === 'journeyTable' &&\n                          dateTimeConverter(\n                            row.cells[0].row.original.updatedAt,\n                          )) ||\n                        (index === 2 &&\n                          type === 'testAnalyticsTable ' &&\n                          row.cells[0].row.original.uuid.sessionId &&\n                          row.cells[0].row.original.uuid.sessionId) ||\n                        (index == 1 &&\n                          type === 'appBuilds' &&\n                          new Date(\n                            //cell.render('Cell').props.data[i].createdDate,\n                            row.cells[0].row.original.createdDate,\n                          )\n                            .toGMTString()\n                            .slice(5, 16)) ||\n                        (index === 1 &&\n                          (type === 'manageUserTable' ||\n                            type === 'manageKeyTable') &&\n                          row.cells[0].row.original.user_role ===\n                            'SystemAdmin' && (\n                            <Text\n                              bg=\"blue1\"\n                              color=\"white\"\n                              align=\"center\"\n                              borderRadius=\"20px\"\n                              width=\"120px\"\n                            >\n                              {/* {cell.render('Cell').props.data[i].role} */}\n                              {row.cells[0].row.original.user_role}\n                            </Text>\n                          )) ||\n                        (index === 1 &&\n                          (type === 'manageUserTable' ||\n                            type === 'manageKeyTable') &&\n                          row.cells[0].row.original.user_role ===\n                            'TenantAdmin' && (\n                            <Text\n                              bg=\"blue1\"\n                              color=\"white\"\n                              align=\"center\"\n                              borderRadius=\"20px\"\n                              width=\"120px\"\n                            >\n                              {/* {cell.render('Cell').props.data[i].role} */}\n                              {row.cells[0].row.original.user_role}\n                            </Text>\n                          )) ||\n                        (index === 3 &&\n                          (type === 'manageUserTable' ||\n                            type === 'manageKeyTable') &&\n                          '*********') ||\n                        (index === 4 &&\n                          type === 'manageUserTable' &&\n                          (row.cells[0].row.original.isMFAEnabled ? (\n                            <Icon\n                              color=\"grey1\"\n                              w=\"25px\"\n                              h=\"25px\"\n                              as={AiOutlineCheckSquare}\n                            ></Icon>\n                          ) : (\n                            <Icon\n                              w=\"25px\"\n                              h=\"25px\"\n                              color=\"grey1\"\n                              as={MdOutlineDisabledByDefault}\n                            ></Icon>\n                          ))) ||\n                        ((type === 'manageUserTable' ||\n                          type === 'manageKeyTable') &&\n                          index === 2 &&\n                          row.cells[0].row.original.status ===\n                            'FORCE_CHANGE_PASSWORD' && (\n                            <Text>\n                              {row.cells[0].row.original.email}{' '}\n                              <Badge\n                                borderRadius=\"20px\"\n                                padding=\"0px 10px\"\n                                variant=\"outline\"\n                              >\n                                {' '}\n                                not verified{' '}\n                              </Badge>\n                            </Text>\n                          )) ||\n                        cell.render('Cell')}\n                    </Td>\n                  );\n                })}\n                {rightHoverIcon && (\n                  <Td\n                    // minWidth=\"10px\"\n                    minWidth=\"95px\"\n                    padding=\"0px 5px\"\n                    paddingLeft=\"4px\"\n                    paddingRight=\"0px\"\n                    minWidth={type === 'testAnalyticsTable ' ? '50px' : '95px'}\n                  >\n                    <Flex\n                      sx={{\n                        '.testTr:hover &': {\n                          display: 'block',\n                        },\n                      }}\n                      id={`box${i}`}\n                      display=\"none\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                    >\n                      {type === 'testAnalyticsTable ' && (\n                        <Icon\n                          as={MdOutlineAnalytics}\n                          w=\"25px\"\n                          color=\"grey1\"\n                          h=\"25px\"\n                        ></Icon>\n                      )}\n\n                      {type === 'appbuildstable' && rightHoverIcon}\n                      {type === 'manageUserTable' && (\n                        <HStack align=\"center\" h=\"30px\">\n                          <Flex\n                            w=\"30px\"\n                            data-icon-id={`delete-user-icon-button-${row.cells[0].row.original.user_name}`}\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            borderRadius=\"5px\"\n                            cursor=\"pointer\"\n                            onClick={e =>\n                              deleteUserClickHandler(\n                                row.cells[0].row.original.user_name,\n                              )\n                            }\n                            //   onClick={e => dispatch(actions.deleteUserDetail(row.cells[0].row.original.id)) }\n                          >\n                            <Icon color=\"grey1\" as={FaTrashAlt}></Icon>\n                          </Flex>\n                          <Flex\n                            //id = {row.cells[0].row.original.id}\n                            data-icon-id={`edit-user-icon-button-${row.cells[0].row.original.user_name}`}\n                            w=\"30px\"\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            cursor=\"pointer\"\n                            borderRadius=\"5px\"\n                            onClick={e =>\n                              editUserClickHandler(row.cells[0].row.original)\n                            }\n                          >\n                            <Icon color=\"grey1\" as={MdEdit}></Icon>\n                          </Flex>\n                        </HStack>\n                      )}\n                      {type === 'manageKeyTable' && (\n                        <HStack align=\"center\" h=\"30px\">\n                          <Flex\n                            //id = {row.cells[0].row.original.id}\n                            data-icon-id={`edit-user-icon-button-${row.cells[0].row.original.user_name}`}\n                            w=\"30px\"\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            cursor=\"pointer\"\n                            borderRadius=\"5px\"\n                            onClick={e =>\n                              editUserClickHandler(row.cells[0].row.original)\n                            }\n                          >\n                            <Icon color=\"grey\" as={GrShieldSecurity}></Icon>\n                          </Flex>\n                        </HStack>\n                      )}\n                      {type === 'journeyTable' &&\n                        row.cells[0].row.original.createdBy === email && (\n                          <HStack align=\"center\" h=\"30px\">\n                            <Flex\n                              w=\"30px\"\n                              data-icon-id={`delete-user-icon-button-${row.cells[0].row.original.id}`}\n                              h=\"30px\"\n                              bg=\"white\"\n                              align=\"center\"\n                              justify=\"center\"\n                              borderRadius=\"5px\"\n                              cursor=\"pointer\"\n                              onClick={e =>\n                                deleteUserClickHandler(\n                                  row.cells[0].row.original.uuid,\n                                )\n                              }\n                              //   onClick={e => dispatch(actions.deleteUserDetail(row.cells[0].row.original.id)) }\n                            >\n                              <Icon color=\"grey1\" as={FaTrashAlt}></Icon>\n                            </Flex>\n                            <Flex\n                              //id = {row.cells[0].row.original.id}\n                              data-icon-id={`edit-user-icon-button-${row.cells[0].row.original.id}`}\n                              w=\"30px\"\n                              h=\"30px\"\n                              bg=\"white\"\n                              align=\"center\"\n                              justify=\"center\"\n                              cursor=\"pointer\"\n                              borderRadius=\"5px\"\n                              onClick={e =>\n                                editUserClickHandler(row.cells[0].row.original)\n                              }\n                            >\n                              <Icon color=\"grey1\" as={MdEdit}></Icon>\n                            </Flex>\n                          </HStack>\n                        )}\n                      {type === 'manangeProjectTable' && (\n                        <HStack align=\"center\" h=\"30px\">\n                          <Flex\n                            w=\"30px\"\n                            h=\"30px\"\n                            data-icon-id={`delete-project-icon-button-${row.cells[0].row.original.uuid}`}\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            borderRadius=\"5px\"\n                            cursor=\"pointer\"\n                            onClick={e =>\n                              deleteUserClickHandler(\n                                row.cells[0].row.original.uuid,\n                              )\n                            }\n                            // data-delete-project-button-id={\n                            //   row.cells[0].row.original.uuid\n                            // }\n                            //   onClick={e => dispatch(actions.deleteUserDetail(row.cells[0].row.original.id)) }\n                          >\n                            <Icon color=\"grey1\" as={FaTrashAlt}></Icon>\n                          </Flex>\n                          <Flex\n                            //id = {row.cells[0].row.original.id}\n                            data-icon-id={`edit-project-icon-button-${row.cells[0].row.original.uuid}`}\n                            w=\"30px\"\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            cursor=\"pointer\"\n                            borderRadius=\"5px\"\n                            onClick={e =>\n                              editUserClickHandler(row.cells[0].row.original)\n                            }\n                          >\n                            <Icon color=\"grey1\" as={MdEdit}></Icon>\n                          </Flex>\n                        </HStack>\n                      )}\n                      {(type === 'deleteappbuilds' ||\n                        type === 'deletetestsuite') && (\n                        <HStack align=\"center\" h=\"30px\">\n                          <Flex\n                            w=\"30px\"\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            borderRadius=\"5px\"\n                            cursor=\"pointer\"\n                            data-delete-button-id={\n                              row.cells[0].row.original.uuid\n                            }\n                            onClick={e =>\n                              deleteUserClickHandler(\n                                row.cells[0].row.original.uuid,\n                              )\n                            }\n                            //   onClick={e => dispatch(actions.deleteUserDetail(row.cells[0].row.original.id)) }\n                          >\n                            <Icon color=\"grey1\" as={FaTrashAlt}></Icon>\n                          </Flex>{' '}\n                        </HStack>\n                      )}\n                    </Flex>\n                  </Td>\n                )}\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </CustomTable>\n      {/* \n        Pagination can be built however you'd like. \n        This is just a very basic UI implementation:\n      */}\n      <Flex\n        justifyContent=\"flex-end\"\n        padding=\"10px 0px\"\n        marginRight=\"10px\"\n        color=\"grey13\"\n      >\n        <Flex\n          fontFamily=\"Montserrat\"\n          fontWeight=\"500\"\n          className=\"pagination\"\n          boxShadow=\"0px 3px 6px #00000029\"\n          borderRadius=\"13\"\n          marginTop=\"10px\"\n          marginRight=\"5px \"\n          color=\"grey2\"\n          padding=\"5px 10px\"\n          display=\"inline-block\"\n        >\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n            <Box as=\"b\" fontWeight=\"500\" borderRadius=\"50%\">\n              {' '}\n              &lt;{' '}\n            </Box>{' '}\n            &nbsp;\n          </button>{' '}\n          <Box as=\"span\" color=\"black\" paddingRight=\"2px\" paddingBottom=\"3px\">\n            <Input\n              variant=\"flushed\"\n              size=\"18px\"\n              width=\"25px\"\n              _focus={{ color: 'none' }}\n              textAlign=\"right\"\n              fontSize=\"14px\"\n              borderBottom=\"1.5px solid\"\n              borderBottomColor=\"grey2\"\n              ref={inputRef}\n              type=\"number\"\n              value={pageIndex + 1}\n              onFocus={e => e.target.select()}\n              onKeyUp={e => {\n                if (e.key === 'Backspace') {\n                  e.target.select();\n                }\n              }}\n              onChange={e => {\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                gotoPage(page);\n              }}\n            />\n          </Box>{' '}\n          <Box textTransform=\"lowercase\" as=\"span\" color=\"black\">\n            <span>of {pageOptions.length}</span>{' '}\n          </Box>\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\n            &nbsp;\n            <Box as=\"b\" fontWeight=\"500\" borderRadius=\"50%\">\n              {' '}\n              {'  >'}\n            </Box>\n          </button>{' '}\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Automation.a7979bd9.svg\";","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","import { Flex } from '@chakra-ui/react'\nimport React from 'react'\n\nexport default function Wrapper({children}) {\n  return (\n    <Flex\n    fontFamily=\"Montserrat\"\n    fontWeight=\"500\"\n    fontSize=\"14px\"\n    flexDirection=\"column\"\n    padding=\"20px\"\n    width=\"100%\"\n  >{children}</Flex>\n  )\n}\n","import { ManageAccessKeyData } from 'types/ManageAccessKey';\n\nexport interface manageAccessKeyState {\n  loading: boolean;\n  manageAccessKeyData: ManageAccessKeyData[];\n  manageAccessKeyError: null | ManageAccessKeyErrorType;\n  loadingKeyDelete: boolean;\n  deleteKeyError: null | ManageAccessKeyErrorType;\n  deleteKeyResponse: DeleteKeyResponse;\n  loadingKeyCreate: boolean;\n  createKeyError: null | ManageAccessKeyErrorType;\n  createKeyResponse: DeleteKeyResponse;\n}\n\nexport interface DeleteKeyResponse {}\n\nexport enum ManageAccessKeyErrorType {\n  RESPONSE_ERROR = 1,\n  TEST_NOT_FOUND = 2,\n}\n","// @ts-nocheck\nimport GetIdToken from 'Authentication/configuration/GetIdToken';\nimport { call, put, takeLatest, delay, takeEvery } from 'redux-saga/effects';\nimport { request } from 'utils/request';\nimport { manageAccessKeyActions as actions } from './';\nimport { ManageAccessKeyErrorType } from './types';\nimport { requestNew } from 'utils/requestWithError';\nimport { REACT_APP_APP_TESTING_BASE_URL } from 'utils/enviroment';\nconst BASE_URL = REACT_APP_APP_TESTING_BASE_URL;\n\n\nfunction* getManageAccessKeyData(param) {\n  const idToken = GetIdToken();\n  const requestURL = `${BASE_URL}/authorizer/listkey`;\n\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  try {\n    const manageAccessKeyData = yield call(requestNew, requestURL, config);\n\n    if (\n      manageAccessKeyData.hasOwnProperty('body') &&\n      manageAccessKeyData.body.hasOwnProperty('result')\n    ) {\n     \n      yield put(\n        actions.manageAccessKeyDataLoaded(manageAccessKeyData.body.result),\n      );\n    } else {\n      yield put(\n        actions.manageAccessKeyError(ManageAccessKeyErrorType.RESPONSE_ERROR),\n      );\n    }\n  } catch (e) {\n    //console.log(e)\n    yield put(\n      actions.manageAccessKeyError(ManageAccessKeyErrorType.RESPONSE_ERROR),\n    );\n  }\n}\n\nfunction* deleteManageAccessKeyData(deleteId) {\n  console.log(deleteId);\n  const idToken = GetIdToken();\n  const config = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n\n    redirect: 'follow',\n  };\n\n  const requestURL = `${BASE_URL}/authorizer/deletekey?accesskey=${deleteId.payload}`;\n  try {\n    const manageKeyDeleteResponse = yield call(requestNew, requestURL, config);\n    //console.log(manageKeyDeleteResponse);\n    if (manageKeyDeleteResponse.hasOwnProperty('body')) {\n      yield put(actions.deleteManageKeyResponse(manageKeyDeleteResponse));\n    } else {\n      yield put(\n        actions.deleteManageAccessKeyError(\n          ManageAccessKeyErrorType.RESPONSE_ERROR,\n        ),\n      );\n    }\n  } catch (err) {\n    yield put(\n      actions.deleteManageAccessKeyError(\n        ManageAccessKeyErrorType.RESPONSE_ERROR,\n      ),\n    );\n  }\n}\nfunction* createManageAccessKeyData() {\n  const idToken = GetIdToken();\n  const config = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n\n    redirect: 'follow',\n  };\n\n  const requestURL = `${BASE_URL}/authorizer/generate`;\n  try {\n    const manageKeyCreateResponse = yield call(requestNew, requestURL, config);\n \n    if (manageKeyCreateResponse.hasOwnProperty('body')) {\n      yield put(actions.createManageKeyResponse(manageKeyCreateResponse));\n    } else {\n      yield put(\n        actions.createManageAccessKeyError(\n          ManageAccessKeyErrorType.RESPONSE_ERROR,\n        ),\n      );\n    }\n  } catch (err) {\n    yield put(\n      actions.createManageAccessKeyError(\n        ManageAccessKeyErrorType.RESPONSE_ERROR,\n      ),\n    );\n  }\n}\n\nexport function* manageAccessKeySaga() {\n  yield takeLatest(actions.loadManageAccessKeys.type, getManageAccessKeyData);\n  yield takeLatest(actions.loadDeleteKey.type, deleteManageAccessKeyData);\n  yield takeLatest(actions.loadCreateKey.type, createManageAccessKeyData);\n}\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\nimport { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';\nimport { manageAccessKeySaga } from './saga';\nimport { manageAccessKeyState } from './types';\n\nexport const initialState: manageAccessKeyState = {\n  loading: false,\n  manageAccessKeyData: [],\n  manageAccessKeyError: null,\n  loadingKeyDelete: false,\n  deleteKeyError: null,\n  deleteKeyResponse: {},\n  loadingKeyCreate: false,\n  createKeyError: null,\n  createKeyResponse: {},\n};\n\nconst getPageNumber = (data: number) => {\n  return Math.ceil(data / 10);\n};\n\nconst slice = createSlice({\n  name: 'manageAccessKey',\n  initialState,\n  reducers: {\n    loadManageAccessKeys: state => {\n      state.loading = true;\n    },\n    manageAccessKeyDataLoaded: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n\n      //console.log(action.payload);\n      state.manageAccessKeyData = action.payload;\n      state.manageAccessKeyError = null;\n    },\n    manageAccessKeyError: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.manageAccessKeyError = action.payload;\n    },\n    loadDeleteKey: state => {\n      state.loadingKeyDelete = true;\n    },\n    deleteManageKeyResponse: (state, action: PayloadAction<any>) => {\n      state.loadingKeyDelete = false;\n      state.deleteKeyResponse = action.payload;\n      state.deleteKeyError = null;\n    },\n    deleteManageAccessKeyError: (state, action: PayloadAction<any>) => {\n      state.loadingKeyDelete = false;\n      state.deleteKeyError = action.payload;\n    },\n    loadCreateKey: state => {\n      state.loadingKeyDelete = true;\n    },\n    createManageKeyResponse: (state, action: PayloadAction<any>) => {\n      state.loadingKeyDelete = false;\n      state.createKeyResponse = action.payload;\n      state.deleteKeyError = null;\n    },\n    createManageAccessKeyError: (state, action: PayloadAction<any>) => {\n      state.loadingKeyDelete = false;\n      state.deleteKeyError = action.payload;\n    },\n  },\n});\n\nexport const { actions: manageAccessKeyActions } = slice;\n\nexport const useManageAccessKeySlice = () => {\n  useInjectReducer({ key: slice.name, reducer: slice.reducer });\n  useInjectSaga({ key: slice.name, saga: manageAccessKeySaga });\n  return { actions: slice.actions };\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\nconst selectSlice = (state: RootState) => state.manageAccessKey || initialState;\n\nexport const selectManageAccessKey = createSelector(\n  [selectSlice],\n  state => state\n);\n\n","import { Stack, Text, styled } from '@chakra-ui/react'\nimport ButtonComp from 'app/components/ButtonComp';\nimport React from 'react'\n\n\n\nfunction KeyRow({getKey , deleteKeyHandler }) {\n    console.log({getKey , deleteKeyHandler })\n  return (\n    <Stack direction=\"row\"  width=\"100%\" >\n      <Text width=\"200px\" >Access Key </Text>\n      <Text minW=\"400px\" >{getKey}</Text>\n      <ButtonComp\n        fontWeight=\"500\"\n        buttonHandler={() => deleteKeyHandler(getKey)}\n        padding=\"5px 8px\"\n      >\n        Delete\n        </ButtonComp>\n    </Stack>\n  )\n}\n\nexport default KeyRow","import { Flex } from '@chakra-ui/react'\nimport ButtonComp from 'app/components/ButtonComp'\nimport React from 'react'\n\nfunction PopupFooter({updateHandler , cancelHandler , secondTitle}) {\n  return (\n    <Flex\n    borderTop=\"1px solid\"\n    paddingTop=\"5px\"\n    borderColor=\"grey16\"\n    justify=\"end\"\n    width=\"100%\"\n  >\n    <ButtonComp\n      name=\"cancel-edit-user-button\"\n      borderColor=\"white3\"\n      color=\"grey1\"\n      width=\"95px\"\n      buttonHandler={cancelHandler}\n      fontWeight=\"500\"\n    >\n      Cancel\n    </ButtonComp>\n    <ButtonComp\n      backgroundColor=\"blue1\"\n      name=\"update-edit-user-button\"\n      borderColor=\"blue1\"\n      color=\"white\"\n      width=\"95px\"\n      fontWeight=\"500\"\n      buttonHandler={updateHandler}\n    >\n      { secondTitle || 'Save' }\n    </ButtonComp>\n  </Flex>\n  )\n}\n\nexport default PopupFooter","import { HStack, Stack, Text } from '@chakra-ui/react'\nimport ButtonComp from 'app/components/ButtonComp';\nimport PopupFooterCutomBotton from 'app/components/PopupFooterCutomBotton'\nimport InputComponent from 'app/pages/Appium/components/InputComponent'\nimport React from 'react'\nimport styled from 'styled-components';\nimport { useManageAccessKeySlice } from '../slice';\nimport { useDispatch } from 'react-redux';\nimport KeyRow from '../components/KeyRow';\nimport PopupFooter from '../components/PopupFooter';\n\nconst StyledStack = styled(Stack)`\n  padding: 10px 15px;\n  font-weight: 500;\n  width: 100%;\n`;\n\nconst StyledLabel = styled(Text)`\n  width: 200px;\n`;\n\nfunction EditSecret({userData , onClose }) {\n    const {actions} = useManageAccessKeySlice();\n    const dispatch = useDispatch();\n    const updateHandlerUser = () => {\n\n    }\n    const deleteKeyHandler = (keyId) => {\n     dispatch(actions.loadDeleteKey(keyId))\n     onClose();\n    }\n  \n  return (\n    <StyledStack spacing=\"15px\">\n    <Stack direction=\"row\"  width=\"100%\" >\n      <StyledLabel>Name</StyledLabel>\n      <Text>{userData.username}</Text>\n    </Stack>\n   \n   \n      {userData.apiKeys.length > 0 &&\n        userData.apiKeys.map(item => (\n          <KeyRow\n            getKey={item.accessKey}\n            deleteKeyHandler={deleteKeyHandler}\n          ></KeyRow>\n        ))}\n    <PopupFooter\n      updateHandler={onClose}\n      cancelHandler={onClose}\n    />\n  </StyledStack>\n  )\n}\n\nexport default EditSecret","import { Flex, Icon, useDisclosure } from '@chakra-ui/react'\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport NoContent from 'app/components/NoContent';\nimport { PaginatedTable } from 'app/pages/TestAnalytics/components/Table';\nimport React, { useState } from 'react'\nimport { IoMdContact } from 'react-icons/io';\nimport { useSelector } from 'react-redux';\nimport { selectManageAccessKey } from '../slice/selector';\nimport PopupComponent from 'app/components/PopupComponent';\nimport EditSecret from './EditSecret';\n\nconst columns = [\n    {\n      Header: 'Name',\n      accessor: 'username',\n    },\n  \n    {\n      Header: 'Role',\n      accessor: 'userRole',\n    },\n  \n    {\n      Header: 'Email',\n      accessor: 'email',\n    },\n    {\n      Header: 'AccessKey',\n      accessor: 'accessKey',\n    },\n  ];\nfunction ManageAccessTable() {\n  const { loading, manageAccessKeyData, manageAccessKeyError } = useSelector(\n    selectManageAccessKey,\n  );\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [userInfo, setUserInfo] = useState({});\n  const editUserClickHandler = (userDetail ) => {\n    setUserInfo(userDetail);\n    onOpen();\n  };\n \n  return (\n    <Flex width=\"100%\"  padding=\"10px\">\n    {loading ? (\n      <LoadingComponent></LoadingComponent>\n    ) : (\n      <>\n        {manageAccessKeyError === 1 ? (\n          <NoContent height=\"60vh\" message=\"Something Went Wrong\"></NoContent>\n        ) : (\n          <>\n            {manageAccessKeyData.length !== 0  ? (\n              <PaginatedTable\n                leftIcon={\n                  <Icon\n                    w=\"22px\"\n                    h=\"22px\"\n                    color=\"grey1\"\n                    as={IoMdContact}\n                  ></Icon>\n                }\n                type=\"manageKeyTable\"\n                editUserClickHandler={editUserClickHandler}\n                rightHoverIcon={true}\n                data={manageAccessKeyData}\n                columns={columns}\n              ></PaginatedTable>\n            ) : (\n              <NoContent height=\"60vh\" message=\"NO Data Found\"></NoContent>\n            )}\n          </>\n        )}\n      </>\n    )}\n      <PopupComponent\n        title=\"Edit Secret\"\n        buttonHandler1={onClose}\n        width=\"800px\"\n        footer={true}\n        isOpen={isOpen}\n        onClose={onClose}\n      >\n        <EditSecret onClose={onClose} userData={userInfo}></EditSecret>\n      </PopupComponent>\n    </Flex>\n  )\n}\n\nexport default ManageAccessTable","import { Flex, Stack, Text } from '@chakra-ui/react'\nimport ButtonComp from 'app/components/ButtonComp'\nimport React from 'react'\n\nfunction CraeteKeyComponent({ createNewKeyHandler }) {\n  return (\n\n         <Flex justifyContent='flex-end'   width=\"100%\" >\n  \n        <ButtonComp fontWeight='500' buttonHandler={createNewKeyHandler}  padding=\"5px 8px\" >\n            Create New Key\n        </ButtonComp>\n    </Flex>\n   \n  )\n}\n\nexport default CraeteKeyComponent","import { useState, useCallback, useEffect } from \"react\"\nimport copy from \"copy-to-clipboard\"\n\nexport interface UseClipboardOptions {\n  /**\n   * timeout delay (in ms) to switch back to initial state once copied.\n   */\n  timeout?: number\n  /**\n   * Set the desired MIME type\n   */\n  format?: string\n}\n\n/**\n * React hook to copy content to clipboard\n *\n * @param text the text or value to copy\n * @param {Number} [optionsOrTimeout=1500] optionsOrTimeout - delay (in ms) to switch back to initial state once copied.\n * @param {Object} optionsOrTimeout\n * @param {string} optionsOrTimeout.format - set the desired MIME type\n * @param {number} optionsOrTimeout.timeout - delay (in ms) to switch back to initial state once copied.\n */\nexport function useClipboard(\n  text: string,\n  optionsOrTimeout: number | UseClipboardOptions = {},\n) {\n  const [hasCopied, setHasCopied] = useState(false)\n\n  const { timeout = 1500, ...copyOptions } =\n    typeof optionsOrTimeout === \"number\"\n      ? { timeout: optionsOrTimeout }\n      : optionsOrTimeout\n\n  const onCopy = useCallback(() => {\n    const didCopy = copy(text, copyOptions)\n    setHasCopied(didCopy)\n  }, [text, copyOptions])\n\n  useEffect(() => {\n    let timeoutId: number | null = null\n\n    if (hasCopied) {\n      timeoutId = window.setTimeout(() => {\n        setHasCopied(false)\n      }, timeout)\n    }\n\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId)\n      }\n    }\n  }, [timeout, hasCopied])\n\n  return { value: text, onCopy, hasCopied }\n}\n","import { useClipboard } from '@chakra-ui/hooks';\nimport { Flex, HStack, Spacer, Stack, Text } from '@chakra-ui/react';\nimport ButtonComp from 'app/components/ButtonComp';\nimport React, { useEffect } from 'react'\nimport PopupFooter from '../components/PopupFooter';\n\nfunction SecretAcessCopyDownload({ getSecretKey , onClose}) {\n  const { secretKey, ...keys } = getSecretKey;\n  const keyString = JSON.stringify(keys);\n  const { onCopy, value, setValue, hasCopied } =\n    useClipboard(keyString);\n\n    useEffect(() =>{\n    },[getSecretKey])\n  \n    return (\n    \n      <Flex mb={2} width=\"100%\" flexDirection='column' >\n         {/* <ButtonComp padding=\"5px 5px\" buttonHandler={onCopy}>{hasCopied ? \"Copied!\" : \"Copy\"}</ButtonComp> */}\n         <Stack direction=\"row\"padding=\"10px\"  width=\"100%\" >\n      <Text width=\"250px\" >Access Key </Text>\n      <Text width=\"400px\" title={getSecretKey.accessKey} >{getSecretKey.accessKey}</Text>\n    </Stack>\n         <Stack direction=\"row\"padding=\"10px\"  width=\"100%\" >\n      <Text width=\"250px\" whiteSpace=\"nowrap\" >ID Token</Text>\n      <Text  width=\"400px\" whiteSpace=\"nowrap\" overflow='hidden' textOverflow='ellipsis' title={getSecretKey.idToken} >{getSecretKey.idToken}</Text>\n    </Stack>\n   <PopupFooter secondTitle={hasCopied ? \"Copied!\" : \"Copy\"} cancelHandler={onClose} updateHandler={onCopy} ></PopupFooter>\n      </Flex>\n  )\n}\n\nexport default SecretAcessCopyDownload","import SubLayout from 'app/components/SubLayout'\nimport React, { useEffect, useState } from 'react'\nimport Wrapper from './components/Wrapper'\nimport { HStack, useDisclosure, useToast } from '@chakra-ui/react'\nimport ManageAccessTable from './Features/ManageAccessTable'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useManageAccessKeySlice } from './slice'\nimport { selectManageAccessKey } from './slice/selector'\nimport LoadingWrapper from '../SyntheticMonitoring/components/LoadingWrapper'\nimport LoaderOverlay from '../SyntheticMonitoring/components/LoaderOverlay'\nimport useApiResponseHandler from './components/useApiResponseHandler'\nimport CraeteKeyComponent from './components/CraeteKeyComponent'\nimport PopupComponent from 'app/components/PopupComponent'\nimport SecretAcessCopyDownload from './Features/SecretAcessCopyDownload'\nimport SubContainer from 'app/components/SubContainer'\n\nexport function ManageCredentials() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { loading ,loadingKeyDelete,\n    deleteKeyError,\n    deleteKeyResponse,\n    loadingKeyCreate,\n    createKeyError,\n    createKeyResponse} = useSelector(selectManageAccessKey);\n    const [getSecretKey , setSecretKey] = useState({});\n    const dispatch = useDispatch()\n    const {actions} = useManageAccessKeySlice()\n  const toast = useToast();\n  useEffect(() => {\n    dispatch(actions.loadManageAccessKeys());\n  }, []);\n  useEffect(() => {\n    if (createKeyResponse.hasOwnProperty('statusCode')) {\n      if (createKeyResponse.statusCode === 200) {\n        toast({\n          title: createKeyResponse.body.message,\n          status: 'success',\n          isClosable: true,\n          position: 'bottom-right',\n        });\n        setSecretKey(createKeyResponse.body.response)\n        onOpen();\n        dispatch(actions.loadManageAccessKeys());\n      \n      } else {\n        toast({\n          title: createKeyResponse.body.message,\n          status: 'error',\n          isClosable: true,\n          position: 'bottom-right',\n        });\n      }\n      dispatch(actions.createManageKeyResponse({}));\n    }\n  }, [createKeyResponse]);\n\n  useEffect(() => {\n    if (createKeyError !== null && createKeyError === 1 ) {\n      toast({\n        title: 'Something went wrong',\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n    }\n  }, [createKeyError]);\n\n \n  useEffect(() => {\n    if (deleteKeyResponse.hasOwnProperty('statusCode')) {\n      if (deleteKeyResponse.statusCode === 200) {\n        toast({\n          title: deleteKeyResponse.body.message,\n          status: 'success',\n          isClosable: true,\n          position: 'bottom-right',\n        });\n        dispatch(actions.loadManageAccessKeys());\n      } else {\n        toast({\n          title: deleteKeyResponse.body.message,\n          status: 'error',\n          isClosable: true,\n          position: 'bottom-right',\n        });\n      }\n      dispatch(actions.deleteManageKeyResponse({}));\n    }\n  }, [deleteKeyResponse]);\n\n  useEffect(() => {\n    if (deleteKeyError !== null && deleteKeyError === 1 ) {\n      toast({\n        title: 'Something went wrong',\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n    }\n  }, [deleteKeyError]);\n  const createNewKeyHandler = () => {\n    dispatch(actions.loadCreateKey())   \n}\n\n  return (\n    <SubContainer>\n    <LoaderOverlay isloading={loadingKeyCreate || loadingKeyDelete} >\n <SubLayout>\n\n<Wrapper>\n          <CraeteKeyComponent\n            createNewKeyHandler={createNewKeyHandler}\n          ></CraeteKeyComponent>\n          <ManageAccessTable></ManageAccessTable>\n    </Wrapper>\n    <PopupComponent\n        title=\"Access Key\"\n        buttonHandler1={onClose}\n        width=\"800px\"\n        footer={true}\n        isOpen={isOpen}\n        onClose={onClose}\n      >\n  <SecretAcessCopyDownload  getSecretKey={getSecretKey} onClose={onClose} ></SecretAcessCopyDownload>\n      </PopupComponent>\n    </SubLayout>\n    </LoaderOverlay>\n   \n    </SubContainer>\n    )\n}\n\nexport default ManageCredentials"],"sourceRoot":""}