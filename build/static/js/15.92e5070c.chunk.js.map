{"version":3,"sources":["app/pages/Appium/components/InfoComponent.tsx","app/pages/TestSession/slice/selectors.ts","app/pages/DownLoadLog/slice/types.ts","app/pages/DownLoadLog/slice/saga.ts","app/pages/DownLoadLog/slice/index.ts","app/pages/DownLoadLog/slice/selectors.ts","app/pages/SummaryTable/slice/selectors.ts","app/pages/DisplayScreen/components/NoContainDisplay.tsx","app/pages/TestSession/slice/types.ts","app/pages/SummaryTable/slice/types.ts","app/pages/TestSession/slice/saga.ts","app/pages/TestSession/slice/index.ts","app/pages/SummaryTable/slice/saga.ts","app/pages/SummaryTable/slice/index.ts","app/pages/DisplayScreen/slice/types.ts","app/pages/DisplayScreen/slice/saga.ts","app/pages/DisplayScreen/slice/index.ts","app/pages/DisplayScreen/slice/selectors.ts","app/pages/DisplayScreen/components/ScreenShotDisplay.tsx","app/pages/DisplayScreen/components/VideoDisplay.tsx","app/pages/DisplayScreen/components/MobileDisplay.tsx","app/pages/DisplayScreen/index.tsx","app/components/AccordionComponent/index.tsx","app/pages/TestSession/components/GridItemComponent.tsx","app/pages/TestSession/components/SessionidTable.tsx","app/pages/TestSession/Features/DisplayTable.tsx","app/pages/TestSession/Features/SubTabWrapper.tsx","app/pages/TestCases/slice/types.ts","app/pages/TestCases/slice/saga.ts","app/pages/TestCases/slice/index.ts","app/pages/TestCases/slice/selectors.ts","app/components/SummaryTableComp.tsx","app/pages/TestCases/components/TestCasesTable.tsx","app/pages/TestCaseExperience/slice/types.ts","app/pages/TestCaseExperience/slice/saga.ts","app/pages/TestCaseExperience/slice/index.ts","app/pages/TestCaseExperience/slice/selectors.ts","app/pages/TestCaseExperience/index.tsx","app/pages/SummaryTable/index.tsx","app/pages/TestCases/index.tsx","app/pages/HarAnalysis/slice/saga.ts","app/pages/HarAnalysis/slice/index.ts","app/pages/HarAnalysis/slice/selector.ts","app/components/ChartLayout.tsx","app/pages/HarAnalysis/Components/StatusBox.tsx","app/pages/HarAnalysis/Components/HarChartStatus.tsx","app/pages/HarAnalysis/Components/RadioButton.tsx","app/pages/HarAnalysis/Components/EventPointerHar.tsx","app/pages/HarAnalysis/Components/SliderAxisHar.tsx","app/pages/HarAnalysis/Components/HarChartComp.tsx","app/components/PopupComp.tsx","app/pages/HarAnalysis/Components/DownloadJson.tsx","app/pages/HarAnalysis/Components/CopyToClipBoardComp.tsx","app/pages/HarAnalysis/Components/SummaryCard.tsx","app/pages/HarAnalysis/Features/IssueSummaryPopup.tsx","app/pages/HarAnalysis/Components/UploadDownloadCard.tsx","app/pages/HarAnalysis/Components/DataExchangeCard.tsx","app/pages/HarAnalysis/Components/PieChart.tsx","app/pages/HarAnalysis/Components/SummaryPieBox.tsx","app/pages/HarAnalysis/Components/PieLayout/index.tsx","app/pages/HarAnalysis/Components/TopAssets.tsx","app/pages/HarAnalysis/Features/SummaryPopCard.tsx","styles/Assets/Summary.svg","styles/Assets/SummaryActive.svg","styles/Assets/Issue Summary.svg","styles/Assets/Issue SummaryActive.svg","app/pages/HarAnalysis/Features/HarSummaryPopup.tsx","app/pages/HarAnalysis/Features/HarChart.tsx","app/pages/HarAnalysis/Features/HarFilter.tsx","app/pages/HarAnalysis/Components/GroupChartLayout/index.tsx","app/pages/HarAnalysis/Components/GroupComponent/index.tsx","app/pages/HarAnalysis/Features/GroupByChart/index.tsx","app/pages/HarAnalysis/Features/HarFileParse.tsx","app/pages/HarAnalysis/index.tsx","app/pages/TestSession/components/CustomIconButton.tsx","app/pages/TestSession/components/SubheaderSessionId.tsx","app/pages/DisplayScreen/Loadable.tsx","app/pages/TestSession/components/ScreentshotsViewer.tsx","app/pages/TestSession/components/SubTabsComponent.tsx","app/pages/DownLoadLog/Loadable.tsx","app/pages/AppProfiling/Loadable.tsx","app/pages/LiveLog/index.tsx","app/pages/Testcasesnetweb/index.tsx","app/pages/TestSession/index.tsx"],"names":["InfoComponent","_ref","labelmessage","_jsx","Tooltip","label","placement","children","Icon","marginLeft","color","w","h","as","AiOutlineInfoCircle","selectSlice","state","testSession","initialState","selectTestSessionData","createSelector","testSessionData","selectLoading","loading","selectError","error","selectAbortTestResponse","abortTestResponse","selectAbortTestError","errorTestAbort","selectLoadingAbort","loadingAbort","DownloadLogErrorType","BASE_URL","REACT_APP_AUTOMATION_TESTING_BASE_URL","getDownloadLogData","id","idToken","GetIdToken","requestURL","concat","payload","config","method","headers","Authorization","DownloadLogData","call","request","hasOwnProperty","put","actions","DownloadLogDataLoaded","data","list","DownloadLogDataError","RESPONSE_ERROR","err","getDownloadScreenshotsData","DownloadScreenshotsData","DownloadScreenshotsDataLoaded","DownloadScreenshotsDataError","getDownloadFileUrlData","fileDownloadInfo","testId","type","filename","DownloadFileUrl","console","log","forUse","getFileUrlLoaded","downloadFileUrlLoaded","downloadFileUrlError","e","getDownloadVideoFileUrlData","downloadVideoFileUrlLoaded","url","downloadVideoFileUrlError","DownloadLogSaga","takeLatest","loadDownloadFileUrl","loadDownloadVideoFileUrl","loadDownloadLogData","loadDownloadScreenshotsData","loadingScreenshots","errorScreenshots","loadingFileUrl","errorFileUrl","getFileUrlData","loadingVideoFileUrl","errorVideoFileUrl","DownloadVideoFileUrl","videoFileName","slice","createSlice","name","reducers","action","filenameList","length","filter","item","split","reverse","getVideoFileHandler","DownloadLogActions","useDownloadLogSlice","useInjectReducer","key","reducer","useInjectSaga","saga","DownloadLog","selectDownloadLogData","selectDownloadScreenshotsData","selectLoadingScreenshots","selectDownloadFileUrl","selectgetFileUrl","selectDownloadfileUrlError","selectDownloadScreenshotError","selectDownloadFileError","selectVideoFileName","selectVideoFileUrl","summaryTable","selectsummaryTableData","summaryTableData","NoContainDisplay","tabType","_jsxs","Flex","justifyContent","alignItems","flexDirection","bg","borderRadius","border","height","width","Text","_Fragment","style","marginTop","min","max","step","value","padding","alignContent","BsPlayCircle","cursor","BsStopCircle","TestSessionErrorType","summaryTableErrorType","REACT_APP_TEST_ANALYTICS_BASE_URL","BASE_URL_TEST_EXECUTE","getTestSessionData","testSessionDataLoaded","body","testSessionDataError","abortTestSagaWacher","requestUrl","JSON","stringify","abortTestApiResponse","abortedTestResponse","abortTestError","testSessionSaga","loadAbortTest","loadTestSessionData","testSessionActions","useTestSessionSlice","getsummaryTableData","summaryTableDataLoaded","events","summaryTableDataError","summaryTableSaga","loadsummaryTableData","summaryTableActions","useSummaryTableSlice","DisplayScreenErrorType","BASE_URL_FILE","getDisplayScreenData","params","localStorage","getItem","DisplayScreenData","DisplayScreenDataLoaded","columns","DisplayScreenDataError","getScreenshotsUrlData","DisplayScreenshotsUrlLoaded","DisplayScreenshotsUrlError","getScreenshotUrlSagawather","screenShotUrlLoaded","screenShotUrlError","DisplayScreenSaga","takeEvery","loadDisplayScreenData","loadDisplayScreenshots","loadScreenShotUrl","loadingScreenshot","errorLoadingScreenshot","DisplayScreenshotUrl","loadingScreenShotUrl","screenShotUrl","push","DisplayScreenActions","useDisplayScreenSlice","DisplayScreen","selectDisplayScreenData","selectScreenshotUrl","ScreenShotDisplay","deviceType","orientation","useParams","dispatch","useDispatch","slide","setSlide","useState","screenshotData","undefined","screen","setScreen","selectedScreenshotUrl","useSelector","useEffect","Image","objectFit","src","alt","onClick","leftArrowHandler","disabled","AiOutlineArrowLeft","rightArrowHandler","AiOutlineArrowRight","onChange","parseInt","target","VideoDisplay","videoUrl","playing","setPlaying","played","setPlayed","seeking","setSeeking","setUrl","playerRef","useRef","ReactPlayer","ref","backgroundColor","onProgress","onMouseDown","handleSeekMouseDown","parseFloat","onMouseUp","current","seekTo","playPauseHandler","BsPauseCircle","stopHandler","MobileDisplay","displaySceenData","screenshotsFlag","videoFlag","setDisplay","videoData","setVideodata","screenshotsData","setScreenshotsData","videoFilename","videofileUrl","fontFamily","RadioGroup","fontSize","Stack","spacing","direction","Radio","fontColor","setVideoFlag","setScreenshotsFlag","isLoading","downloadScreenshotsFileData","LoadingComponent","AccordionComponent","title","isUrl","rightItem","isDefault","Accordion","allowToggle","defaultIndex","AccordionItem","borderBottom","_ref2","isExpanded","AccordionButton","background","_hover","_focus","overflow","whiteSpace","textAlign","textOverflow","MinusIcon","pd","AddIcon","AccordionPanel","REACT_APP_LOGOUT_REDIRECTPAGE","GridItemComponent","heading","textTransform","referenceId","location","useLocation","pathWithoutId","pathname","replace","GridItem","display","openNewTab","window","open","MdOutlineLaunch","SessionidTable","_testSessionData$uuid","Object","keys","Grid","fontWeight","templateColumns","gridRowGap","gap","uuid","sessionId","dateTimeConverter","testStartTime","testEndTime","projectName","appVersion","scriptName","deviceName","deviceSerial","extra","trayName","deviceOSVersion","deviceLocation","deviceNetwork","operator","NoContent","message","DisplayTable","SubTabWrapper","paddingTop","TestCasesErrorType","getTestCasesData","testCasesData","testCasesDataLoaded","testCases","testCasesDataError","testCasesSaga","loadtestCasesData","testCasesActions","selectTestCasesData","SummaryTableComp","tableHeader","Table","variant","size","Thead","Tr","map","index","Th","Tbody","borderBottomColor","Td","testCase","kpiName","testCaseName","startTime","endTime","minWidth","status","eventName","time","TestCasesTable","TestCaseSummaryTableData","boxShadow","paddingBottom","paddingLeft","TestCaseExperienceErrorType","getTestCaseExperienceData","TestCaseExperienceData","TestCaseExperienceDataLoaded","experience","TestCaseExperienceDataError","TestCaseExperienceSaga","loadTestCaseExperienceData","TestCaseExperienceActions","TestCaseExperience","selectTestCaseExperienceData","ExperienceKPIsTableHeading","EventSummaryTableHeading","SummaryTable","testStatus","intervalId","loadData","setInterval","clearInterval","sortedTimestamps","sort","a","b","Date","TestCaseSummaryTableHeading","TestCases","testCaseData","flex","overflowY","css","boreder","getHarKpiData","harKpiData","HarHttpKpiDataLoaded","HarHttpKpiDataError","errorMessage","getHarChartData","response","fetch","harChartData","json","statusCode","HarChartDataResponse","HarChartSaga","loadHarHttpKpi","loadHarChart","getEntityData","entiesData","enties","issueSummaryEnties","pageTime","pages","startedDateTime","valueOf","startPageTime","i","startEntryTime","begningTime","connectTime","timings","connect","receiveTime","receive","sendTime","send","sslTime","ssl","waitTime","wait","blockedOpen","blockedClose","blocked","sslOpen","sslClose","connectOpen","connectClose","sendOpen","sendClose","waitOpen","waitClose","receiveOpen","receiveClose","reciveTooltip","toFixed","connectTooltip","sendTooltip","sslTooltip","waitTooltip","blockedTooltip","category","AssetType","content","mimeType","beginingTime","totalTime","getHarData","onContentLoad","pageTimings","onLoadTime","onLoad","Hardata","errors","HarEntiesData","HarGroupByData","HarIssueSummaryEnties","loadingUrl","harUrlData","harKpiErrors","HarChartDataLoaded","entries","HarData","allEntries","HarChartDataError","resetChartData","HarChartActions","useHarChartSlice","harActions","harChart","selectHarChartData","selectHarAnalysis","selectHarChartDetailData","selectHarLoading","selectHarKpiData","selectKpiHarLoading","selectHarKpiDataError","selectHarChart","ChartLayout","leftalign","paddingRight","StatusBox","Box","borderColor","marginRight","HarChartStatus","NoofRequest","alignSelf","RadioButton","radioFilter","setRadioFilter","radioFilterInputWaitTime","setRadioFilterInputWaitTime","radioFilterInputBlockedTime","setRadioFilterInputBlockedTime","radioFilterInputUrl","setRadioFilterInputUrl","radioFilterSelectAsset","setRadioFilterSelectAsset","ApplyFilterHandler","radioResetHandler","selectAssetType","Input","lineHeight","Select","placeholder","asset","ButtonComp","buttonHandler","relativepos","arr","columnPos","draw","testcase","tipRef","eventRef","fillStyle","position","beginPath","moveTo","lineTo","fill","strokeStyle","stroke","left","start","tippos","drawArea","EventPointerHar","isLeft","tooltipRef","eventElement","getContext","getBoundingClientRect","innerWidth","innerHeight","handleResize","canvas","mouseHandler","tooltip","val","x","clientX","zIndex","bgColor","right","top","save","clearRect","fillRect","font","fillText","restore","addEventListener","removeEventListener","getTwoDigitFormat","getThreeDigitFormat","SliderAxisHar","duration","labels","setLabels","isEnableEvent","setEventEnable","ticksize","labelInfo","unit","interval","unit2","perfect","Math","floor","makeLabels","margin","HStack","Switch","isFocusable","isChecked","checked","boxSize","am4core","am4themes_dataviz","am4themes_animated","HarChartComp","chartData","harData","obj","chart","am4charts","categoryAxis","yAxes","dataFields","renderer","template","truncate","warp","maxWidth","tooltipText","adapter","add","text","wrap","tooltipX","tooltipY","cellStartLocation","cellEndLocation","rotation","grid","minGridDistance","maxGridDistance","ticks","strokeOpacity","strokeWidth","inversed","valueAxis","xAxes","calculateTotals","opposite","createSeries","close","names","showSum","values","opacity","series","tooltipHTML","fillOpacity","getFillFromObject","valueX","openValueX","categoryY","clustered","sumBullet","bullets","horizontalCenter","verticalCenter","dx","abs","dataItem","dataContext","dispose","PopupComp","onClose","activePopup","CloseButton","fileDownload","require","DownloadJson","fileName","HiDownload","downloadHandler","CopyToClipBoardComp","isDownload","isNotHover","tooltipMessage","getText","setText","copyIcon","setCopyIcon","sx","CopyToClipboard","onCopy","setCopyIconHandler","setTimeout","MdContentCopy","TiTick","align","SummaryCard","getFilterInput","setFilterInput","pb","IssueSummaryPopup","filterHttpErrrorData","setFilterHttpErrorData","filterHttpError4xxData","setFilterHttpError4xxData","filterHttpError5xxData","setFilterHttpError5xxData","filterWaitTimeData","setFilterWaitTimeData","filterSlowuiThreadData","setFilterSlowuiThreadData","filterSSLData","setFilterSSLData","filterSlowNetworkData","setFilterSlowNetworkData","getFilterInputWaitTime","setFilterInputWaitTime","getFilterInputSlowUi","setFilterInputSlowUi","getFilterInputSSL","setFilterInputSSL","getFilterInputSLowNetWork","setFilterSlowNetWork","EntiesData","filterHttp4xxData","filterHttp5xxData","filterWaitTime","filterSlowUiThread","filterSslTime","filterSlowNewworkTime","marginBottom","UploadDownloadCard","DataExchangeCard","dataExchange","boxSizing","most_download","download","most_upload","upload","ChartJS","register","ArcElement","Legend","PieChart","pieData","sliceBackgroundColor","datasets","hoverBackgroundColor","hoverBorderColor","Pie","options","maintainAspectRatio","responsive","plugins","legend","boxWidth","maxHeight","elements","arc","borderWidth","SummaryPieBox","subtitle","isInfoMessage","PieLayout","backgroundColors","waterfall","total","TopAssets","assetbackgroudColor","timingbackground","methodbackground","statusbackground","SummaryPopCard","KpiSummary","selectUrl","setSelectUrl","getDataList","setDataList","harChartKpi","setHarChartKpi","setHarKpiData","completeList","kpi","har_summary","har_chart","chart_by_method","chart_by_status_code","chart_by_request_assets","chart_by_response_assets","chart_by_avg_timing_kpi","har_dataexchange","har_topAssets","har_topRequests","HarSummaryPopup","isOpen","onOpen","useDisclosure","togglePopup","setTogglePopup","popupHandler","issueAction","Img","Issuesummary","IssuesummaryActive","summaryAction","Summary","SummaryActive","HarChart","HarKpiData","HarFilter","startTimeIST","endTimeIST","setSelectAsset","harEntiesData","filterData","setFilterData","HarDetailData","dataArray","Set","str","trim","toLowerCase","includes","justifySelf","overflowX","GroupChartLayout","GroupComponent","group","GroupByChart","page","HarFileParse","harUrl","fileUrlData","isLoadingHar","harhttpResponse","HarAnalysis","harFlag","setHarFlag","getHarRefresh","setHarRefresh","loadingHarUrl","harKpiError","getUrl","minHeight","CustomIconButton","SubheaderSessionId","getUserEmail","abortTestHandler","getEmailId","Breadcrumb","textDecoration","separator","ChevronRightIcon","BreadcrumbItem","BreadcrumbLink","Link","to","ROUTES","LR_SESSION_SUMMARY","MOBILE_SESSION_SUMMARY","BiMobile","RiDeviceLine","testCaseSummary","passed","failed","lazyLoad","module","ScreentshotsViewer","SubTabsComponent","listofTabs","listofComponents","isSubContainer","rightContent","isBorder","orientationView","Tabs","isLazy","SubHeaderComp","TabList","borderBottomWidth","borderTop","tab","Tab","_selected","ScreentShotViewer","TabPanels","tabcomp","TabPanel","SubContainer","AppProfiling","LiveLog","getlivelogUrl","liveLog","getliveLogFlag","testConfiguration","captureLiveLogs","allowFullScreen","Testcasenetweb","dns","lighthouse","TestSession","features","selectFeatureFlagConfigData","toast","useToast","aportTestResponseData","loadingAboertResponse","isClosable","harEnable","enable","appProfilingEnable","testType","userEmail","livelogflag","currentTabId","setCurrentTabId","repoErrorText"],"mappings":"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","file":"static/js/15.92e5070c.chunk.js","sourcesContent":["import { Flex, Icon, Tooltip } from '@chakra-ui/react';\nimport React from 'react';\nimport { AiOutlineInfoCircle } from 'react-icons/ai';\n\nfunction InfoComponent({ labelmessage }) {\n  return (\n    <Tooltip label={labelmessage} placement=\"auto-start\">\n      <span>\n        <Icon\n          marginLeft=\"10px\"\n          color=\"#7E8299\"\n          w=\"14px\"\n          h=\"14px\"\n          as={AiOutlineInfoCircle}\n        />\n      </span>\n    </Tooltip>\n  );\n}\n\nexport default InfoComponent;\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\n// First select the relevant part from the state\nconst selectSlice = (state: RootState) => state.testSession || initialState;\n\nexport const selectTestSessionData = createSelector(\n  [selectSlice],\n  state => state.testSessionData,\n);\n\nexport const selectLoading = createSelector(\n  [selectSlice],\n  state => state.loading,\n);\n\nexport const selectError = createSelector([selectSlice], state => state.error);\nexport const selectAbortTestResponse = createSelector(\n  [selectSlice],\n  state => state.abortTestResponse,\n);\nexport const selectAbortTestError = createSelector(\n  [selectSlice],\n  state => state.errorTestAbort,\n);\nexport const selectLoadingAbort = createSelector(\n  [selectSlice],\n  state => state.loadingAbort,\n);\n","import { DownloadLogData } from 'types/DownloadLog';\n\n/* --- STATE --- */\nexport interface DownloadLogState {\n  loading: boolean;\n  error?: DownloadLogErrorType | null;\n  DownloadLogData: DownloadLogData[];\n  loadingScreenshots: boolean;\n  errorScreenshots?: DownloadLogErrorType | null;\n  DownloadScreenshotsData: DownloadLogData[];\n  loadingFileUrl: boolean;\n  errorFileUrl: DownloadLogErrorType | null;\n  DownloadFileUrl: DownloadFileUrl;\n  loadingVideoFileUrl: boolean;\n  errorVideoFileUrl: DownloadLogErrorType | null;\n  DownloadVideoFileUrl: String;\n  getFileUrlData: String;\n  videoFileName: String;\n}\n\nexport interface DownloadFileUrl {}\n\nexport enum DownloadLogErrorType {\n  RESPONSE_ERROR = 1,\n  TEST_NOT_FOUND = 2,\n}\n","// @ts-nocheck\nimport { call, put, takeLatest, delay } from 'redux-saga/effects';\nimport { request } from 'utils/request';\nimport { DownloadLogActions as actions } from '.';\nimport { DownloadLogData } from 'types/DownloadLog';\nimport { DownloadLogErrorType } from './types';\nimport GetIdToken from 'Authentication/configuration/GetIdToken';\nimport { REACT_APP_AUTOMATION_TESTING_BASE_URL } from 'utils/enviroment';\n\nconst BASE_URL = REACT_APP_AUTOMATION_TESTING_BASE_URL;\n\n\n/**\n * Github repos request/response handler\n */\n\n//console.log(idToken);\n\nexport function* getDownloadLogData(id) {\n  const idToken = GetIdToken();\n  //console.log(id.payload)\n  const requestURL = `${BASE_URL}/download?testId=${id.payload}&type=output`;\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  try {\n    // Call our request helper (see 'utils/request')\n    const DownloadLogData = yield call(request, requestURL, config);\n    //console.log(DownloadLogData);\n    if (DownloadLogData.hasOwnProperty('data')) {\n      yield put(actions.DownloadLogDataLoaded(DownloadLogData.data.list));\n    } else {\n      yield put(\n        actions.DownloadLogDataError(DownloadLogErrorType.RESPONSE_ERROR),\n      );\n    }\n  } catch (err) {\n    /*\n    if (err.response?.status === 404) {\n      yield put(actions.repoError(RepoErrorType.USER_NOT_FOUND));\n    } else if (err.message === 'Failed to fetch') {\n      yield put(actions.repoError(RepoErrorType.GITHUB_RATE_LIMIT));\n    } else {\n    */\n    yield put(\n      actions.DownloadLogDataError(DownloadLogErrorType.RESPONSE_ERROR),\n    );\n  }\n}\nexport function* getDownloadScreenshotsData(id) {\n  //console.log(id.payload)\n  const idToken = GetIdToken();\n  const requestURL = `${BASE_URL}/download?testId=${id.payload}&type=screenshots`;\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  try {\n    // Call our request helper (see 'utils/request')\n    const DownloadScreenshotsData = yield call(request, requestURL, config);\n    //  console.log(DownloadLogData)\n    if (DownloadScreenshotsData.hasOwnProperty('data')) {\n      yield put(\n        actions.DownloadScreenshotsDataLoaded(\n          DownloadScreenshotsData.data.list,\n        ),\n      );\n    } else {\n      yield put(\n        actions.DownloadScreenshotsDataError(\n          DownloadLogErrorType.RESPONSE_ERROR,\n        ),\n      );\n    }\n  } catch (err) {\n    /*\n    if (err.response?.status === 404) {\n      yield put(actions.repoError(RepoErrorType.USER_NOT_FOUND));\n    } else if (err.message === 'Failed to fetch') {\n      yield put(actions.repoError(RepoErrorType.GITHUB_RATE_LIMIT));\n    } else {\n    */\n    yield put(\n      actions.DownloadScreenshotsDataError(DownloadLogErrorType.RESPONSE_ERROR),\n    );\n  }\n}\n\nexport function* getDownloadFileUrlData(fileDownloadInfo) {\n  //console.log(fileDownloadInfo)\n  const idToken = GetIdToken();\n  const requestURL = `${BASE_URL}/download?testId=${fileDownloadInfo.payload.testId}&type=${fileDownloadInfo.payload.type}&fileName=${fileDownloadInfo.payload.filename}`;\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  try {\n    const DownloadFileUrl = yield call(request, requestURL, config);\n   \n    if (DownloadFileUrl.hasOwnProperty('data')) {\n      console.log({DownloadFileUrl})\n      if(fileDownloadInfo.payload.hasOwnProperty('forUse') && fileDownloadInfo.payload.forUse === 'getData') {\n        yield put(actions.getFileUrlLoaded(DownloadFileUrl.data.list));\n      }else{\n        yield put(actions.downloadFileUrlLoaded(DownloadFileUrl.data.list));\n      }\n\n    } else {\n      yield put(\n        actions.downloadFileUrlError(DownloadLogErrorType.RESPONSE_ERROR),\n      );\n    }\n  } catch (e) {\n    console.log(e)\n    yield put(\n      actions.downloadFileUrlError(DownloadLogErrorType.RESPONSE_ERROR),\n    );\n  }\n}\nexport function* getDownloadVideoFileUrlData(fileDownloadInfo) {\n  const idToken = GetIdToken();\n  //console.log(fileDownloadInfo)\n  const requestURL = `${BASE_URL}/download?testId=${fileDownloadInfo.payload.testId}&type=${fileDownloadInfo.payload.type}&fileName=${fileDownloadInfo.payload.filename}`;\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  try {\n    const DownloadFileUrl = yield call(request, requestURL, config);\n    if (DownloadFileUrl.hasOwnProperty('data')) {\n      // console.log(DownloadFileUrl);\n      yield put(\n        actions.downloadVideoFileUrlLoaded(DownloadFileUrl.data.list.url),\n      );\n    } else {\n      yield put(\n        actions.downloadVideoFileUrlError(DownloadLogErrorType.RESPONSE_ERROR),\n      );\n    }\n  } catch (e) {\n    yield put(\n      actions.downloadVideoFileUrlError(DownloadLogErrorType.RESPONSE_ERROR),\n    );\n  }\n}\n\nexport function* DownloadLogSaga() {\n  yield takeLatest(actions.loadDownloadFileUrl.type, getDownloadFileUrlData);\n  yield takeLatest(\n    actions.loadDownloadVideoFileUrl.type,\n    getDownloadVideoFileUrlData,\n  );\n  yield takeLatest(actions.loadDownloadLogData.type, getDownloadLogData);\n  yield takeLatest(\n    actions.loadDownloadScreenshotsData.type,\n    getDownloadScreenshotsData,\n  );\n}\n","// @ts-nocheck\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\nimport { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';\nimport { DownloadLogSaga } from './saga';\nimport { DownloadLogState } from './types';\n\nexport const initialState: DownloadLogState = {\n  loading: false,\n  error: null,\n  DownloadLogData: [],\n  loadingScreenshots: false,\n  errorScreenshots: null,\n  DownloadScreenshotsData: [],\n  loadingFileUrl: false,\n  errorFileUrl: null,\n  DownloadFileUrl: {},\n  getFileUrlData: {},\n  loadingVideoFileUrl: false,\n  errorVideoFileUrl: null,\n  DownloadVideoFileUrl: '',\n  videoFileName: '',\n};\n\nconst getVideoFileHandler = filenameList => {\n  //const filenameList =  [\"execution.log\", \"systemDebugLogs.log\", \"webcam_video.lvi\"]\n  if (filenameList.length === 0) {\n    return;\n  }\n  const videofileName = filenameList.filter(\n    (item: String) => item.split('.')[1] === 'mp4',\n    0,\n  );\n  const reverseList = [...videofileName].reverse();\n  return reverseList[0];\n};\n\nconst slice = createSlice({\n  name: 'DownloadLog',\n  initialState,\n  reducers: {\n    loadDownloadLogData: state => {\n      state.loading = true;\n    },\n    DownloadLogDataLoaded: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = null;\n      state.videoFileName = getVideoFileHandler(action.payload);\n      state.DownloadLogData = action.payload;\n    },\n    DownloadLogDataError: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = action.payload;\n      // state.DownloadLogData = [];\n    },\n    loadDownloadScreenshotsData: state => {\n      state.loadingScreenshots = true;\n    },\n    DownloadScreenshotsDataLoaded: (state, action: PayloadAction<any>) => {\n      state.loadingScreenshots = false;\n      state.errorScreenshots = null;\n      state.DownloadScreenshotsData = action.payload;\n    },\n    DownloadScreenshotsDataError: (state, action: PayloadAction<any>) => {\n      state.loadingScreenshots = false;\n      state.errorScreenshots = action.payload;\n      // state.DownloadLogData = [];\n    },\n    loadDownloadFileUrl: state => {\n      state.loadingFileUrl = true;\n    },\n    getFileUrlLoaded: (state, action: PayloadAction<any>) => {\n      state.loadingFileUrl = false;\n      state.errorFileUrl = null;\n      state.getFileUrlData = action.payload;\n    },\n    downloadFileUrlLoaded: (state, action: PayloadAction<any>) => {\n      state.loadingFileUrl = false;\n      state.errorFileUrl = null;\n      state.DownloadFileUrl = action.payload;\n    },\n    downloadFileUrlError: (state, action: PayloadAction<any>) => {\n      state.loadingFileUrl = false;\n      state.errorFileUrl = action.payload;\n      // state.DownloadLogData = [];\n    },\n    loadDownloadVideoFileUrl: state => {\n      state.loadingVideoFileUrl = true;\n    },\n    downloadVideoFileUrlLoaded: (state, action: PayloadAction<any>) => {\n      state.loadingVideoFileUrl = false;\n      state.errorVideoFileUrl = null;\n      state.DownloadVideoFileUrl = action.payload;\n    },\n    downloadVideoFileUrlError: (state, action: PayloadAction<any>) => {\n      state.loadingVideoFileUrl = false;\n      state.errorVideoFileUrl = action.payload;\n      // state.DownloadLogData = [];\n    },\n  },\n});\n\nexport const { actions: DownloadLogActions } = slice;\n\nexport const useDownloadLogSlice = () => {\n  useInjectReducer({ key: slice.name, reducer: slice.reducer });\n  useInjectSaga({ key: slice.name, saga: DownloadLogSaga });\n  return { actions: slice.actions };\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\n// First select the relevant part from the state\nconst selectSlice = (state: RootState) => state.DownloadLog || initialState;\n\nexport const selectDownloadLogData = createSelector(\n  [selectSlice],\n  state => state.DownloadLogData,\n);\nexport const selectDownloadScreenshotsData = createSelector(\n  [selectSlice],\n  state => state.DownloadScreenshotsData,\n);\n\nexport const selectLoading = createSelector(\n  [selectSlice],\n  state => state.loading,\n);\nexport const selectLoadingScreenshots = createSelector(\n  [selectSlice],\n  state => state.loadingScreenshots,\n);\n\nexport const selectError = createSelector([selectSlice], state => state.error);\n\nexport const selectDownloadFileUrl = createSelector(\n  [selectSlice],\n  state => state.DownloadFileUrl,\n);\nexport const selectgetFileUrl = createSelector(\n  [selectSlice],\n  state => state.getFileUrlData,\n);\n\nexport const selectDownloadfileUrlError = createSelector(\n  [selectSlice],\n  state => state.errorFileUrl,\n);\n\nexport const selectDownloadScreenshotError = createSelector(\n  [selectSlice],\n  state => state.errorScreenshots,\n);\nexport const selectDownloadFileError = createSelector(\n  [selectSlice],\n  state => state.error,\n);\nexport const selectVideoFileName = createSelector(\n  [selectSlice],\n  state => state.videoFileName,\n);\nexport const selectVideoFileUrl = createSelector(\n  [selectSlice],\n  state => state.DownloadVideoFileUrl,\n);\n\n/*\nimport { createSelector } from '@reduxjs/toolkit';\n\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\nconst selectSlice = (state: RootState) => state.DownloadLog || initialState;\n\nexport const selectTestCases = createSelector(\n  [selectSlice],\n  state => state,\n);\n*/\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\n// First select the relevant part from the state\nconst selectSlice = (state: RootState) => state.summaryTable || initialState;\n\nexport const selectsummaryTableData = createSelector(\n  [selectSlice],\n  state => state.summaryTableData,\n);\n\nexport const selectLoading = createSelector(\n  [selectSlice],\n  state => state.loading,\n);\n\nexport const selectError = createSelector([selectSlice], state => state.error);\n\n/*\nimport { createSelector } from '@reduxjs/toolkit';\n\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\nconst selectSlice = (state: RootState) => state.summaryTable || initialState;\n\nexport const selectsummaryTable = createSelector(\n  [selectSlice],\n  state => state,\n);\n*/\n","import { Flex, Icon, Image, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport { AiOutlineArrowRight, AiOutlineArrowLeft } from 'react-icons/ai';\nimport { BsPauseCircle, BsPlayCircle, BsStopCircle } from 'react-icons/bs';\n\nfunction NoContainDisplay({ tabType }) {\n  return (\n    <Flex\n      justifyContent=\"flex-start\"\n      alignItems=\"center\"\n      flexDirection=\"column\"\n    >\n      <Flex\n        bg=\"black\"\n        borderRadius=\"10px\"\n        //  bg=\"white\"\n        border=\"4px solid #3F4254\"\n        height=\"379px\"\n        //   alignContent=\"center\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        width={\n          tabType === 'TV' || tabType === 'lr-interact' ? '550px' : '180px'\n        }\n        //     width=\"180px\"\n        //   height=\"379px\"\n      >\n      \n        <Text color=\"red1\">No Data</Text>\n      </Flex>\n    \n      {tabType !== 'lr-interact' && (\n        <>\n          <input\n            style={{ width: '170px', marginTop: '8px' }}\n            type=\"range\"\n            min={0}\n            max={0.999999}\n            step=\"any\"\n            value={0}\n \n          />\n\n\n          <Flex\n            justifyContent=\"space-evenly\"\n            width=\"185px\"\n            padding=\"10px 25px\"\n            alignContent=\"center\"\n          >\n            <Flex\n              alignContent=\"center\"\n              //onClick={playPauseHandler}\n              justifyContent=\"center\"\n              color=\"#094284\"\n              width=\"25px\"\n              height=\"25px\"\n            >\n              {false ? (\n                <Icon\n                  width=\"24px\"\n                  height=\"24px\"\n                  as={BsPauseCircle}\n                  cursor=\"pointer\"\n                ></Icon>\n              ) : (\n                <Icon\n                  width=\"24px\"\n                  height=\"24px\"\n                  as={BsPlayCircle}\n                  cursor=\"pointer\"\n                ></Icon>\n              )}\n            </Flex>\n            <Flex\n              alignContent=\"center\"\n              // onClick={playPauseHandler}\n              justifyContent=\"center\"\n              color=\"red1\"\n              width=\"25px\"\n              height=\"25px\"\n            >\n              <Icon\n                // onClick={stopHandler}\n                width=\"24\"\n                marginLeft=\"4\"\n                height=\"6\"\n                cursor=\"pointer\"\n                as={BsStopCircle}\n              ></Icon>\n            </Flex>\n          </Flex>\n        </>\n      )}\n    </Flex>\n  );\n}\n\nexport default NoContainDisplay;\n","/* --- STATE --- */\n\nimport { TestSessionData } from 'types/TestSession';\n\n/* --- STATE --- */\nexport interface TestSessionState {\n  loading: boolean;\n  error?: TestSessionErrorType | null;\n  testSessionData: TestSessionData;\n  loadingAbort: boolean;\n  abortTestResponse: AbprtTestResponse;\n  errorTestAbort: TestSessionErrorType | null;\n}\n\ninterface AbprtTestResponse {}\n\nexport enum TestSessionErrorType {\n  RESPONSE_ERROR = 1,\n  TEST_NOT_FOUND = 2,\n}\n","/* --- STATE --- */\n\nimport { summaryTableData } from 'types/summaryTable';\n\n/* --- STATE --- */\nexport interface summaryTableState {\n  loading: boolean;\n  error?: summaryTableErrorType | null;\n  summaryTableData: summaryTableData[];\n}\n\nexport enum summaryTableErrorType {\n  RESPONSE_ERROR = 1,\n  TEST_NOT_FOUND = 2,\n}\n","import { call, put, takeLatest, delay } from 'redux-saga/effects';\nimport { request } from 'utils/request';\nimport { testSessionActions as actions } from '.';\nimport { TestSessionData } from 'types/TestSession';\nimport { TestSessionErrorType } from './types';\nimport GetIdToken from 'Authentication/configuration/GetIdToken';\nimport { REACT_APP_AUTOMATION_TESTING_BASE_URL, REACT_APP_TEST_ANALYTICS_BASE_URL } from 'utils/enviroment';\n\n/**\n * Github repos request/response handler\n */\n\n\nconst BASE_URL = REACT_APP_TEST_ANALYTICS_BASE_URL;\nconst BASE_URL_TEST_EXECUTE = REACT_APP_AUTOMATION_TESTING_BASE_URL;\n////console.log(BASE_URL)\n\nexport function* getTestSessionData(id) {\n  const idToken = GetIdToken();\n  const testId = id.payload;\n\n  const requestURL = `${BASE_URL}/tests/${testId}/info`;\n  // const requestURL = `${BASE_URL}/tests/${testId}/info?testStatus=${localStorage.getItem(\n  //   'testStatus',\n  // )}`;\n\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n\n  try {\n    // Call our request helper (see 'utils/request')\n    const testSessionData = yield call(request, requestURL, config);\n    //console.log(testSessionData.body)\n    if (testSessionData.hasOwnProperty('body')) {\n      // console.log(testSessionData)\n      yield put(actions.testSessionDataLoaded(testSessionData.body));\n    } else {\n      yield put(\n        actions.testSessionDataError(TestSessionErrorType.RESPONSE_ERROR),\n      );\n      // console.log(\"can not get response\")\n    }\n  } catch (err) {\n    yield put(\n      actions.testSessionDataError(TestSessionErrorType.RESPONSE_ERROR),\n    );\n    //  //console.log(err)\n  }\n}\n\nfunction* abortTestSagaWacher(testId) {\n  const idToken = GetIdToken();\n  const requestUrl = `${BASE_URL_TEST_EXECUTE}/tests`; //'https://development-api.mozark.ai/testexecute/tests'\n\n  const config = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n    body: JSON.stringify({ testId: testId.payload }),\n  };\n\n  try {\n    const abortTestApiResponse = yield call(request, requestUrl, config);\n    //console.log(abortTestApiResponse);\n    if (abortTestApiResponse.hasOwnProperty('status')) {\n      yield put(actions.abortedTestResponse(abortTestApiResponse));\n    } else {\n      yield put(actions.abortTestError(TestSessionErrorType.RESPONSE_ERROR));\n    }\n  } catch (err) {\n    yield put(actions.abortTestError(TestSessionErrorType.RESPONSE_ERROR));\n  }\n}\n\n/**\n * Root saga manages watcher lifecycle\n */\nexport function* testSessionSaga() {\n  // Watches for loadRepos actions and calls getRepos when one comes in.\n  // By using `takeLatest` only the result of the latest API call is applied.\n  // It returns task descriptor (just like fork) so we can continue execution\n  // It will be cancelled automatically on component unmount\n  yield takeLatest(actions.loadAbortTest.type, abortTestSagaWacher);\n  yield takeLatest(actions.loadTestSessionData.type, getTestSessionData);\n}\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\nimport { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';\nimport { testSessionSaga } from './saga';\nimport { TestSessionState } from './types';\n\nexport const initialState: TestSessionState = {\n  loading: false,\n  error: null,\n  testSessionData: {},\n  loadingAbort: false,\n  abortTestResponse: {},\n  errorTestAbort: null,\n};\n\nconst slice = createSlice({\n  name: 'testSession',\n  initialState,\n  reducers: {\n    loadTestSessionData: state => {\n      state.loading = true;\n    },\n    testSessionDataLoaded: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = null;\n      state.testSessionData = action.payload;\n    },\n    testSessionDataError: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.testSessionData = {};\n    },\n    loadAbortTest: state => {\n      state.loadingAbort = true;\n    },\n    abortedTestResponse: (state, action: PayloadAction<any>) => {\n      state.loadingAbort = false;\n      state.abortTestResponse = action.payload;\n      state.errorTestAbort = null;\n    },\n    abortTestError: (state, action: PayloadAction<any>) => {\n      state.loadingAbort = false;\n      state.errorTestAbort = action.payload;\n    },\n  },\n});\n\nexport const { actions: testSessionActions } = slice;\n\nexport const useTestSessionSlice = () => {\n  useInjectReducer({ key: slice.name, reducer: slice.reducer });\n  useInjectSaga({ key: slice.name, saga: testSessionSaga });\n  return { actions: slice.actions };\n};\n\n/**\n * Example Usage:\n *\n * export function MyComponentNeedingThisSlice() {\n *  const { actions } = useTestSessionSlice();\n *\n *  const onButtonClick = (evt) => {\n *    dispatch(actions.someAction());\n *   };\n * }\n */\n","// @ts-nocheck\nimport { call, put, takeLatest, delay } from 'redux-saga/effects';\nimport { request } from 'utils/request';\nimport { summaryTableActions as actions } from '.';\nimport { summaryTableData } from 'types/summaryTable';\nimport { summaryTableErrorType } from './types';\nimport GetIdToken from 'Authentication/configuration/GetIdToken';\nimport { REACT_APP_TEST_ANALYTICS_BASE_URL } from 'utils/enviroment';\n\n//require('dotenv').config();\n\nconst BASE_URL = REACT_APP_TEST_ANALYTICS_BASE_URL;\n\n\n/**\n * Github repos request/response handler\n */\nexport function* getsummaryTableData(id) {\n  const idToken = GetIdToken();\n  const requestURL = `${BASE_URL}/tests/${id.payload}/app/events`;\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  try {\n    // Call our request helper (see 'utils/request')\n    const summaryTableData = yield call(request, requestURL, config);\n    //console.log(summaryTableData.body.events);\n    if (summaryTableData.hasOwnProperty('body')) {\n      yield put(actions.summaryTableDataLoaded(summaryTableData.body.events));\n    } else {\n      yield put(\n        actions.summaryTableDataError(summaryTableErrorType.RESPONSE_ERROR),\n      );\n    }\n  } catch (err) {\n    /*\n    if (err.response?.status === 404) {\n      yield put(actions.repoError(RepoErrorType.USER_NOT_FOUND));\n    } else if (err.message === 'Failed to fetch') {\n      yield put(actions.repoError(RepoErrorType.GITHUB_RATE_LIMIT));\n    } else {\n    */\n    yield put(\n      actions.summaryTableDataError(summaryTableErrorType.RESPONSE_ERROR),\n    );\n  }\n}\n\n/**\n * Root saga manages watcher lifecycle\n */\nexport function* summaryTableSaga() {\n  // Watches for loadRepos actions and calls getRepos when one comes in.\n  // By using `takeLatest` only the result of the latest API call is applied.\n  // It returns task descriptor (just like fork) so we can continue execution\n  // It will be cancelled automatically on component unmount\n  yield takeLatest(actions.loadsummaryTableData.type, getsummaryTableData);\n}\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\nimport { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';\nimport { summaryTableSaga } from './saga';\nimport { summaryTableState } from './types';\n\nexport const initialState: summaryTableState = {\n  loading: false,\n  error: null,\n  summaryTableData: [],\n};\n\nconst slice = createSlice({\n  name: 'summaryTable',\n  initialState,\n  reducers: {\n    loadsummaryTableData: state => {\n      state.loading = true;\n    },\n    summaryTableDataLoaded: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = null;\n      state.summaryTableData = action.payload;\n    },\n    summaryTableDataError: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const { actions: summaryTableActions } = slice;\n\nexport const useSummaryTableSlice = () => {\n  useInjectReducer({ key: slice.name, reducer: slice.reducer });\n  useInjectSaga({ key: slice.name, saga: summaryTableSaga });\n  return { actions: slice.actions };\n};\n\n/**\n * Example Usage:\n *\n * export function MyComponentNeedingThisSlice() {\n *  const { actions } = usesummaryTableSlice();\n *\n *  const onButtonClick = (evt) => {\n *    dispatch(actions.someAction());\n *   };\n * }\n */\n","/* --- STATE --- */\n\nimport { DisplayScreenData } from 'types/DisplaySceen';\n\n/* --- STATE --- */\nexport interface DisplayScreenState {\n  loading: boolean;\n  error?: DisplayScreenErrorType | null;\n  DisplayScreenData: DisplayScreenData[];\n  loadingScreenshot: boolean;\n  errorLoadingScreenshot: DisplayScreenErrorType | null;\n  DisplayScreenshotUrl: DisplayScreenshotsUrl;\n  loadingScreenShotUrl: boolean;\n  screenShotUrl: String;\n  screenShotUrlError: null | DisplayScreenErrorType;\n}\n\ninterface DisplayScreenshotsUrl {}\n\nexport enum DisplayScreenErrorType {\n  RESPONSE_ERROR = 1,\n  TEST_NOT_FOUND = 2,\n}\n","import GetIdToken from 'Authentication/configuration/GetIdToken';\nimport { call, put, takeLatest, delay, takeEvery } from 'redux-saga/effects';\nimport { request } from 'utils/request';\nimport { DisplayScreenActions as actions } from '.';\nimport { DisplayScreenErrorType } from './types';\nimport { REACT_APP_AUTOMATION_TESTING_BASE_URL, REACT_APP_TEST_ANALYTICS_BASE_URL } from 'utils/enviroment';\n\nconst BASE_URL = REACT_APP_TEST_ANALYTICS_BASE_URL;\n\nconst BASE_URL_FILE = REACT_APP_AUTOMATION_TESTING_BASE_URL;\n\n\n/**\n * Github repos request/response handler\n */\nexport function* getDisplayScreenData(params) {\n  const idToken = GetIdToken();\n  //console.log(params.payload);\n  // yield delay(1000);\n  //  const requestURL = `${BASE_URL}/test-session`;\n  const requestURL = `${BASE_URL}/tests/${\n    params.payload.testId\n  }/device/resource/${params.payload.name}?testStatus=${localStorage.getItem(\n    'testStatus',\n  )}`;\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n    },\n  };\n\n  try {\n    // Call our request helper (see 'utils/request')\n    const DisplayScreenData = yield call(request, requestURL, config);\n    // console.log(DisplayScreenData);\n    if (DisplayScreenData.hasOwnProperty('body')) {\n      // console.log(DisplayScreenData.body.columns);\n\n      yield put(\n        actions.DisplayScreenDataLoaded(DisplayScreenData.body.columns),\n      );\n    } else {\n      yield put(\n        actions.DisplayScreenDataError(DisplayScreenErrorType.RESPONSE_ERROR),\n      );\n    }\n  } catch (err) {\n    /*\n    if (err.response?.status === 404) {\n      yield put(actions.repoError(RepoErrorType.USER_NOT_FOUND));\n    } else if (err.message === 'Failed to fetch') {\n      yield put(actions.repoError(RepoErrorType.GITHUB_RATE_LIMIT));\n    } else {\n    */\n    yield put(\n      actions.DisplayScreenDataError(DisplayScreenErrorType.RESPONSE_ERROR),\n    );\n  }\n}\n\nexport function* getScreenshotsUrlData(fileDownloadInfo) {\n  const idToken = GetIdToken();\n  //console.log(fileDownloadInfo)\n  const requestURL = `${BASE_URL}/download?testId=${fileDownloadInfo.payload.testId}&type=output&fileName=${fileDownloadInfo.payload.filename}`;\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n    },\n  };\n  try {\n    const DownloadFileUrl = yield call(request, requestURL, config);\n    if (DownloadFileUrl.hasOwnProperty('data')) {\n      yield put(actions.DisplayScreenshotsUrlLoaded(DownloadFileUrl.data.list));\n    } else {\n      yield put(\n        actions.DisplayScreenshotsUrlError(\n          DisplayScreenErrorType.RESPONSE_ERROR,\n        ),\n      );\n    }\n  } catch (e) {\n    yield put(\n      actions.DisplayScreenshotsUrlError(DisplayScreenErrorType.RESPONSE_ERROR),\n    );\n  }\n}\n\nfunction* getScreenshotUrlSagawather(fileDownloadInfo) {\n  const idToken = GetIdToken();\n  //console.log(fileDownloadInfo);\n  const requestURL = `${BASE_URL_FILE}/download?testId=${fileDownloadInfo.payload.testId}&type=screenshots&fileName=${fileDownloadInfo.payload.filename}`;\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  try {\n    const DownloadFileUrl = yield call(request, requestURL, config);\n    if (DownloadFileUrl.hasOwnProperty('data')) {\n      if (DownloadFileUrl.data.hasOwnProperty('list')) {\n        yield put(actions.screenShotUrlLoaded(DownloadFileUrl.data.list.url));\n      } else {\n        yield put(\n          actions.screenShotUrlError(DisplayScreenErrorType.RESPONSE_ERROR),\n        );\n      }\n    } else {\n      yield put(\n        actions.screenShotUrlError(DisplayScreenErrorType.RESPONSE_ERROR),\n      );\n    }\n  } catch (e) {\n    yield put(\n      actions.screenShotUrlError(DisplayScreenErrorType.RESPONSE_ERROR),\n    );\n  }\n}\n\n/**\n * Root saga manages watcher lifecycle\n */\nexport function* DisplayScreenSaga() {\n  // Watches for loadRepos actions and calls getRepos when one comes in.\n  // By using `takeLatest` only the result of the latest API call is applied.\n  // It returns task descriptor (just like fork) so we can continue execution\n  // It will be cancelled automatically on component unmount\n\n  yield takeEvery(actions.loadDisplayScreenData.type, getDisplayScreenData);\n  yield takeEvery(actions.loadDisplayScreenshots.type, getScreenshotsUrlData);\n  yield takeLatest(actions.loadScreenShotUrl.type, getScreenshotUrlSagawather);\n}\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\nimport { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';\nimport { DisplayScreenSaga } from './saga';\nimport { DisplayScreenState } from './types';\n\nexport const initialState: DisplayScreenState = {\n  loading: false,\n  error: null,\n  DisplayScreenData: [],\n  loadingScreenshot: false,\n  errorLoadingScreenshot: null,\n  DisplayScreenshotUrl: {},\n  loadingScreenShotUrl: false,\n  screenShotUrl: '',\n  screenShotUrlError: null,\n};\n\nconst slice = createSlice({\n  name: 'DisplayScreen',\n  initialState,\n  reducers: {\n    loadDisplayScreenData: state => {\n      state.loading = true;\n    },\n    DisplayScreenDataLoaded: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = null;\n      // console.log(action.payload)\n      if (action.payload.length === 0) {\n        state.DisplayScreenData = [];\n      } else {\n        state.DisplayScreenData.push(action.payload);\n      }\n    },\n    DisplayScreenDataError: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = action.payload;\n      // state.DisplayScreenData = [];\n    },\n    loadDisplayScreenshots: state => {\n      state.loadingScreenshot = true;\n    },\n    DisplayScreenshotsUrlLoaded: (state, action: PayloadAction<any>) => {\n      state.loadingScreenshot = false;\n      state.errorLoadingScreenshot = null;\n      state.DisplayScreenshotUrl = action.payload;\n    },\n    DisplayScreenshotsUrlError: (state, action: PayloadAction<any>) => {\n      state.loadingScreenshot = false;\n      state.errorLoadingScreenshot = action.payload;\n    },\n    loadScreenShotUrl: state => {\n      state.loadingScreenShotUrl = true;\n    },\n    screenShotUrlLoaded: (state, action: PayloadAction<any>) => {\n      state.loadingScreenShotUrl = false;\n      state.screenShotUrl = action.payload;\n      state.screenShotUrlError = null;\n    },\n    screenShotUrlError: (state, action: PayloadAction<any>) => {\n      state.loadingScreenShotUrl = false;\n      state.screenShotUrlError = action.payload;\n    },\n  },\n});\n\nexport const { actions: DisplayScreenActions } = slice;\n\nexport const useDisplayScreenSlice = () => {\n  useInjectReducer({ key: slice.name, reducer: slice.reducer });\n  useInjectSaga({ key: slice.name, saga: DisplayScreenSaga });\n  return { actions: slice.actions };\n};\n\n/**\n * Example Usage:\n *\n * export function MyComponentNeedingThisSlice() {\n *  const { actions } = useDisplayScreenSlice();\n *\n *  const onButtonClick = (evt) => {\n *    dispatch(actions.someAction());\n *   };\n * }\n */\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\n// First select the relevant part from the state\nconst selectSlice = (state: RootState) => state.DisplayScreen || initialState;\n\nexport const selectDisplayScreenData = createSelector(\n  [selectSlice],\n  state => state.DisplayScreenData,\n);\n\nexport const selectLoading = createSelector(\n  [selectSlice],\n  state => state.loading,\n);\n\nexport const selectError = createSelector([selectSlice], state => state.error);\n\nexport const selectScreenshotUrl = createSelector(\n  [selectSlice],\n  state => state.screenShotUrl,\n);\n\n/*\nimport { createSelector } from '@reduxjs/toolkit';\n\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\nconst selectSlice = (state: RootState) => state.DisplayScreen || initialState;\n\nexport const selectDisplayScreen = createSelector(\n  [selectSlice],\n  state => state,\n);\n*/\n","// @ts-nocheck\nimport { Flex, Icon, Image } from '@chakra-ui/react';\nimport { selectDownloadScreenshotsData } from 'app/pages/DownLoadLog/slice/selectors';\nimport React, { useEffect, useState } from 'react';\nimport { AiOutlineArrowLeft, AiOutlineArrowRight } from 'react-icons/ai';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useDisplayScreenSlice } from '../slice';\nimport { selectScreenshotUrl } from '../slice/selectors';\n\n// const defaultImage = [\n//   'https://s3.ap-south-1.amazonaws.com/hotstar.screenshot.png/271941/img_2022-03-21--10-18-28.jpg',\n//   'https://s3.ap-south-1.amazonaws.com/hotstar.screenshot.png/271941/img_2022-03-21--10-18-28.jpg',\n//   'https://s3.ap-south-1.amazonaws.com/hotstar.screenshot.png/271941/img_2022-03-21--10-18-33.jpg',\n//   'https://s3.ap-south-1.amazonaws.com/hotstar.screenshot.png/271941/img_2022-03-21--10-18-44.jpg',\n//   'https://s3.ap-south-1.amazonaws.com/hotstar.screenshot.png/271941/img_2022-03-21--10-19-04.jpg',\n//   'https://s3.ap-south-1.amazonaws.com/hotstar.screenshot.png/271941/img_2022-03-21--10-19-13.jpg',\n//   'https://s3.ap-south-1.amazonaws.com/hotstar.screenshot.png/271941/img_2022-03-21--10-19-58.jpg',\n//   'https://s3.ap-south-1.amazonaws.com/hotstar.screenshot.png/271941/img_2022-03-21--10-21-08.jpg',\n//   'https://s3.ap-south-1.amazonaws.com/hotstar.screenshot.png/271941/img_2022-03-21--10-21-30.jpg',\n//   'https://s3.ap-south-1.amazonaws.com/hotstar.screenshot.png/271941/img_2022-03-21--10-21-54.jpg',\n//   'https://s3.ap-south-1.amazonaws.com/hotstar.screenshot.png/271941/img_2022-03-21--10-22-19.jpg',\n// ];\n\nfunction ScreenShotDisplay({ screenShotUrl, tabType , deviceType , orientation}) {\n  const { actions } = useDisplayScreenSlice();\n  const { testId } = useParams();\n  const dispatch = useDispatch();\n  const [slide, setSlide] = useState(0);\n  const screenshotData = screenShotUrl !== undefined ? screenShotUrl : [];\n  const [screen, setScreen] = useState(screenshotData[slide]);\n  const selectedScreenshotUrl = useSelector(selectScreenshotUrl);\n\n  useEffect(() => {\n    dispatch(\n      actions.loadScreenShotUrl({\n        testId: testId,\n        filename: screenshotData[slide],\n      }),\n    );\n  }, []);\n\n  const rightArrowHandler = () => {\n    if (slide < screenshotData.length - 1) {\n      const value = slide + 1;\n      setSlide(value);\n      setScreen(screenshotData[slide]);\n      dispatch(\n        actions.loadScreenShotUrl({\n          testId: testId,\n          filename: screenshotData[value],\n        }),\n      );\n    }\n  };\n  const leftArrowHandler = () => {\n    if (slide > 0) {\n      const value = slide - 1;\n      setSlide(value);\n      setScreen(screenshotData[slide]);\n      dispatch(\n        actions.loadScreenShotUrl({\n          testId: testId,\n          filename: screenshotData[value],\n        }),\n      );\n    }\n  };\n\n  const handleSlideChange = e => {\n    //console.log(e.target.value)\n    setSlide(parseInt(e.target.value));\n    setScreen(screenshotData[slide]);\n    dispatch(\n      actions.loadScreenShotUrl({\n        testId: testId,\n        filename: screenshotData[parseInt(e.target.value)],\n      }),\n    );\n  };\n\n  // console.log(screen)\n  // console.log(selectedScreenshotUrl)\n\n  // useEffect(() => {\n  //   dispatch(actions.loadDisplayScreenshots({ testId,  filename : screen } ))\n  // }, [screen])\n\n  return (\n    <Flex\n      justifyContent=\"flex-start\"\n      alignItems=\"center\"\n      flexDirection=\"column\"\n    >\n      <Flex\n        // bg=\"black\"\n        // borderRadius=\"10px\"\n        // bg=\"white\"\n        // border=\"4px solid #3F4254\"\n        // width=\"180px\"\n        // height=\"379px\"\n        alignContent=\"center\"\n        justifyContent=\"center\"\n      >\n        <Image\n          borderRadius=\"8px\"\n          bg=\"black\"\n          padding=\".5px\"\n          border=\"5px solid #3F4254\"\n          objectFit=\"fill\"\n          // borderRadius=\"7px\"\n          //objectFit=\"cover\"\n          height=\"379px\"\n          src={selectedScreenshotUrl}\n          alt=\"NO content avaliable\"\n          width={\n            (tabType === 'lr-interact' || deviceType === 'tv'|| orientation ==='landscape')\n              ? '600px'\n              : '180px'\n          }\n        ></Image>\n      </Flex>\n\n      <Flex\n        justifyContent=\"space-evenly\"\n        width=\"185px\"\n        padding=\"10px 25px\"\n        alignContent=\"center\"\n      >\n        <Flex\n          alignContent=\"center\"\n          onClick={leftArrowHandler}\n          justifyContent=\"center\"\n          disabled={slide <= 0 ? true : false}\n          width=\"25px\"\n          height=\"25px\"\n          color=\"red1\"\n        >\n          <Icon\n            data-icon=\"left-screenshot-arrow\"\n            width=\"24px\"\n            height=\"24px\"\n            as={AiOutlineArrowLeft}\n            cursor=\"pointer\"\n          ></Icon>\n        </Flex>\n        <Flex\n          alignContent=\"center\"\n          onClick={rightArrowHandler}\n          disabled={slide >= screenshotData.length - 1 ? true : false}\n          justifyContent=\"center\"\n          color=\"red1\"\n          width=\"25px\"\n          height=\"25px\"\n        >\n          <Icon\n            // onClick={stopScreenShotHandler}\n            data-icon=\"right-screenshot-arrow\"\n            width=\"24\"\n            marginLeft=\"4\"\n            height=\"6\"\n            cursor=\"pointer\"\n            as={AiOutlineArrowRight}\n          ></Icon>\n        </Flex>\n      </Flex>\n      <Flex\n        justifyContent=\"space-evenly\"\n        width=\"185px\"\n        padding=\"0px 25px\"\n        alignContent=\"center\"\n      >\n        <input\n          data-input-slider=\"slider-screenshots\"\n          style={{ width: '170px', marginTop: '5px' }}\n          type=\"range\"\n          min={0}\n          max={screenshotData.length - 1}\n          step={1}\n          value={slide}\n          // onMouseDown={handleSeekMouseDown}\n          onChange={handleSlideChange}\n        />\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default ScreenShotDisplay;\n","// @ts-nocheck\nimport { Flex, Icon } from '@chakra-ui/react';\nimport React, { useRef, useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport mobile from '../../../../styles/Assets/display1.png';\nimport play from '../../../../styles/Assets/Play.svg';\nimport stop from '../../../../styles/Assets/Stop.svg';\nimport { BsPauseCircle, BsPlayCircle, BsStopCircle } from 'react-icons/bs';\n//import samplesrc  from '../Assets/js_demo.mp4'\nfunction VideoDisplay({ videoUrl, tabType, deviceType , orientation}) {\n  const [playing, setPlaying] = useState(false);\n  const [played, setPlayed] = useState(0);\n  const [seeking, setSeeking] = useState(false);\n  const [url, setUrl] = useState(videoUrl);\n  const playerRef = useRef();\n  //console.log(videoUrl);\n  const playPauseHandler = () => {\n    setPlaying(!playing);\n  };\n  const stopHandler = () => {\n    setPlaying(false);\n    setPlayed(0);\n    playerRef.current && playerRef.current.seekTo(0);\n  };\n  const handleSeekMouseDown = () => {\n    //console.log('handleSeekMouse')\n    setSeeking(true);\n  };\n\n  const handleSeekChange = e => {\n    setPlayed(parseFloat(e.target.value));\n    // console.log(played)\n  };\n  const handleSeekMouseUp = e => {\n    //console.log('handleSeekMouseUp')\n    //console.log(parseFloat(e.target.value))\n    setSeeking(false);\n    playerRef.current && playerRef.current.seekTo(parseFloat(e.target.value));\n  };\n\n  return (\n    <Flex\n      justifyContent=\"flex-start\"\n      alignItems=\"center\"\n      flexDirection=\"column\"\n    >\n      <Flex\n        width={(tabType === 'lr-automation' || deviceType ==='tv' || orientation === 'landscape') ? '600px' : '180px'}\n        //height=\"379px\"\n        borderRadius=\"8px\"\n        bg=\"#3F4254\"\n        border=\"4px solid #3F4254\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <ReactPlayer\n          ref={playerRef}\n          style={{\n            borderRadius: '10px',\n            objectFit: 'cover',\n            backgroundColor: 'black',\n          }}\n          //type=\"video/avi\"\n          playing={playing}\n          url={videoUrl}\n          //   url=\"https://mozark-builds.s3.ap-south-1.amazonaws.com/65432.avi\"\n          //url  ={{src: samplesrc , type: 'video/mp4'} }\n          //url='https://mozark-builds.s3.ap-south-1.amazonaws.com/webcam_video-test.avi'\n          width={(tabType === 'lr-automation'|| deviceType === 'tv' || orientation === 'landscape') ? '600px' : '180px'}\n          //height=\"370px\"\n          height={(tabType === 'lr-automation' || deviceType === 'tv' || orientation === 'landscape') ? '370px' : '370px'}\n          onProgress={data => setPlayed(data.played)}\n        ></ReactPlayer>\n      </Flex>\n      <input\n        style={{ width: '170px', marginTop: '8px' }}\n        type=\"range\"\n        min={0}\n        max={0.999999}\n        step=\"any\"\n        value={played}\n        onMouseDown={handleSeekMouseDown}\n        onChange={handleSeekChange}\n        onMouseUp={handleSeekMouseUp}\n      />\n\n      {/* <progress max={1} value={played} /> */}\n\n      <Flex\n        justifyContent=\"space-evenly\"\n        width=\"185px\"\n        padding=\"10px 25px\"\n        alignContent=\"center\"\n      >\n        <Flex\n          alignContent=\"center\"\n          onClick={playPauseHandler}\n          justifyContent=\"center\"\n          color=\"#094284\"\n          width=\"25px\"\n          height=\"25px\"\n        >\n          {playing ? (\n            <Icon\n              width=\"24px\"\n              height=\"24px\"\n              as={BsPauseCircle}\n              cursor=\"pointer\"\n            ></Icon>\n          ) : (\n            <Icon\n              width=\"24px\"\n              height=\"24px\"\n              as={BsPlayCircle}\n              cursor=\"pointer\"\n            ></Icon>\n          )}\n        </Flex>\n        <Flex\n          alignContent=\"center\"\n          // onClick={playPauseHandler}\n          justifyContent=\"center\"\n          color=\"red1\"\n          width=\"25px\"\n          height=\"25px\"\n        >\n          <Icon\n            onClick={stopHandler}\n            width=\"24\"\n            marginLeft=\"4\"\n            height=\"6\"\n            cursor=\"pointer\"\n            as={BsStopCircle}\n          ></Icon>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default VideoDisplay;\n","// @ts-nocheck\nimport { Icon } from '@chakra-ui/icons';\n\nimport {\n  Input,\n  Flex,\n  Img,\n  Image,\n  RadioGroup,\n  Stack,\n  Radio,\n  Text,\n} from '@chakra-ui/react';\nimport { useDownloadLogSlice } from 'app/pages/DownLoadLog/slice';\nimport {\n  selectDownloadLogData,\n  selectVideoFileName,\n  selectVideoFileUrl,\n} from 'app/pages/DownLoadLog/slice/selectors';\nimport React, { useEffect, useRef, useState } from 'react';\nimport {\n  AiOutlineArrowLeft,\n  AiOutlineArrowRight,\n  AiOutlinePauseCircle,\n} from 'react-icons/ai';\nimport { BsPauseCircle, BsPlayCircle, BsStopCircle } from 'react-icons/bs';\nimport ReactPlayer from 'react-player';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport mobile from '../../../../styles/Assets/display1.png';\nimport play from '../../../../styles/Assets/Play.svg';\nimport stop from '../../../../styles/Assets/Stop.svg';\nimport { selectTestSessionData } from '../../TestSession/slice/selectors';\nimport NoContainDisplay from './NoContainDisplay';\nimport ScreenShotDisplay from './ScreenShotDisplay';\nimport VideoDisplay from './VideoDisplay';\n\n// const videoSrc =\n//   'https://s3.ap-south-1.amazonaws.com/hotstar.device-resource.video/244578/244578.mp4';\n//const videoSrc  =   'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-1080p.mp4';\n\nfunction MobileDisplay({\n  displaySceenData,\n  screenshotsFlag,\n  videoFlag,\n  tabType,\n  deviceType,\n  orientation\n}) {\n  const defaultSelect = '2'; //screenshotsFlag && !videoFlag ? '2' : '1';\n  const [value, setDisplay] = useState(defaultSelect || '2');\n  // const [value, setDisplay] = useState( '1');\n  const [videoData, setVideodata] = useState([]);\n  const [screenshotsData, setScreenshotsData] = useState([]);\n  // const downloadFileData = useSelector(selectDownloadLogData)\n  const { actions } = useDownloadLogSlice();\n  const { testId } = useParams();\n  const dispatch = useDispatch();\n\n  const videoFilename = useSelector(selectVideoFileName);\n  const videofileUrl = useSelector(selectVideoFileUrl);\n  // useEffect(() => {\n  //   if (displaySceenData.length !== 0 && displaySceenData.length === 1) {\n  //     if (displaySceenData[0][0].name === 'Screenshots') {\n  //       setScreenshotsData(displaySceenData[0][0].datas);\n  //     } else {\n  //       setVideodata(displaySceenData[0][0].datas);\n  //     }\n  //   }\n  //   if (displaySceenData.length !== 0 && displaySceenData.length == 2) {\n  //     if (displaySceenData[0][0].name === 'Screenshots') {\n  //       setScreenshotsData(displaySceenData[0][0].datas);\n  //       setVideodata(displaySceenData[1][0].datas);\n  //     } else {\n  //       setScreenshotsData(displaySceenData[1][0].datas);\n  //       setVideodata(displaySceenData[0][0].datas);\n  //     }\n  //   }\n  // }, [displaySceenData]);\n\n  // console.log(videoData);\n  // console.log(screenshotsData);\n  // console.log(screenshotsFlag, videoFlag);\n  useEffect(() => {\n    if (videoFilename !== '' || videoFilename !== undefined) {\n      dispatch(\n        actions.loadDownloadVideoFileUrl({\n          testId: testId,\n          type: 'output',\n          filename: videoFilename,\n        }),\n      );\n      // console.log(videoFilename);\n    }\n  }, [videoFilename]);\n\n// console.log({videoFilename})\n  return (\n    <Flex\n      fontFamily=\"Montserrat\"\n      //width=\"800px\"\n\n      width={\n        (tabType === 'lr-automation' || tabType === 'lr-interact' || deviceType ==='tv' || orientation === 'landscape')\n          ? '650px'\n          : '310px'\n      }\n      justifyContent=\"flex-start\"\n      alignItems=\"center\"\n      flexDirection=\"column\"\n    >\n      {tabType !== 'lr-interact' && (\n        <Flex padding=\"15px 0px\">\n          <RadioGroup fontSize=\"12px\" onChange={setDisplay} value={value}>\n            <Stack spacing=\"4px\" direction=\"row\">\n              <Radio\n                cursor=\"pointer\"\n                value=\"1\"\n                data-radio=\"radio-tab-video\"\n                fontColor=\"grey15\"\n              >\n                <Text fontSize=\"12px\">Video</Text>\n              </Radio>\n              <Radio\n                cursor=\"pointer\"\n                value=\"2\"\n                data-radio=\"radio-tab-screenshots\"\n                fontColor=\"grey15\"\n              >\n                <Text fontSize=\"12px\"> Screenshots</Text>\n              </Radio>\n            </Stack>\n          </RadioGroup>\n        </Flex>\n      )}\n\n      {value === '1' ? (\n        <>\n          {( videoFilename !== undefined || videoFlag ) ? (\n            <VideoDisplay\n            deviceType={deviceType}\n            orientation={orientation}\n              tabType={tabType}\n              videoUrl={videofileUrl}\n            ></VideoDisplay>\n          ) : (\n            <NoContainDisplay tabType={tabType}></NoContainDisplay>\n          )}\n        </>\n      ) : (\n        <>\n          {screenshotsFlag && displaySceenData.length > 0 ? (\n            <ScreenShotDisplay\n              tabType={tabType}\n              deviceType={deviceType}\n              orientation={orientation}\n              screenShotUrl={displaySceenData}\n            ></ScreenShotDisplay>\n          ) : (\n            <NoContainDisplay tabType={tabType}></NoContainDisplay>\n          )}\n        </>\n      )}\n    </Flex>\n  );\n}\n\nexport default MobileDisplay;\n","// @ts-nocheck\nimport { Flex, Radio, RadioGroup, Stack, Text } from '@chakra-ui/react';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { selectDownloadScreenshotsData } from '../DownLoadLog/slice/selectors';\nimport { selectTestSessionData } from '../TestSession/slice/selectors';\nimport MobileDisplay from './components/MobileDisplay';\nimport NoContainDisplay from './components/NoContainDisplay';\nimport { useDisplayScreenSlice } from './slice';\nimport { selectDisplayScreenData, selectLoading } from './slice/selectors';\nconst resourceList = ['screenrecord', 'screenshots'];\nexport function DisplayScreen({ tabType , deviceType , orientation}) {\n  const [value, setDisplay] = useState('1');\n  const [videoFlag, setVideoFlag] = useState(false);\n  const [screenshotsFlag, setScreenshotsFlag] = useState(false);\n  const { actions } = useDisplayScreenSlice();\n  const dispatch = useDispatch();\n  const { testId } = useParams();\n  const displaySceenData = useSelector(selectDisplayScreenData);\n  const isLoading = useSelector(selectLoading);\n  const testSessionData = useSelector(selectTestSessionData);\n\n  const downloadScreenshotsFileData = useSelector(\n    selectDownloadScreenshotsData,\n  ); \n  return (\n    <Flex flexDirection=\"column\">\n      <>\n        {isLoading ? (\n          <LoadingComponent width=\"310px\"></LoadingComponent>\n        ) : (\n          <>\n            {downloadScreenshotsFileData.length !== 0 || true ? (\n              <MobileDisplay\n              deviceType={deviceType}\n              orientation={orientation}\n                tabType={tabType}\n                videoFlag={false}\n                screenshotsFlag={true}\n                displaySceenData={downloadScreenshotsFileData}\n              ></MobileDisplay>\n            ) : (\n              <Flex\n                fontFamily=\"Montserrat\"\n                // marginTop=\"8\"\n                width=\"310px\"\n                justifyContent=\"flex-start\"\n                alignItems=\"center\"\n                flexDirection=\"column\"\n              >\n                <Flex padding=\"20px 0px\">\n                  <RadioGroup\n                    fontSize=\"12px\"\n                    onChange={setDisplay}\n                    value={value}\n                  >\n                    <Stack spacing=\"4px\" direction=\"row\">\n                      <Radio\n                        value=\"1\"\n                        fontColor=\"grey15\"\n                        data-radio=\"radio-tab-video\"\n                      >\n                        <Text fontSize=\"12px\">Video</Text>\n                      </Radio>\n                      <Radio\n                        value=\"2\"\n                        fontColor=\"grey15\"\n                        data-radio=\"radio-tab-screenshots\"\n                      >\n                        <Text fontSize=\"12px\">Screenshots</Text>\n                      </Radio>\n                    </Stack>\n                  </RadioGroup>\n                </Flex>\n                <NoContainDisplay></NoContainDisplay>\n              </Flex>\n            )}\n          </>\n        )}\n      </>\n\n      {/* <Flex\n          fontFamily=\"Montserrat\"\n\n          bg=\"blue\"\n      \n         \n          justifyContent=\"flex-start\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n        >\n          <Flex padding=\"20px 0px\">\n            <RadioGroup fontSize=\"12px\" onChange={setDisplay} value={value}>\n              <Stack spacing=\"4px\" direction=\"row\">\n                <Radio value=\"1\" fontColor=\"grey15\">\n                  <Text fontSize=\"12px\">Video</Text>\n                </Radio>\n                <Radio value=\"2\" fontColor=\"grey15\">\n                  <Text fontSize=\"12px\">Screenshots</Text>\n                </Radio>\n              </Stack>\n            </RadioGroup>\n          </Flex>\n\n          <NoContainDisplay></NoContainDisplay>\n        </Flex>\n       */}\n    </Flex>\n  );\n}\n\nexport default DisplayScreen;\n","import { AddIcon, MinusIcon } from '@chakra-ui/icons'\nimport { Accordion, AccordionButton, AccordionIcon, AccordionItem, AccordionPanel, Box, Flex, Text } from '@chakra-ui/react'\nimport React from 'react'\n\nfunction AccordionComponent({children , title , isUrl , rightItem , isDefault }) {\n  return (\n    <>\n            <Accordion padding='0px' allowToggle  defaultIndex={ isDefault ?  [0] : []} >\n\n\n<AccordionItem borderBottom='0px solid white'  >\n\n{({ isExpanded }) => (\n      <>\n\n    <AccordionButton background={'white'} padding= {isUrl && \"2px\" }_hover={{background: 'white'}} _focus='0px 0px 0px white' >\n    <Flex  overflow='hidden' color=\"#747474\"  width=\"100%\" alignContent='center' alignItems=\"center\" >\n        <Text fontSize='13px'   whiteSpace=\"nowrap\" textAlign=\"left\" title={title} width=\"600px\" overflow='hidden' textOverflow='ellipsis' >\n        <Text as=\"span\" padding=\"0px 10px\" >\n        {isExpanded ? (\n              <MinusIcon pd=\"0px 5px\" color=\"grey1\" fontSize='12px' />\n            ) : (\n              <AddIcon pd=\"0px 5px\" color=\"grey1\" fontSize='12px' />\n            )}\n        </Text >\n        { title}\n       \n        </Text>\n        \n        <>{rightItem}</>\n    \n        </Flex>\n      {/* <AccordionIcon /> */}\n  \n\n    </AccordionButton>\n  <AccordionPanel padding=\"0px\">\n {isExpanded && children}\n     </AccordionPanel>\n     </>\n    )}\n</AccordionItem>\n</Accordion>\n    </>\n  )\n}\n\nexport default AccordionComponent","// @ts-nocheck\nimport { GridItem, Icon, Text } from '@chakra-ui/react';\nimport InfoComponent from 'app/pages/Appium/components/InfoComponent';\nimport React from 'react';\nimport { MdOutlineLaunch } from 'react-icons/md';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { REACT_APP_LOGOUT_REDIRECTPAGE } from 'utils/enviroment';\nconst BASE_URL = REACT_APP_LOGOUT_REDIRECTPAGE;\n\nfunction GridItemComponent({ heading, value, textTransform ,referenceId}) {\n  const location = useLocation()\n  const { testId } = useParams();\n\n  const pathWithoutId = location.pathname.replace(`/${testId}`, '');\n  const openNewTab = () => {\n    window.open(`${BASE_URL}${pathWithoutId}/${referenceId}`, '_blank');\n  };\n\n  return (\n    <>\n      <GridItem w=\"100%\" data-grid-item={`session-data-${heading}`}>\n        <Text\n          as=\"span\"\n          color=\"grey5\"\n          data-grid-heading={`session-item-${heading}`}\n          display=\"block\"\n        >\n          {heading}\n         {/* {referenceId && <InfoComponent\n            labelmessage={`Ref : ${referenceId}`}\n          ></InfoComponent>\n          \n          } */}\n         {referenceId &&  <Icon\n         cursor=\"pointer\"\n          marginLeft=\"10px\"\n          color=\"#7E8299\"\n          onClick={openNewTab}\n          w=\"14px\"\n          h=\"14px\"\n          as={MdOutlineLaunch}\n        />\n          \n          }\n        </Text>\n        <Text\n          as=\"b\"\n          textTransform={textTransform}\n          data-grid-value={`session-value-${heading}`}\n          display=\"block\"\n          color=\"grey10\"\n        >\n          {value}\n        </Text>\n      </GridItem>\n    </>\n  );\n}\n\nexport default GridItemComponent;\n","// @ts-nocheck\nimport React from 'react';\nimport { Grid, Text, GridItem } from '@chakra-ui/react';\nimport NoContent from 'app/components/NoContent';\nimport { dateTimeConverter } from 'utils/gernricfunction';\nimport GridItemComponent from './GridItemComponent';\n\nfunction SessionidTable({ testSessionData, tabType }) {\n  // console.log(testSessionData)\n  return (\n    <>\n      {Object.keys(testSessionData).length !== 0 ? (\n        <Grid\n          fontFamily=\"Montserrat\"\n          fontWeight=\"500\"\n          backgroundColor=\"white\"\n          padding=\"4\"\n          alignContent=\"flex-start\"\n          templateColumns=\"repeat(6, 1fr)\"\n          gridRowGap=\"1\"\n          date-grid-table=\"session-data-table\"\n          gap={3}\n        >\n       \n          <GridItemComponent\n            textTransform=\"none\"\n            heading={\n              testSessionData.uuid.testId === '' ? 'Session ID' : 'Test ID'\n            }\n            value={\n              testSessionData.uuid.testId || testSessionData.uuid.sessionId\n            }\n            referenceId={testSessionData.uuid?.referenceId}\n          ></GridItemComponent>\n    \n          <GridItemComponent\n            heading=\"Start Date & Time\"\n            value={dateTimeConverter(testSessionData.testStartTime)}\n          ></GridItemComponent>\n          <GridItemComponent\n            heading=\"End Date & Time\"\n            value={dateTimeConverter(testSessionData.testEndTime)}\n          ></GridItemComponent>\n          {tabType !== 'lr-interact' && (\n            <GridItemComponent\n              heading=\"Project\"\n              value={testSessionData.projectName}\n            ></GridItemComponent>\n          )}\n\n          {tabType !== 'lr-interact' && (\n            <GridItemComponent\n              heading=\"Build\"\n              value={testSessionData.appVersion}\n            ></GridItemComponent>\n          )}\n          {tabType !== 'lr-interact' && (\n            <GridItemComponent\n              heading=\"Script\"\n              value={testSessionData.scriptName}\n            ></GridItemComponent>\n          )}\n          <GridItemComponent\n            heading=\"Device\"\n            value={testSessionData.deviceName}\n          ></GridItemComponent>\n             {tabType !== 'lr-interact' && (\n            <GridItemComponent\n              heading=\"Device Serial\"\n              value={testSessionData.deviceSerial}\n            ></GridItemComponent>\n          )}\n             {(tabType !== 'lr-interact' && testSessionData.extra.hasOwnProperty('trayName')) && (\n            <GridItemComponent\n              heading=\"Tray\"\n              value={testSessionData.extra.trayName}\n            ></GridItemComponent>\n          )}\n             {tabType !== 'lr-interact' && (\n          <GridItemComponent\n            heading=\"OS\"\n            value={testSessionData.deviceOSVersion}\n          ></GridItemComponent>)}\n          <GridItemComponent\n            heading=\"Location\"\n            value={testSessionData.deviceLocation}\n          ></GridItemComponent>\n          {tabType !== 'lr-interact' && (\n            <GridItemComponent\n              heading=\"Network\"\n              value={testSessionData.deviceNetwork}\n            ></GridItemComponent>\n          )}\n          {tabType !== 'lr-interact' && (\n            <GridItemComponent\n              heading=\"Operator\"\n              value={testSessionData.operator}\n            ></GridItemComponent>\n          )}\n        </Grid>\n      ) : (\n        <NoContent message=\"No Content Available\"></NoContent>\n      )}\n    </>\n  );\n}\n\nexport default SessionidTable;\n","// @ts-nocheck\nimport AccordionComponent from 'app/components/AccordionComponent';\nimport NoContent from 'app/components/NoContent';\nimport React from 'react';\nimport SessionidTable from '../components/SessionidTable';\n\nfunction DisplayTable({ testSessionData, tabType }) {\n  return (\n    <>\n      {Object.keys(testSessionData).length !== 0 ? (\n        <>\n       <AccordionComponent  isDefault={true} title=\"\">\n       <SessionidTable\n          testSessionData={testSessionData}\n          tabType={tabType}\n        ></SessionidTable>\n       </AccordionComponent>\n      </>\n      ) : (\n        <NoContent message=\"No Content Available\"></NoContent>\n      )}\n    </>\n  );\n}\n\nexport default DisplayTable;\n","import React from 'react';\n\nfunction SubTabWrapper({ children }) {\n  return <div style={{ padding: '10px', paddingTop : '0px', background: 'white' }}>{children}</div>;\n}\n\nexport default SubTabWrapper;\n","import { TestCasesData } from 'types/TestCases';\n\n/* --- STATE --- */\nexport interface testCasesState {\n  loading: boolean;\n  error?: TestCasesErrorType | null;\n  testCasesData: TestCasesData[];\n}\n\nexport enum TestCasesErrorType {\n  RESPONSE_ERROR = 1,\n  TEST_NOT_FOUND = 2,\n}\n","import { call, put, takeLatest, delay } from 'redux-saga/effects';\nimport { request } from 'utils/request';\nimport { testCasesActions as actions } from '.';\nimport { TestCasesData } from 'types/TestCases';\nimport { TestCasesErrorType } from './types';\nimport GetIdToken from 'Authentication/configuration/GetIdToken';\nimport { REACT_APP_TEST_ANALYTICS_BASE_URL } from 'utils/enviroment';\n\nconst BASE_URL = REACT_APP_TEST_ANALYTICS_BASE_URL;\n\n/**\n * Github repos request/response handler\n */\nexport function* getTestCasesData(id) {\n  const idToken = GetIdToken();\n  const requestURL = `${BASE_URL}/tests/${id.payload}/testcases`;\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  try {\n    // Call our request helper (see 'utils/request')\n    const testCasesData = yield call(request, requestURL, config);\n    //console.log(testCasesData.body)\n    if (testCasesData.hasOwnProperty('body')) {\n      yield put(actions.testCasesDataLoaded(testCasesData.body.testCases));\n    } else {\n      yield put(actions.testCasesDataError(TestCasesErrorType.RESPONSE_ERROR));\n    }\n  } catch (err) {\n    /*\n    if (err.response?.status === 404) {\n      yield put(actions.repoError(RepoErrorType.USER_NOT_FOUND));\n    } else if (err.message === 'Failed to fetch') {\n      yield put(actions.repoError(RepoErrorType.GITHUB_RATE_LIMIT));\n    } else {\n    */\n    yield put(actions.testCasesDataError(TestCasesErrorType.RESPONSE_ERROR));\n  }\n}\n\n/**\n * Root saga manages watcher lifecycle\n */\nexport function* testCasesSaga() {\n  // Watches for loadRepos actions and calls getRepos when one comes in.\n  // By using `takeLatest` only the result of the latest API call is applied.\n  // It returns task descriptor (just like fork) so we can continue execution\n  // It will be cancelled automatically on component unmount\n  yield takeLatest(actions.loadtestCasesData.type, getTestCasesData);\n}\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\nimport { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';\nimport { testCasesSaga } from './saga';\nimport { testCasesState } from './types';\n\nexport const initialState: testCasesState = {\n  loading: false,\n  error: null,\n  testCasesData: [],\n};\n\nconst slice = createSlice({\n  name: 'testCases',\n  initialState,\n  reducers: {\n    loadtestCasesData: state => {\n      state.loading = true;\n    },\n    testCasesDataLoaded: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = null;\n      state.testCasesData = action.payload;\n    },\n    testCasesDataError: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const { actions: testCasesActions } = slice;\n\nexport const useTestCasesSlice = () => {\n  useInjectReducer({ key: slice.name, reducer: slice.reducer });\n  useInjectSaga({ key: slice.name, saga: testCasesSaga });\n  return { actions: slice.actions };\n};\n\n/**\n * Example Usage:\n *\n * export function MyComponentNeedingThisSlice() {\n *  const { actions } = useTestCaseSlice();\n *\n *  const onButtonClick = (evt) => {\n *    dispatch(actions.someAction());\n *   };\n * }\n */\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\n// First select the relevant part from the state\nconst selectSlice = (state: RootState) => state.testCases || initialState;\n\nexport const selectTestCasesData = createSelector(\n  [selectSlice],\n  state => state.testCasesData,\n);\n\nexport const selectLoading = createSelector(\n  [selectSlice],\n  state => state.loading,\n);\n\nexport const selectError = createSelector([selectSlice], state => state.error);\n\n/*\nimport { createSelector } from '@reduxjs/toolkit';\n\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\nconst selectSlice = (state: RootState) => state.testCases || initialState;\n\nexport const selectTestCases = createSelector(\n  [selectSlice],\n  state => state,\n);\n*/\n","// @ts-nocheck\nimport React from 'react';\nimport {\n  Flex,\n  Table,\n  TableCaption,\n  Th,\n  Tr,\n  Thead,\n  Td,\n  Tbody,\n  Img,\n} from '@chakra-ui/react';\nimport loadingImg from '../../styles/Assets/load-loading.gif';\nimport { selectTestSessionData } from 'app/pages/TestSession/slice/selectors';\nimport { useSelector } from 'react-redux';\nimport { dateTimeConverter } from 'utils/gernricfunction';\nfunction SummaryTableComp({ tableHeader, summaryTableData, isLoading, title }) {\n  // console.log(summaryTableData);\n  const testSessionData = useSelector(selectTestSessionData);\n\n  const offset =\n    Object.keys(testSessionData).length !== 0 &&\n    testSessionData.testStartTime.split('+')[1];\n\n  return (\n    <>\n      {summaryTableData && (\n        <Table\n          variant=\"simple\"\n          size=\"sm\"\n          width=\"100%\"\n          backgroundColor=\"white\"\n          fontFamily=\"Montserrat\"\n          fontWeight=\"500\"\n        >\n          {/* <TableCaption >Test CaseSummary</TableCaption> */}\n          <Thead backgroundColor=\"white3\" textTransform=\"capitalize\">\n            <Tr>\n              {tableHeader.map((heading, index) => (\n                <Th\n                  key={index}\n                  fontFamily=\"Montserrat\"\n                  color=\"grey1\"\n                  fontWeight=\"500\"\n                  textTransform=\"capitalize\"\n                  padding=\"6px\"\n                >\n                  {heading}\n                </Th>\n              ))}\n            </Tr>\n          </Thead>\n          {title === 'Experience KPIs' && (\n            <Tbody>\n              {summaryTableData.map((item, index) => (\n                <Tr textTransform=\"none\" key={index} borderBottomColor=\"grey2\">\n                  <Td textTransform=\"none\" padding=\"5px\">\n                    {item.testCase}\n                  </Td>\n                  <Td textTransform=\"none\" padding=\"5px\">\n                    {item.kpiName}\n                  </Td>\n                  {/* <Td padding=\"5px\">{item.endTime}</Td> */}\n                  <Td textTransform=\"none\" padding=\"5px\">\n                    {item.value}\n                  </Td>\n                </Tr>\n              ))}\n            </Tbody>\n          )}\n\n          {title === 'Test Cases Summary' && (\n            <Tbody>\n              {summaryTableData.map((item, index) => (\n                <Tr key={index} textTransform=\"none\" borderBottomColor=\"grey2\">\n                  <Td padding=\"6px\">{item.testCaseName}</Td>\n                  <Td padding=\"6px\">{dateTimeConverter(item.startTime)}</Td>\n                  <Td padding=\"6px\">{dateTimeConverter(item.endTime)}</Td>\n                  <Td minWidth=\"100px\" padding=\"6px\">\n                    {item.status}\n                  </Td>\n                </Tr>\n              ))}\n            </Tbody>\n          )}\n\n          {title === 'Event Summary' && (\n            <Tbody>\n              {summaryTableData.map((item, index) => (\n                <Tr borderBottomColor=\"grey2\" key={index}>\n                  <Td textTransform=\"none\" padding=\"6px\">\n                    {item.eventName}\n                  </Td>\n                  <Td textTransform=\"none\" padding=\"6px\">\n                    {' '}\n                    {dateTimeConverter(item.time)}\n                  </Td>\n                  <Td textTransform=\"none\" padding=\"6px\">\n                    {item.testCase}\n                  </Td>\n                  {/* <Td padding=\"6px\">{item.kpiName}</Td> */}\n                </Tr>\n              ))}\n            </Tbody>\n          )}\n        </Table>\n      )}\n    </>\n  );\n}\n\nexport default SummaryTableComp;\n","// @ts-nocheck\nimport { Flex, Text } from '@chakra-ui/react';\nimport NoContent from 'app/components/NoContent';\nimport SummaryTableComp from 'app/components/SummaryTableComp';\nimport React from 'react';\n\nfunction TestCasesTable({\n  title,\n  isLoading,\n  tableHeader,\n  TestCaseSummaryTableData,\n  error,\n}) {\n  return (\n    <Flex\n      marginTop=\"10px \"\n      fontFamily=\"Montserrat\"\n      fontWeight=\"500\"\n      fontSize=\"14px\"\n      flexDirection=\"column\"\n      background=\"white1\"\n      padding=\"10px\"\n      width=\"100%\"\n      boxShadow=\"2px 8px 6px #00000029\"\n    >\n      <Text paddingBottom=\"1\" paddingLeft=\"0.5\">\n        {title}\n      </Text>\n      {error === null ? (\n        <>\n          {TestCaseSummaryTableData.length > 0 ? (\n            <SummaryTableComp\n              tableHeader={tableHeader}\n              isLoading={isLoading}\n              summaryTableData={TestCaseSummaryTableData}\n              title={title}\n            ></SummaryTableComp>\n          ) : (\n            <NoContent\n              height=\"150px\"\n              message=\"No Content Available\"\n            ></NoContent>\n          )}\n        </>\n      ) : (\n        <NoContent height=\"150px\" message=\"Something Went Wrong\"></NoContent>\n      )}\n    </Flex>\n  );\n}\n\nexport default TestCasesTable;\n","import { TestCaseExperienceData } from 'types/TestCaseExperience';\n\n/* --- STATE --- */\nexport interface TestCaseExperienceState {\n  loading: boolean;\n  error?: TestCaseExperienceErrorType | null;\n  TestCaseExperienceData: TestCaseExperienceData[];\n}\n\nexport enum TestCaseExperienceErrorType {\n  RESPONSE_ERROR = 1,\n  TEST_NOT_FOUND = 2,\n}\n","import { call, put, takeLatest, delay } from 'redux-saga/effects';\nimport { request } from 'utils/request';\nimport { TestCaseExperienceActions as actions } from '.';\nimport { TestCaseExperienceData } from 'types/TestCaseExperience';\nimport { TestCaseExperienceErrorType } from './types';\nimport GetIdToken from 'Authentication/configuration/GetIdToken';\nimport { REACT_APP_TEST_ANALYTICS_BASE_URL } from 'utils/enviroment';\n\nconst BASE_URL = REACT_APP_TEST_ANALYTICS_BASE_URL;\n\n/**ss\n * Github repos request/response handler\n */\nexport function* getTestCaseExperienceData(id) {\n  const idToken = GetIdToken();\n  const requestURL = `${BASE_URL}/tests/${id.payload}/app/kpi/experience`;\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  try {\n    // Call our request helper (see 'utils/request')\n    const TestCaseExperienceData = yield call(request, requestURL, config);\n    //   console.log(TestCaseExperienceData)\n    if (Object.keys(TestCaseExperienceData.body).length !== 0) {\n      yield put(\n        actions.TestCaseExperienceDataLoaded(\n          TestCaseExperienceData.body.experience,\n        ),\n      );\n    } else {\n      yield put(\n        actions.TestCaseExperienceDataError(\n          TestCaseExperienceErrorType.RESPONSE_ERROR,\n        ),\n      );\n    }\n  } catch (err) {\n    /*\n    if (err.response?.status === 404) {\n      yield put(actions.repoError(RepoErrorType.USER_NOT_FOUND));\n    } else if (err.message === 'Failed to fetch') {\n      yield put(actions.repoError(RepoErrorType.GITHUB_RATE_LIMIT));\n    } else {\n    */\n    yield put(\n      actions.TestCaseExperienceDataError(\n        TestCaseExperienceErrorType.RESPONSE_ERROR,\n      ),\n    );\n  }\n}\n\n/**\n * Root saga manages watcher lifecycle\n */\nexport function* TestCaseExperienceSaga() {\n  // Watches for loadRepos actions and calls getRepos when one comes in.\n  // By using `takeLatest` only the result of the latest API call is applied.\n  // It returns task descriptor (just like fork) so we can continue execution\n  // It will be cancelled automatically on component unmount\n  yield takeLatest(\n    actions.loadTestCaseExperienceData.type,\n    getTestCaseExperienceData,\n  );\n}\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\nimport { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';\nimport { TestCaseExperienceSaga } from './saga';\nimport { TestCaseExperienceState } from './types';\n\nexport const initialState: TestCaseExperienceState = {\n  loading: false,\n  error: null,\n  TestCaseExperienceData: [],\n};\n\nconst slice = createSlice({\n  name: 'TestCaseExperience',\n  initialState,\n  reducers: {\n    loadTestCaseExperienceData: state => {\n      state.loading = true;\n    },\n    TestCaseExperienceDataLoaded: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = null;\n      state.TestCaseExperienceData = action.payload;\n    },\n    TestCaseExperienceDataError: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = action.payload;\n      //state.TestCaseExperienceData = [];\n    },\n  },\n});\n\nexport const { actions: TestCaseExperienceActions } = slice;\n\nexport const useTestCaseExperienceSlice = () => {\n  useInjectReducer({ key: slice.name, reducer: slice.reducer });\n  useInjectSaga({ key: slice.name, saga: TestCaseExperienceSaga });\n  return { actions: slice.actions };\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\n// First select the relevant part from the state\nconst selectSlice = (state: RootState) =>\n  state.TestCaseExperience || initialState;\n\nexport const selectTestCaseExperienceData = createSelector(\n  [selectSlice],\n  state => state.TestCaseExperienceData,\n);\n\nexport const selectLoading = createSelector(\n  [selectSlice],\n  state => state.loading,\n);\n\nexport const selectError = createSelector([selectSlice], state => state.error);\n\n/*\nimport { createSelector } from '@reduxjs/toolkit';\n\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\nconst selectSlice = (state: RootState) => state.TestCaseExperience || initialState;\n\nexport const selectTestCases = createSelector(\n  [selectSlice],\n  state => state,\n);\n*/\n","// @ts-nocheck\nimport { Flex } from '@chakra-ui/react';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport TestCasesTable from '../TestCases/components/TestCasesTable';\nimport { useTestCaseExperienceSlice } from './slice';\nimport {\n  selectError,\n  selectLoading,\n  selectTestCaseExperienceData,\n} from './slice/selectors';\nconst ExperienceKPIsTableHeading = [\n  'Journey Name',\n  'KPI Name',\n  //'End Time',\n  'Value',\n];\nexport function TestCaseExperience() {\n  const { testId } = useParams();\n  const { actions } = useTestCaseExperienceSlice();\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const TestCaseExperienceData = useSelector(selectTestCaseExperienceData);\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(actions.TestCaseExperienceDataLoaded([]));\n    dispatch(actions.loadTestCaseExperienceData(testId));\n  }, []);\n\n  //   console.log(TestCaseExperienceData)\n\n  return (\n    <Flex width=\"100%\">\n      {isLoading ? (\n        <LoadingComponent></LoadingComponent>\n      ) : (\n        <TestCasesTable\n          tableHeader={ExperienceKPIsTableHeading}\n          TestCaseSummaryTableData={TestCaseExperienceData}\n          title=\"Experience KPIs\"\n          error={error}\n        ></TestCasesTable>\n      )}\n    </Flex>\n  );\n}\n\nexport default TestCaseExperience;\n","//@ts-nocheck\nimport React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectsummaryTableData,\n  selectLoading,\n  selectError,\n} from './slice/selectors';\nimport { summaryTableErrorType } from './slice/types';\nimport { useSummaryTableSlice } from './slice';\nimport SummaryTableComp from 'app/components/SummaryTableComp';\nimport { Flex, Text } from '@chakra-ui/react';\nimport NoContent from 'app/components/NoContent';\nimport TestCasesTable from '../TestCases/components/TestCasesTable';\nimport { useParams } from 'react-router-dom';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport { selectTestSessionData } from '../TestSession/slice/selectors';\n//const tableHeader = ['Status', 'Time', 'Test Case', 'Details'];\nconst EventSummaryTableHeading = [\n  'Event Name',\n  'Time',\n  'Test Case Name',\n  // 'KPI Name',\n];\nexport function SummaryTable() {\n  const { actions } = useSummaryTableSlice();\n  const { testId } = useParams();\n  const testSessionData = useSelector(selectTestSessionData);\n  const summaryTableData = useSelector(selectsummaryTableData);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const { testStatus } = testSessionData;\n  const dispatch = useDispatch();\n  console.log({ testStatus });\n  useEffect(() => {\n    let intervalId;\n    const loadData = () => {\n      dispatch(actions.loadsummaryTableData(testId));\n    };\n\n    if (testStatus === 'Started' || testStatus === 'Scheduled') {\n      intervalId = setInterval(loadData, 5000);\n    } else {\n      loadData();\n    }\n\n    return () => {\n      clearInterval(intervalId);\n      dispatch(actions.summaryTableDataLoaded([]));\n    };\n  }, [testId, testStatus]);\n\n  // const onSubmitForm = (evt?: React.FormEvent<HTMLFormElement>) => {\n  //   /* istanbul ignore next  */\n  //   if (evt !== undefined && evt.preventDefault) {\n  //     evt.preventDefault();\n  //   }\n  // };\n\n  //sort events data based on timestamp assending order\n  const sortedTimestamps = summaryTableData.slice();\n  if (sortedTimestamps.length > 0) {\n    sortedTimestamps.sort(function (a, b) {\n      return new Date(a.time) - new Date(b.time);\n    });\n  }\n\n  return (\n    <Flex width=\"100%\">\n      {isLoading ? (\n        <LoadingComponent></LoadingComponent>\n      ) : (\n        <TestCasesTable\n          error={error}\n          tableHeader={EventSummaryTableHeading}\n          TestCaseSummaryTableData={sortedTimestamps}\n          title=\"Event Summary\"\n        ></TestCasesTable>\n      )}\n    </Flex>\n  );\n}\n\nexport const repoErrorText = (error: summaryTableErrorType) => {\n  switch (error) {\n    case summaryTableErrorType.RESPONSE_ERROR:\n      return 'There is no such user 😞';\n    default:\n      return 'An error has occurred!';\n  }\n};\n","// @ts-nocheck\nimport { Flex, Img } from '@chakra-ui/react';\nimport React, { useEffect } from 'react';\nimport MobileDisplay from './components/MobileDisplay';\n\nimport loadingimage from '../../../styles/Assets/load-loading.gif';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectTestCasesData,\n  selectError,\n  selectLoading,\n} from './slice/selectors';\nimport { TestCasesErrorType } from './slice/types';\nimport { useTestCasesSlice } from './slice';\n\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport NoContent from 'app/components/NoContent';\nimport TestCasesTable from './components/TestCasesTable';\nimport TestCaseExperience from '../TestCaseExperience';\nimport { SummaryTable } from '../SummaryTable';\nimport { useParams } from 'react-router-dom';\n\nconst TestCaseSummaryTableHeading = [\n  'Test Case Name',\n  'Start Time',\n  'End Time',\n  'Pass/Fail',\n];\n\nexport function TestCases() {\n  const { actions } = useTestCasesSlice();\n\n  const testCaseData = useSelector(selectTestCasesData);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const { testId } = useParams();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // dispatch(actions.testCasesDataLoaded([]));\n    dispatch(actions.loadtestCasesData(testId));\n  }, [testId]);\n\n  //console.log(testCaseData)\n  // const useEffectOnMount = (effect: React.EffectCallback) => {\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  //   useEffect(effect, []);\n  // };\n\n  // useEffectOnMount(() => {\n  //   // When initial state username is not null, submit the form to load repos\n  //    dispatch(actions.loadtestCasesData(testId));\n  // });\n\n  // //console.log(testSessionData);\n  // // console.log(isLoading)\n  // const onSubmitForm = (evt?: React.FormEvent<HTMLFormElement>) => {\n  //   /* istanbul ignore next  */\n  //   if (evt !== undefined && evt.preventDefault) {\n  //     evt.preventDefault();\n  //   }\n  // };\n\n  return (\n    <Flex\n      fontFamily=\"Montserrat\"\n      flexDirection=\"row\"\n      width=\"100%\"\n      color=\"grey13\"\n    >\n      <Flex\n        flexDirection=\"column\"\n        padding=\"1px 5px 15px 5px\"\n        flex={1}\n        height=\"535px\"\n        overflowY=\"auto\"\n        css={{\n          '&::-webkit-scrollbar': {\n            width: '8px',\n            //height: '30px',\n            border: '5px solid #F3F6F9',\n          },\n          '&::-webkit-scrollbar-track': {\n            boxShadow: 'inset 0 0 6px white',\n          },\n          '&::-webkit-scrollbar-thumb': {\n            backgroundColor: '#C1C1C1',\n            borderRadius: '5px',\n            boreder: '2px solid',\n          },\n        }}\n      >\n        <>\n          {isLoading ? (\n            <LoadingComponent></LoadingComponent>\n          ) : (\n            <TestCasesTable\n              error={error}\n              title=\"Test Cases Summary\"\n              tableHeader={TestCaseSummaryTableHeading}\n              TestCaseSummaryTableData={testCaseData}\n            ></TestCasesTable>\n          )}\n          <TestCaseExperience></TestCaseExperience>\n          <SummaryTable></SummaryTable>\n        </>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default TestCases;\n\nexport const repoErrorText = (error: TestCasesErrorType) => {\n  switch (error) {\n    case TestCasesErrorType.RESPONSE_ERROR:\n      return 'There is no such user 😞';\n    default:\n      return 'An error has occurred!';\n  }\n};\n","// @ts-nocheck\nimport GetIdToken from 'Authentication/configuration/GetIdToken';\nimport { call, delay, put, takeLatest } from 'redux-saga/effects';\n\nimport { request } from 'utils/request';\nimport { HarChartActions as actions } from '.';\nimport { REACT_APP_TEST_ANALYTICS_BASE_URL } from 'utils/enviroment';\nconst BASE_URL = REACT_APP_TEST_ANALYTICS_BASE_URL;\n\nfunction* getHarKpiData(id) {\n  const idToken = GetIdToken();\n  const requestURL = `${BASE_URL}/tests/${id.payload}/app/resource/httpapi`;\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  try {\n    const harKpiData = yield call(request, requestURL, config);\n    //console.log(harKpiData);\n    if (Object.keys(harKpiData).length !== 0) {\n      if (harKpiData.hasOwnProperty('body')) {\n        yield put(actions.HarHttpKpiDataLoaded(harKpiData.body));\n      } else {\n        yield put(actions.HarHttpKpiDataError(harKpiData.errorMessage));\n      }\n    } else {\n      yield put(actions.HarHttpKpiDataError('could not get'));\n    }\n  } catch (err) {\n    yield put(actions.HarHttpKpiDataError('could not get'));\n  }\n}\nfunction* getHarChartData(payload) {\n  const requestURL = `${payload.payload}`;\n\n  try {\n    // const harChartData = yield call(request, requestURL);\n    const response = yield fetch(requestURL); //yield call(request, requestURL);\n    const harChartData = yield response.json();\n\n    if (\n      harChartData.hasOwnProperty('statusCode') &&\n      harChartData.statusCode === 200\n    ) {\n      yield put(actions.HarChartDataResponse(harChartData));\n    } else {\n      yield put(actions.HarHttpKpiDataError('Unable to read Har'));\n    }\n  } catch (err) {\n    console.log({ err });\n    yield put(actions.HarHttpKpiDataError('Unable to read Har'));\n  }\n}\n\nexport function* HarChartSaga() {\n  yield takeLatest(actions.loadHarHttpKpi.type, getHarKpiData);\n  yield takeLatest(actions.loadHarChart.type, getHarChartData);\n}\n","// @ts-nocheck\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\nimport { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';\nimport { HarChartSaga } from './saga';\nimport { HarChartState } from './types';\n\nconst getEntityData = (entiesData, data) => {\n  //console.log(entiesData, data);\n  let enties = [];\n  let issueSummaryEnties = [];\n  const pageTime = data.hasOwnProperty('pages')\n    ? new Date(data.pages[0].startedDateTime).valueOf()\n    : 0;\n  const startPageTime =\n    pageTime === 0\n      ? new Date(entiesData[0].startedDateTime).valueOf()\n      : pageTime;//undefine\n    //  console.log({pageTime  , startPageTime});\n  for (let i = 0; i < entiesData.length; i++) {\n    // console.log(entiesData[i])\n    const startEntryTime = new Date(entiesData[i].startedDateTime).valueOf();\n    \n    const begningTime =\n      startEntryTime - startPageTime <= 0 ? 0 : startEntryTime - startPageTime;\n    // const begningTime =    startEntryTime - startPageTime;\n    const connectTime =\n      entiesData[i].timings.hasOwnProperty('connect') &&\n      entiesData[i].timings.connect > 0\n        ? entiesData[i].timings.connect\n        : 0;\n\n    const receiveTime =\n      entiesData[i].timings.hasOwnProperty('receive') &&\n      entiesData[i].timings.receive > 0\n        ? entiesData[i].timings.receive\n        : 0;\n    const sendTime =\n      entiesData[i].timings.hasOwnProperty('send') &&\n      entiesData[i].timings.send > 0\n        ? entiesData[i].timings.send\n        : 0;\n    const sslTime =\n      entiesData[i].timings.hasOwnProperty('ssl') &&\n      entiesData[i].timings.ssl > 0\n        ? entiesData[i].timings.ssl\n        : 0;\n    const waitTime =\n      entiesData[i].timings.hasOwnProperty('wait') &&\n      entiesData[i].timings.wait > 0\n        ? entiesData[i].timings.wait\n        : 0;\n    const blockedTime =\n      entiesData[i].timings.hasOwnProperty('blocked') &&\n      entiesData[i].timings.blocked > 0\n        ? entiesData[i].timings.blocked\n        : 0;\n    const blockedOpen = begningTime;\n    const blockedClose = begningTime + blockedTime;\n    const sslOpen = blockedClose;\n    const sslClose = sslOpen + sslTime;\n    const connectOpen = sslClose;\n    const connectClose = connectOpen + connectTime;\n    const sendOpen = connectClose;\n    const sendClose = sendOpen + sendTime;\n    const waitOpen = sendClose;\n    const waitClose = waitOpen + waitTime;\n    const receiveOpen = waitClose;\n    const receiveClose = receiveOpen + receiveTime;\n    const reciveTooltip =\n      entiesData[i].timings.receive >= 0\n        ? entiesData[i].timings.receive.toFixed(1) + 'ms'\n        : 'does not apply';\n    const connectTooltip =\n      entiesData[i].timings.connect >= 0\n        ? entiesData[i].timings.connect.toFixed(1) + 'ms'\n        : 'does not apply';\n    const sendTooltip =\n      entiesData[i].timings.send >= 0\n        ? entiesData[i].timings.send.toFixed(1) + 'ms'\n        : 'does not apply';\n    const sslTooltip =\n      entiesData[i].timings.ssl >= 0\n        ? entiesData[i].timings.ssl.toFixed(1) + 'ms'\n        : 'does not apply';\n    const waitTooltip =\n      entiesData[i].timings.wait >= 0\n        ? entiesData[i].timings.wait.toFixed(1) + 'ms'\n        : 'does not apply';\n    const blockedTooltip =\n      entiesData[i].timings.blocked >= 0\n        ? entiesData[i].timings.blocked.toFixed(1) + 'ms'\n        : 'does not apply';\n    enties.push({\n      category: '[' + i + '] ' + entiesData[i].request.url,\n      status: entiesData[i].response.status,\n      AssetType: entiesData[i].response.content.mimeType,\n      beginingTime: begningTime,\n      totalTime: entiesData[i].time,\n      connect: entiesData[i].timings.connect,\n      receive: entiesData[i].timings.receive,\n      send: entiesData[i].timings.send,\n      ssl: entiesData[i].timings.ssl,\n      wait: entiesData[i].timings.wait,\n      blocked: entiesData[i].timings.blocked,\n      blockedOpen: blockedOpen,\n      blockedClose: blockedClose,\n      sslOpen: sslOpen,\n      sslClose: sslClose,\n      connectOpen: connectOpen,\n      connectClose: connectClose,\n      sendOpen: sendOpen,\n      sendClose: sendClose,\n      waitOpen: waitOpen,\n      waitClose: waitClose,\n      receiveOpen: receiveOpen,\n      receiveClose: receiveClose,\n      reciveTooltip: reciveTooltip,\n      waitTooltip: waitTooltip,\n      connectTooltip: connectTooltip,\n      sendTooltip: sendTooltip,\n      sslTooltip: sslTooltip,\n      blockedTooltip: blockedTooltip,\n    });\n    issueSummaryEnties.push({\n      category: entiesData[i].request.url,\n      status: entiesData[i].response.status,\n\n      AssetType: entiesData[i].response.content.mimeType,\n      beginingTime: begningTime,\n      time: entiesData[i].time,\n      connect: entiesData[i].timings.connect,\n      receive: entiesData[i].timings.receive,\n      send: entiesData[i].timings.send,\n      ssl: entiesData[i].timings.ssl,\n      wait: entiesData[i].timings.wait,\n      blocked: entiesData[i].timings.blocked,\n    });\n  }\n\n  return { enties, issueSummaryEnties };\n};\nconst getHarData = data => {\n  //console.log(data.pages[0]);\n  const startTime =\n    data.hasOwnProperty('pages') && data.pages[0].startedDateTime;\n  const onContentLoad =\n    data.hasOwnProperty('pages') && data.pages[0].pageTimings.onContentLoad;\n  const onLoadTime =\n    data.hasOwnProperty('pages') && data.pages[0].pageTimings.onLoad;\n  return {\n    startTime,\n    onContentLoad,\n    onLoadTime,\n  };\n};\nconst getAllEntiesData = data => {\n  let allEnties = [];\nfor(let i = 0; i < data.length; i++) {\n   for(let j = 0; j < data[i].entries.length; j++) {\n   allEnties.push(...data[i].entries[j].entries)\n   }\n}\n//console.log({allEnties})\nreturn allEnties;\n}\nexport const initialState: HarChartState = {\n  Hardata: {},\n  errors: null,\n  loading: false,\n  HarEntiesData: [],\n  HarGroupByData: [],\n  HarIssueSummaryEnties: [],\n  loadingUrl: false,\n  harKpiData: {},\n  harUrlData: null,\n  harKpiErrors: null,\n};\n\nconst slice = createSlice({\n  name: 'harChart',\n  initialState,\n  reducers: {\n    loadHarChart: state => {\n      state.loading = true;\n    },\n    HarChartDataLoaded: (state, action: PayloadAction<any>) => {\n      //  console.log(action.payload);\n      if (\n        Object.keys(action.payload).length !== 0 &&\n        Object.keys(action.payload.entries).length < 1000\n      ) {\n        const { enties, issueSummaryEnties } = getEntityData(\n          action.payload.entries,\n          action.payload,\n        );\n        state.HarEntiesData = enties;\n        state.HarIssueSummaryEnties = issueSummaryEnties;\n        state.HarData = getHarData(action.payload);\n        state.loading = false;\n      } else if (Object.keys(action.payload.entries).length > 1000) {\n        const { enties, issueSummaryEnties } = getEntityData(\n          action.payload.entries.slice(0, 800),\n          action.payload,\n        );\n        state.HarEntiesData = enties;\n        state.HarIssueSummaryEnties = issueSummaryEnties;\n        state.HarData = getHarData(action.payload);\n        state.loading = false;\n      } else {\n        state.HarEntiesData = [];\n        state.HarIssueSummaryEnties = [];\n        state.HarData = {};\n        state.loading = false;\n      }\n      //   console.log(action.payload.pages)\n    },\n    HarChartDataResponse : (state , action : PayloadAction<any>) => {\n      //console.log({data : action.payload})\n      state.HarEntiesData = action.payload.allEntries;//getAllEntiesData(action.payload);\n      state.HarGroupByData = action.payload.body;\n      state.loading = false;\n      state.errors = null;\n      state.HarIssueSummaryEnties = [];\n    },\n    HarChartDataError: (state, action: PayloadAction<any>) => {\n      state.errors = action.payload;\n      state.loading = false;\n    },\n    loadHarHttpKpi: (state, action: PayloadAction<any>) => {\n      state.loadingUrl = true;\n    },\n    resetChartData : (state , action : PayloadAction<any>) => {\n      console.log('reset hit ')\n      state.HarEntiesData = [];\n    },\n    HarHttpKpiDataLoaded: (state, action: PayloadAction<any>) => {\n      state.loadingUrl = false;\n      state.harKpiData = action.payload;\n      //state.harUrlData = action.payload.datas[0].url;\n      state.harKpiErrors = null;\n    },\n    HarHttpKpiDataError: (state, action: PayloadAction<any>) => {\n      state.harKpiData = {};\n      state.harUrlData = null;\n      state.loadingUrl = false;\n      state.harKpiErrors = action.payload;\n    },\n  },\n});\n\nexport const { actions: HarChartActions } = slice;\n\nexport const useHarChartSlice = () => {\n  useInjectReducer({ key: slice.name, reducer: slice.reducer });\n  useInjectSaga({ key: slice.name, saga: HarChartSaga });\n  return { harActions: slice.actions };\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\nconst selectSlice = (state: RootState) => state.harChart || initialState;\n\nexport const selectHarChartData = createSelector(\n  [selectSlice], // state.testNotification\n  state => state.HarEntiesData,\n);\nexport const selectHarAnalysis = createSelector([selectSlice], state => state);\nexport const selectHarIssueSummaryEntiesData = createSelector(\n  [selectSlice], // state.testNotification\n  state => state.HarIssueSummaryEnties,\n);\nexport const selectHarChartDetailData = createSelector(\n  [selectSlice], // state.testNotification\n  state => state.Hardata,\n);\n\nexport const selectHarLoading = createSelector(\n  [selectSlice],\n  state => state.loading,\n);\nexport const selectHarKpiData = createSelector(\n  [selectSlice], // state.testNotification\n  state => state.harKpiData,\n);\nexport const selectHarUrl = createSelector(\n  [selectSlice],\n  state => state.harUrlData,\n);\n\nexport const selectKpiHarLoading = createSelector(\n  [selectSlice],\n  state => state.loadingUrl,\n);\n\nexport const selectHarKpiDataError = createSelector(\n  [selectSlice],\n  state => state.harKpiErrors,\n);\nexport const selectHarChartDataError = createSelector(\n  [selectSlice],\n  state => state.errors,\n);\nexport const  selectHarChart = createSelector([selectSlice], state => state)\n\n// export const selectSessionId = (\n//   [selectSlice],\n//   state => state.sessionId,\n// );\n","// @ts-nocheck\nimport {\n  Flex,\n  Text,\n  Box,\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport Charts from './Charts';\nexport const labels = [\n  '0',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  '10',\n  '11',\n  '12',\n  '13',\n  '14',\n  '15',\n  '16',\n  '17',\n  '18',\n  '19',\n  '20',\n  '21',\n  '22',\n  '23',\n  '24',\n  '25',\n];\n\nconst labelsHar = [\n  '0',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  '10',\n  '11',\n  '12',\n  '13',\n  '14',\n  '15',\n  '16',\n  '17',\n  '18',\n  '19',\n];\nfunction ChartLayout({ children, height, leftalign }) {\n  return (\n    <Flex\n      borderRadius=\"5px\"\n      flexDirection=\"column\"\n      paddingRight=\"2\"\n      fontFamily=\"Montserrat\"\n      fontSize=\"12px\"\n      //      bg=\"white\"\n    >\n      {/* <Flex>\n        <Slider\n          marginLeft={leftalign}\n          alignSelf={leftalign ? 'self-end' : ''}\n          aria-label=\"slider-ex-1\"\n          defaultValue={5}\n          colorScheme=\"red\"\n        >\n          <SliderTrack backgroundColor=\"grey11\">\n            <SliderFilledTrack />\n          </SliderTrack>\n          <SliderThumb\n            height=\"8px\"\n            width=\"8px\"\n            backgroundColor=\"red\"\n            _focus={{\n              boxShadow: ' 0 0 0 red',\n            }}\n          ></SliderThumb>\n        </Slider>\n      </Flex>\n\n      <Flex>\n        {leftalign ? (\n          <Flex\n            alignSelf={leftalign ? 'self-end' : ''}\n            fontFamily=\"Montserrat\"\n            fontWeight=\"300\"\n            top=\"0px\"\n            marginLeft={leftalign}\n            height=\"34px\"\n            marginTop=\"8px\"\n            paddingBottom=\"5\"\n            alignItems=\"flex-start\"\n            backgroundColor=\"grey4\"\n            justifyContent=\"space-between\"\n            zIndex=\"0\"\n            width=\"99.9%\"\n            paddingRight=\"2%\"\n            justifyItems=\"flex-end\"\n            fontSize=\"8px\"\n            color=\"black1\"\n          >\n            {labelsHar.map(item => (\n              <Flex alignItems=\"flex-start\">\n                |{' '}\n                <Box as=\"span\" width=\"14px\">\n                  {item}s\n                </Box>\n              </Flex>\n            ))}\n          </Flex>\n        ) : (\n          <Flex\n            alignSelf={leftalign ? 'self-end' : ''}\n            fontFamily=\"Montserrat\"\n            fontWeight=\"300\"\n            top=\"0px\"\n            marginLeft={leftalign}\n            height=\"34px\"\n            marginTop=\"8px\"\n            paddingBottom=\"5\"\n            alignItems=\"flex-start\"\n            backgroundColor=\"grey4\"\n            justifyContent=\"space-between\"\n            zIndex=\"0\"\n            width=\"99.9%\"\n            paddingRight=\"2%\"\n            justifyItems=\"flex-end\"\n            fontSize=\"8px\"\n            color=\"black1\"\n          >\n            {labels.map(item => (\n              <Flex alignItems=\"flex-start\">\n                |{' '}\n                <Box as=\"span\" width=\"14px\">\n                  {item}s\n                </Box>\n              </Flex>\n            ))}\n          </Flex>\n        )}\n      </Flex> */}\n\n      <Flex\n        overflow=\"scroll\"\n        //marginTop=\"20px\"\n        flexDirection=\"column\"\n        // bg=\"white\"\n        //background={height ? 'white5' : 'white'}\n\n        height={height || 'auto'}\n        css={{\n          '&::-webkit-scrollbar': {\n            width: '0px',\n          },\n        }}\n        // bg=\"white\"\n      >\n        {children}\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default ChartLayout;\n","import { Box, Flex, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nfunction StatusBox({ children, color }) {\n  return (\n    <Flex alignItems=\"center\" paddingRight=\"10px\">\n      <Box\n        width=\"10px\"\n        height=\"10px\"\n        backgroundColor={color}\n        border=\"1px solid \"\n        borderColor={color}\n        marginRight=\"5px\"\n      ></Box>\n      <Text as=\"span\">{children}</Text>\n    </Flex>\n  );\n}\n\nexport default StatusBox;\n","// @ts-nocheck\nimport { Flex, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport StatusBox from './StatusBox';\n\nfunction HarChartStatus({ NoofRequest }) {\n  return (\n    <Flex\n      fontFamily=\"Montserrat\"\n      fontWeight=\"500\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      padding=\"10px\"\n      borderRadius=\"5px\"\n      //marginTop=\"1px\"\n      backgroundColor=\"white5\"\n    >\n      <Flex paddingLeft=\"5px\" flexDirection=\"column\">\n        <Text>{NoofRequest} Requests</Text>\n\n        {NoofRequest >= 800 && (\n          <Flex width=\"100%\" textTransform=\"none\">\n            Have more than {NoofRequest} Requests might be take time\n          </Flex>\n        )}\n      </Flex>\n      <Flex alignSelf=\"flex-end\" justifyContent=\"center\">\n        <StatusBox color=\"#2F7CCB\">Connect</StatusBox>\n        <StatusBox color=\"#5FA730\">Send</StatusBox>\n        <StatusBox color=\"#C44129\">Receive</StatusBox>\n        <StatusBox color=\"#F9D1E2\">Wait</StatusBox>\n        <StatusBox color=\"#B14D93\">SSL</StatusBox>\n        <StatusBox color=\"#EC9332\">Blocked</StatusBox>\n        <StatusBox color=\"#8e6e4b\">DNS</StatusBox>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default HarChartStatus;\n","// @ts-nocheck\nimport {\n  Flex,\n  RadioGroup,\n  Stack,\n  Radio,\n  Input,\n  Select,\n  Text,\n} from '@chakra-ui/react';\nimport ButtonComp from 'app/components/ButtonComp';\nimport React from 'react';\n\nfunction RadioButton({\n  radioFilter,\n  setRadioFilter,\n  radioFilterInputWaitTime,\n  setRadioFilterInputWaitTime,\n  radioFilterInputBlockedTime,\n  setRadioFilterInputBlockedTime,\n  radioFilterInputUrl,\n  setRadioFilterInputUrl,\n  radioFilterSelectAsset,\n  setRadioFilterSelectAsset,\n  ApplyFilterHandler,\n  radioResetHandler,\n  selectAssetType,\n}) {\n  //console.log(selectAssetType);\n  return (\n    <Flex\n      alignItems=\"center\"\n      padding=\"0px 10px\"\n      fontWeight=\"500\"\n      // bg=\"white\"\n      width=\"100%\"\n      fontFamily=\"Montserrat\"\n    >\n      <RadioGroup\n        width=\"100%\"\n        fontFamily=\"Montserrat\"\n        fontSize=\"500px\"\n        fontSize=\"11px\"\n        size=\"sm\"\n        value={radioFilter}\n        onChange={setRadioFilter}\n      >\n        <Flex justifyContent=\"space-around\" fontSize=\"11px\">\n          <Radio value=\"httpError\" padding=\"0px\" paddingBottom=\"6px\">\n            <Text fontSize=\"11px\">HTTP Error</Text>\n          </Radio>\n          <Radio paddingLeft=\"5px\" paddingBottom=\"6px\" value=\"waitTime\">\n            <Text fontSize=\"11px\"> Wait Time &gt; </Text>\n          </Radio>\n          <Input\n            variant=\"flushed\"\n            _focus={{ color: 'none' }}\n            borderBottom=\"1px solid\"\n            borderBottomColor=\"black\"\n            type=\"number\"\n            fontSize=\"12px\"\n            width=\"35px\"\n            padding=\"0px 5px\"\n            size=\"xs\"\n            fontSize=\"12px\"\n            value={radioFilterInputWaitTime}\n            onChange={e => setRadioFilterInputWaitTime(e.target.value)}\n          ></Input>{' '}\n          <Text\n            as=\"span\"\n            lineHeight=\"30px\"\n            fontSize=\"11px\"\n            textTransform=\"lowercase\"\n          >\n            ms\n          </Text>\n          <Radio\n            padding=\"0px\"\n            paddingLeft=\"5px\"\n            value=\"blockTime\"\n            paddingBottom=\"6px\"\n          >\n            <Text fontSize=\"11px\"> Block Time &gt; </Text>\n          </Radio>\n          <Input\n            variant=\"flushed\"\n            _focus={{ color: 'none' }}\n            borderBottom=\"1px solid\"\n            borderBottomColor=\"black\"\n            width=\"35px\"\n            type=\"number\"\n            padding=\"0px 5px\"\n            value={radioFilterInputBlockedTime}\n            onChange={e => setRadioFilterInputBlockedTime(e.target.value)}\n            fontSize=\"11px\"\n            size=\"xs\"\n          ></Input>{' '}\n          <Text\n            as=\"span\"\n            lineHeight=\"30px\"\n            fontSize=\"12px\"\n            textTransform=\"lowercase\"\n          >\n            ms\n          </Text>\n          <Radio\n            padding=\"0px\"\n            paddingLeft=\"5px\"\n            value=\"url\"\n            paddingBottom=\"6px\"\n          >\n            <Text fontSize=\"12px\"> String </Text>\n          </Radio>\n          <Input\n            variant=\"flushed\"\n            _focus={{ color: 'none' }}\n            borderBottom=\"1px solid\"\n            borderBottomColor=\"black\"\n            width=\"61px\"\n            size=\"xs\"\n            type=\"text\"\n            fontSize=\"12px\"\n            padding=\"3px 50x\"\n            value={radioFilterInputUrl}\n            onChange={e => setRadioFilterInputUrl(e.target.value)}\n          ></Input>\n          <Radio\n            value=\"assetType\"\n            padding=\"0px\"\n            paddingLeft=\"5px\"\n            paddingBottom=\"6px\"\n          >\n            <Text fontSize=\"12px\"> Asset Type </Text>\n          </Radio>\n          <Select\n            variant=\"flushed\"\n            _focus={{ color: 'none' }}\n            borderBottom=\"1px solid\"\n            borderBottomColor=\"black\"\n            width=\"80px\"\n            size=\"xs\"\n            padding=\"2px 3px\"\n            fontSize=\"12px\"\n            placeholder=\"select\"\n            lineHeight=\"25px\"\n            value={radioFilterSelectAsset}\n            onChange={e => setRadioFilterSelectAsset(e.target.value)}\n          >\n            {selectAssetType &&\n              selectAssetType.map((asset, index) => (\n                <option key={index} value={asset}>\n                  {asset}\n                </option>\n              ))}\n\n            {/* <option value=\"application/javascript\">javascript</option> */}\n          </Select>\n          {/* <ButtonComp backgroundColor=\"transparent\" padding=\"0px 3px\">\n            APPLY\n          </ButtonComp> */}\n        </Flex>\n      </RadioGroup>\n\n      <ButtonComp\n        backgroundColor=\"transparent\"\n        buttonHandler={ApplyFilterHandler}\n        padding=\"0px 2px\"\n      >\n        <Text fontSize=\"12px\">APPLY</Text>\n      </ButtonComp>\n\n      <ButtonComp\n        backgroundColor=\"transparent\"\n        buttonHandler={radioResetHandler}\n        padding=\"0px 2px\"\n      >\n        <Text fontSize=\"12px\">RESET</Text>\n      </ButtonComp>\n    </Flex>\n  );\n}\n\nexport default RadioButton;\n","// @ts-nocheck\nimport { Flex } from '@chakra-ui/react';\nimport React, { useEffect, useRef } from 'react';\nlet relativepos;\n// const data = [\n//     {value: 1, type: 'green', id: '1'},\n//  {value: 2, type: 'red', id: '2'},\n//  {value: 3, type: 'red', id: '3'},\n//  {value: 4.5, type: 'green', id: '4'},\n//  {value: 4.8, type: 'green', id: '5'},\n//  {value: 7, type: 'red', id: '6'},\n//  {value: 6, type: 'green', id: '7'},\n//  {value: 3.3, type: 'red', id: '8'}\n// ]\n\nlet arr = [];\nlet columnPos = [];\n\n// function drawLine(lineRef, left, start, pos) {\n//   const line = lineRef.current.getContext('2d');\n//   //lineRef.current.display = 'block';\n//   lineRef.current.style.position = 'absolute';\n//   line.beginPath();\n//   line.moveTo(start, 10);\n//   line.lineTo(start, 200);\n//   line.strokeStyle = 'red';\n//   line.fillStyle = 'red';\n//   line.fill();\n\n//   console.log(start);\n// }\n\nfunction drawArea(testcase, eventRef, width, height, item) {\n  let slide = width / 10;\n\n  eventRef.current.style.position = 'absolute';\n\n  testcase.beginPath();\n  testcase.moveTo(slide * item.value - 10, 5); // starting point (left ,top)\n  // testcase.lineTo(slide * item.value, 10 ); // bottom point (left ,top)\n  // testcase.lineTo(slide * item.value ,0)\n\n  testcase.lineTo(slide * item.value + 10, 5);\n  testcase.lineTo(slide * item.value, 20);\n  testcase.lineTo(slide * item.value - 10, 5);\n  testcase.fill();\n  testcase.lineTo(slide * item.value, 20);\n  testcase.lineTo(slide * item.value, height);\n\n  //   testcase.fill();\n  testcase.fillStyle = '#9999ff';\n  testcase.strokeStyle = '#ccccffe6';\n\n  testcase.stroke();\n\n  let left = relativepos.left;\n\n  arr.push({\n    left: left,\n    start: (relativepos.width / 10) * item.value + left,\n    //eventName: item.eventName,\n    tippos: (relativepos.width / 10) * item.value,\n    ...item,\n  });\n}\n\nfunction draw(testcase, tipRef, eventRef, w, h, data) {\n  //const canvas = testcase.canvas;\n  testcase.fillStyle = '#9999ff';\n\n  arr = [];\n  columnPos = [];\n  //  testcase.fillStyle = '#CEF2FE';\n\n  data.map(item => {\n    drawArea(testcase, eventRef, w, h, item);\n  });\n}\nfunction hoverColumn(x) {\n  let hoveredCol = arr.filter(\n    item => item.start - 1 <= x && x <= item.start + 1,\n  )[0];\n  //console.log(hoveredCol);\n  return hoveredCol;\n}\n\nfunction EventPointerHar({ data, isLeft }) {\n  const eventRef = useRef();\n  const tooltipRef = useRef();\n  const lineRef = useRef();\n  useEffect(() => {\n    let eventElement = eventRef.current.getContext('2d');\n\n    if (eventRef.current) {\n      eventRef.current.position = 'absolute';\n      relativepos = eventRef.current.getBoundingClientRect();\n      draw(\n        eventElement,\n        tooltipRef,\n        eventRef,\n        window.innerWidth,\n        window.innerHeight,\n        data,\n      );\n      // eventElement.fillStyle = 'transparent';\n\n      //    data.map(item => {\n      //     drawArea(eventElement, window.innerWidth, 15, item);\n      // })\n      const handleResize = () => {\n        relativepos = eventRef.current.getBoundingClientRect();\n        //  //console.log(testcase);\n        eventElement.canvas.height = window.innerHeight;\n        eventElement.canvas.width = window.innerWidth;\n        draw(\n          eventElement,\n          tooltipRef,\n          eventRef,\n          window.innerWidth,\n          window.innerHeight,\n          data,\n        );\n      };\n      handleResize();\n      const mouseHandler = e => {\n        if (eventRef.current) {\n          const tooltip = tooltipRef.current.getContext('2d');\n          tooltip.fillStyle = '#ffffff'; //'#6CB2D8' ;// '#290b08cc';\n          //      tooltip.font = '12px montserrat';\n          tooltipRef.current.position = 'absolute';\n\n          const val = hoverColumn(e.clientX);\n\n          if (val && e.clientX < 1300) {\n            //   console.log('match');\n            tooltipRef.current.style.background = '#ffffff'; //'#6CB2D8';  // '#000000cc';\n            //  tooltipRef.current.style.color = 'black';              //'#ffffff';\n            tooltipRef.current.style.fontFamily = 'montserrat';\n            tooltipRef.current.style.fontWeight = 500;\n            tooltipRef.current.style.zIndex = 1000;\n            tooltipRef.current.style.borderRadius = '5px';\n            tooltipRef.current.style.bgColor = '#ffffff'; // '#6CB2D8'\n\n            tooltipRef.current.style.fontSize = '12px';\n            tooltipRef.current.style.display = 'block';\n            tooltipRef.current.style.right = '10px';\n            tooltipRef.current.style.top = '18px';\n            tooltipRef.current.style.zIndex = 2;\n\n            tooltipRef.current.style.left = val.tippos - 110 + 'px';\n\n            tooltip.save();\n            ////console.log(tooltip);\n            tooltip.clearRect(0, 0, 220, 110);\n            tooltip.fillRect(0, 0, 220, 110);\n            tooltip.fillStyle = 'black'; //'white';\n            tooltip.font = 'normal 12px ';\n            tooltip.fillText('event : ' + val.eventName, 5, 12);\n            tooltip.fillText(val.testCase, 5, 25);\n\n            //tooltip.font = '12px'\n            tooltip.restore();\n          } else {\n            tooltipRef.current.style.display = 'none';\n            // console.log('not match');\n          }\n        }\n      };\n      eventRef.current.addEventListener('mousemove', mouseHandler);\n\n      window.addEventListener('resize', handleResize);\n      return () => {\n        window.removeEventListener('mousemove', mouseHandler);\n        window.removeEventListener('resize', handleResize);\n      };\n    }\n  }, [isLeft]);\n\n  return (\n    <Flex height=\"10px\" position=\"relative\">\n      <Flex\n        position=\"absolute\"\n        top=\"-2px\"\n        h=\"35px\"\n        width=\"100%\"\n        zIndex=\"1\"\n        padding=\"0px 40px 0px 10px\"\n        paddingLeft={isLeft ? '215px' : '10px'}\n      >\n        <Flex position=\"relative\" width=\"100%\">\n          <canvas\n            ref={eventRef}\n            id=\"testcase\"\n            style={{\n              width: '100%',\n              height: '450px',\n              zIndex: 1,\n              top: '0px',\n              fontSize: '12px',\n              position: 'absolute',\n              // background : 'red'\n            }}\n          ></canvas>\n          <canvas\n            ref={tooltipRef}\n            height={32}\n            width={210}\n            style={{\n              position: 'absolute',\n              background: 'transparent',\n              display: 'none',\n              fontSize: '12px',\n              boxShadow: '0px 3px 6px #00000029',\n              color: 'black',\n              fontFamily: 'montserrat',\n              zIndex: 1000,\n            }}\n          ></canvas>\n          {/* <canvas ref={lineRef} style={{ position: 'absolute' , background: 'transparent', width: '100%', height: '200px',zIndex: '2' }} ></canvas> */}\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default EventPointerHar;\n","// @ts-nocheck\nimport { Box, Flex, HStack, Switch, Text } from '@chakra-ui/react';\nimport { selectsummaryTableData } from 'app/pages/SummaryTable/slice/selectors';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport EventPointer from './EventPointer';\nimport EventPointerHar from './EventPointerHar';\n\nconst eventdata = [\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:18+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:19+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:20+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:21+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:22+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:23+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:24+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:25+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:25+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:26+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:27+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:28+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:29+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:27+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n];\n\nconst getTwoDigitFormat = val => {\n  if (val <= 9) {\n    return '0' + val;\n  }\n  return val;\n};\nconst getThreeDigitFormat = val => {\n  // if (val <= 99) {\n  //   return  val.toFixed(0);\n  // }\n  return (val / 1000).toFixed(0);\n};\n\nconst makeLabels = time => {\n  // console.log(time/10)\n  //time = 74000;\n  let label = [];\n  let labelInfo = [];\n  let unit = 'ms';\n  // let timeDuration = time\n  if (time > 1000) {\n    time = time / 1000;\n    unit = 's';\n    if (time > 60) {\n      time = time / 60;\n\n      unit = 'm';\n      if (time > 60) {\n        time = time / 60;\n        unit = 'h';\n      }\n    }\n  }\n  // console.log(time + unit);\n  let interval = time / 10;\n  //console.log(time+unit);\n\n  for (let i = 0; i <= 10; i++) {\n    let unit2 = 'ms';\n    const perfect = Math.floor(interval * i);\n\n    if (unit === 'm') {\n      //console.log( Math.floor(((interval*i)-perfect)*60));\n\n      unit2 = 's';\n      label.push(\n        getTwoDigitFormat(perfect) +\n          ':' +\n          getTwoDigitFormat(Math.floor((interval * i - perfect) * 60)) +\n          unit2,\n      );\n      labelInfo.push(\n        getTwoDigitFormat(perfect) +\n          unit +\n          ':' +\n          getTwoDigitFormat(Math.floor((interval * i - perfect) * 60)) +\n          unit2,\n      );\n    } else if (unit === 'h') {\n      //   console.log( Math.floor(((interval*i)-perfect)*60));\n      unit2 = 's';\n      label.push(\n        getTwoDigitFormat(perfect) +\n          ':' +\n          getTwoDigitFormat(Math.floor((interval * i - perfect) * 60)) +\n          unit2,\n      );\n\n      labelInfo.push(\n        getTwoDigitFormat(perfect) +\n          unit +\n          ':' +\n          getTwoDigitFormat(Math.floor((interval * i - perfect) * 60)) +\n          unit2,\n      );\n    } else if (unit === 's') {\n      unit2 = 'ms';\n      label.push(\n        getTwoDigitFormat(perfect) +\n          ':' +\n          getThreeDigitFormat(Math.floor((interval * i - perfect) * 1000)) +\n          unit2,\n      );\n      labelInfo.push(\n        getTwoDigitFormat(perfect) +\n          unit +\n          ':' +\n          getThreeDigitFormat(Math.floor((interval * i - perfect) * 1000)) +\n          unit2,\n      );\n    } else {\n      label.push((interval * i).toFixed(0) + unit);\n      labelInfo.push((interval * i).toFixed(0) + unit);\n    }\n\n    // console.log(perfect);\n  }\n  //console.log(label)\n\n  return labelInfo;\n};\n\nfunction SliderAxisHar({ children, duration, startTime, endTime, isLeft }) {\n  const [labels, setLabels] = useState([]);\n  const [isEnableEvent, setEventEnable] = useState(false);\n  const summaryTableData = useSelector(selectsummaryTableData);\n  // console.log(duration / 10000);\n  const ticksize = duration / 10000;\n  // console.log(new Date(startTime));\n  // console.log(new Date(endTime));\n  //   console.log(summaryTableData);\n  let data = [];\n  // eventdata.map((value, index) => {\n  summaryTableData.map((value, index) => {\n    //console.log(value);\n    data.push({\n      value:\n        (new Date(value.time).valueOf() - new Date(startTime).valueOf()) /\n        1000 /\n        ticksize,\n      id: index,\n      ...value,\n    });\n\n    // console.log(\n    //   (new Date(value.time).valueOf() - new Date(startTime).valueOf()) / 1000,\n    // );\n    // console.log(new Date(value.time))\n  });\n  // console.log(data);\n\n  useEffect(() => {\n    setLabels(makeLabels(duration));\n  }, [duration]);\n  // console.log(labels);\n  return (\n    <Flex\n      width=\"100%\"\n      flexDirection=\"column\"\n      padding=\"0px\"\n      margin=\"0px\"\n      fontFamily=\"Montserrat\"\n      fontWeight=\"500\"\n    >\n      {summaryTableData.length > 0 && (\n        <Flex padding=\"5px\" paddingBottom=\"0px\">\n          <HStack alignContent=\"center\">\n            <Text fontSize=\"12px\" textAlign=\"end\" as=\"span\">\n              Enable Events\n            </Text>\n            <Switch\n              isFocusable={false}\n              size=\"sm\"\n              height=\"16px\"\n              _focus={{ boxShadow: '0px 0px 0px white' }}\n              margin=\"0px\"\n              padding=\"0px\"\n              isChecked={isEnableEvent}\n              onChange={e => setEventEnable(e.target.checked)}\n              marginTop=\"5px\"\n            />\n          </HStack>\n        </Flex>\n      )}\n\n      <Flex\n        fontFamily=\"Montserrat\"\n        fontWeight=\"300\"\n        height=\"25px\"\n        marginTop=\"10px\"\n        backgroundColor=\"#DEDEDE\"\n        justifyContent=\"space-between\"\n        borderRadius=\"2px\"\n        width=\"100%\"\n        color=\"black\"\n        paddingLeft={isLeft ? '212px' : '10px'}\n        //paddingLeft=\"10px\"\n        alignContent=\"flex-end\"\n      >\n        {labels.map(item => (\n          <Flex\n            padding=\"1px\"\n            fontSize=\"8px\"\n            whiteSpace=\"nowrap\"\n            textAlign=\"start\"\n            as=\"span\"\n            //width=\"45px\"\n            boxSize={`calc(100% / 10)`}\n          >\n            | {item}\n          </Flex>\n        ))}\n      </Flex>\n      {!isEnableEvent && <Flex h=\"10px\"></Flex>}\n      {isEnableEvent && (\n        <EventPointerHar isLeft={isLeft} data={data}></EventPointerHar>\n      )}\n      {children}\n    </Flex>\n  );\n}\n\nexport default SliderAxisHar;\n","// @ts-nocheck\nimport { Flex, Text } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport am4themes_dataviz from '@amcharts/amcharts4/themes/dataviz';\nimport {\n  selectHarChartData,\n  selectHarChartDetailsData,\n} from '../slice/selector';\n\nam4core.useTheme(am4themes_dataviz);\nam4core.useTheme(am4themes_animated);\nam4core.addLicense('ch-custom-attribution');\n\nfunction HarChartComp({ chartData , id }) {\n\n  \n  useEffect(() => {\n     //console.log({chartData})\n    if(!chartData || !chartData.length) {\n      return undefined;\n    }\n    const harData = chartData.map((item , index)=> {\n      const obj = {...item}\n      obj.category = `[${index}]${item.category}`; \n      return obj\n    })\n    //console.log({harData}) \n    var chart = am4core.create(`chartdiv${id}`, am4charts.XYChart);\n    chart.data = harData;\n    am4core.color('#ff0000');\n    am4core.addLicense('ch-custom-attribution');\n    //am4core.PointerOrientation\n    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = 'category';\n    categoryAxis.renderer.labels.template.truncate = true;\n    categoryAxis.renderer.labels.template.warp = true;\n    categoryAxis.renderer.labels.template.maxWidth = 200;\n    categoryAxis.renderer.labels.template.minWidth = 200;\n    categoryAxis.renderer.labels.template.paddingLeft = 0;\n    categoryAxis.renderer.labels.template.tooltipText = '{category}';\n  \n    categoryAxis.renderer.labels.template.adapter.add('text', (text, label) => {\n      return `{method} | ${text}`;\n    });\n   // categoryAxis.renderer.labels.template.adapter.text = '{method}:{category}';\n    categoryAxis.tooltip.label.maxWidth = 199;\n    categoryAxis.tooltip.label.wrap = true;\n    categoryAxis.renderer.labels.template.tooltipX = am4core.percent(100);\n    categoryAxis.renderer.labels.template.tooltipY = am4core.percent(50);\n    categoryAxis.renderer.cellStartLocation = 0.1;\n    categoryAxis.renderer.cellEndLocation = 0.9;\n    categoryAxis.renderer.labels.template.rotation = true;\n    categoryAxis.renderer.labels.template.fontSize = 12;\n    categoryAxis.renderer.labels.template.fill = am4core.color('#707070');\n    categoryAxis.renderer.grid.template.location = 0;\n    categoryAxis.renderer.minGridDistance = 20;\n    categoryAxis.renderer.maxGridDistance = 22;\n    categoryAxis.renderer.ticks.template.disabled = false;\n    categoryAxis.renderer.ticks.template.strokeOpacity = 0;\n    categoryAxis.renderer.grid.template.strokeWidth = 1;\n    categoryAxis.renderer.inversed = true;\n    var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\n    valueAxis.tooltip.disabled = true;\n    valueAxis.calculateTotals = true;\n    valueAxis.renderer.grid.template.strokeWidth = 0;\n    valueAxis.renderer.opposite = false;\n    valueAxis.renderer.labels.template.disabled = true;\n\n    //  valueAxis.tooltip.disabled = true;\n    let block = 'blocked' === -1 ? '-1' : 'blocked';\n\n    let tooltipHTML = `<center><strong><h3 style=\"text-transform : capitalize\" >Request Time{categoryX}</h3></strong></center>\n  <hr />\n  <table style=\"padding : 5px\" >\n  <tr>\n    <th align=\"left\">Blocked time</th>\n    <td> {blockedTooltip}</td>\n  </tr>\n  <tr>\n    <th align=\"left\">Connection time</th>\n    <td> {connectTooltip}</td>\n  </tr>\n  <tr>\n    <th align=\"left\">Send time</th>\n    <td>{sendTooltip}</td>\n  </tr>\n  <tr>\n    <th align=\"left\">Wait time</th>\n    <td>{waitTooltip}</td>\n  </tr>\n  <tr>\n    <th align=\"left\">Receive time</th>\n    <td>{reciveTooltip}</td>\n  </tr>\n  <tr>\n    <th align=\"left\">SSL time</th>\n    <td>{sslTooltip}</td>\n  </tr>\n  <tr>\n    <th align=\"left\">DNS time</th>\n    <td>{sslTooltip}</td>\n  </tr>\n  </table>\n  <hr />`;\n\n    // create series\n    function createSeries(open, close, names, showSum, color, values ,opacity ) {\n      var series = chart.series.push(new am4charts.ColumnSeries());\n\n      series.columns.template.tooltipHTML = tooltipHTML;\n      series.fillOpacity = opacity ? 0.1 : 1; \n      series.tooltip.getFillFromObject = false;\n      series.tooltip.background.fill = am4core.color('#6CB2D8');\n      series.tooltip.label.fill = am4core.color('#ffffff');\n      series.chart.tooltip.label.fontSize = 12;\n      series.chart.tooltip.label.textTransform = 'capitalize';\n\n      series.dataFields.valueX = close;\n      series.dataFields.openValueX = open;\n      series.dataFields.categoryY = 'category';\n      series.clustered = false;\n      series.strokeWidth = 0;\n      series.fill = am4core.color(color);\n\n      if (showSum) {\n        const sumBullet = series.bullets.push(new am4charts.LabelBullet());\n        sumBullet.label.text = '{totalTime}';\n        sumBullet.label.truncate = false;\n        sumBullet.label.fontSize = 10;\n        sumBullet.label.horizontalCenter = 'left';\n        sumBullet.verticalCenter = 'bottom';\n        // sumBullet.locationX = 2;\n        // sumBullet.dy = 0;\n        sumBullet.dx = 5;\n        // sumBullet.label.adapter.add('text', function (text, target) {\n        //   var val = Math.abs(\n        //     target.dataItem.dataContext.receiveClose -\n        //       target.dataItem.dataContext.blockedOpen,\n        //   ).toFixed(1);\n        //   if (val < 1000) {\n        //     return val + 'ms';\n        //   } else if (val >= 1000 && val < 60000) {\n        //     return (val / 1000).toFixed(1) + 's';\n        //   }\n        //   return (val / 3600).toFixed(1) + 'm';\n        // });\n        sumBullet.label.adapter.add('text', function (text, target) {\n          var val = Math.abs(\n            target.dataItem.dataContext.totalTime\n          ).toFixed(1);\n          if (val < 1000) {\n            return val + 'ms';\n          } else if (val >= 1000 && val < 60000) {\n            return (val / 1000).toFixed(1) + 's';\n          }\n          return (val / 3600).toFixed(1) + 'm';\n        });\n      }\n    }\n    // chart.scrollbarX = new am4core.Scrollbar();\n    // chart.cursor = new am4charts.XYCursor();\n    // chart.cursor.maxTooltipDistance = -1;\n\n    createSeries('startTime', 'beginingTime', '', false, '#ffffff' , true , true);\n    createSeries('blockedOpen', 'blockedClose', 'block', false, '#EC9332' , false);\n    createSeries('dnsOpen', 'dnsClose', 'dns', false, '#8e6e4b' , false);\n    createSeries('sslOpen', 'sslClose', 'ssl', false, '#B14D93' , false);\n    createSeries('connectOpen', 'connectClose', 'connect', false, '#2F7CCB', false);\n    createSeries('sendOpen', 'sendClose', 'send', false, '#5FA730' , false);\n    createSeries('waitOpen', 'waitClose', 'wait', false, '#F9D1E2' , false);\n    createSeries('receiveOpen', 'receiveClose', 'receive', true, '#C44129' , false);\n    //    setData(harData);\n    return () => {\n      chart.dispose();\n    }\n  }, [chartData]);\n\n \nif(!chartData || !chartData.length) {\n  return (<>No Content</>)\n}\n\n  return (\n    <>\n  \n        <Flex\n          position=\"absolute\"\n          zIndex=\"1\"\n          flexDirection=\"column\"\n          marginTop=\"10px\"\n          //   height={\n          //           harData.length <= 8\n          //       ? harData.length * 37 + 'px'\n          //       : harData.length * 28 + 'px'\n          //   }\n          height={\n            chartData.length == 1\n              ? chartData.length * 55 + 'px'\n              : chartData.length <= 3\n              ? chartData.length * 45 + 'px'\n              : chartData.length <= 8\n              ? chartData.length * 37 + 'px'\n              : chartData.length * 28 + 'px'\n          }\n          background=\"transparent\"\n          width=\"100%\"\n          bg=\"transparent\"\n          paddingRight=\"18px\"\n          //   position = 'relative'\n          //boxShadow=\"  0px 0px 6px #00000029 inset\"\n          // borderLeft=\"1px solid #00000029 \"\n          // borderRight=\"1px solid #00000029 \"\n          textTransform=\"lowercase\"\n          id={`chartdiv${id}`}\n        ></Flex>\n      \n    </>\n  );\n}\n\nexport default HarChartComp;\n","import { Flex, Text, CloseButton, Img } from '@chakra-ui/react';\nimport React from 'react';\nimport copyIcon from '../../styles/Assets/Icon material-content-copy.svg';\n\nfunction PopupComp({ onClose, title, activePopup, children }) {\n  return (\n    <Flex\n      fontFamily=\"Montserrat\"\n      fontWeight=\"500\"\n      fontSize=\"14px\"\n      overflow=\"hidden\"\n      height=\"546px\"\n      zIndex=\"10\"\n      display={activePopup ? 'block' : 'none'}\n      flexDirection=\"column\"\n      position=\"absolute\"\n      width=\"484px\"\n      backgroundColor=\"white1\"\n      boxShadow=\"0px 3px 6px #00000029\"\n      right=\"-5px\"\n      top=\"-10px\"\n      borderRadius=\"5px\"\n      // onBlur={() => setActivePopup(false)}\n    >\n      <Flex\n        padding=\"20px 25px\"\n        paddingBottom=\"10px\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Text fontFamily=\"Montserrat\" fontWeight=\"600\" as=\"b\" color=\"black1\">\n          {' '}\n          {title}\n          {/* <Img\n            paddingLeft=\"5px\"\n            width=\"14px\"\n            height=\"16px\"\n            display=\"inline-block\"\n            src={copyIcon}\n          ></Img> */}\n        </Text>\n        <CloseButton\n          onClick={() => {\n            onClose();\n          }}\n        ></CloseButton>\n      </Flex>\n\n      <div>{children}</div>\n    </Flex>\n  );\n}\n\nexport default PopupComp;\n","import { Flex, Icon } from '@chakra-ui/react';\nimport React from 'react';\nimport { HiDownload } from 'react-icons/hi';\nconst fileDownload = require('js-file-download');\n\nfunction DownloadJson({ data, backgroundColor, fileName }) {\n  const downloadHandler = () => {\n    fileDownload(JSON.stringify(data), 'Har ' + fileName + '.json');\n  };\n  return (\n    <Flex\n      alignContent=\"center\"\n      padding=\"0px 2px\"\n      backgroundColor={backgroundColor}\n    >\n      <Icon\n        cursor=\"pointer\"\n        color=\"grey2\"\n        as={HiDownload}\n        onClick={downloadHandler}\n      ></Icon>\n    </Flex>\n  );\n}\n\nexport default DownloadJson;\n","// @ts-nocheck\nimport { Box, Button, Flex, Icon, Text, Tooltip } from '@chakra-ui/react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport React, { useState } from 'react';\nimport { MdContentCopy } from 'react-icons/md';\nimport { TiTick } from 'react-icons/ti';\nimport DownloadJson from './DownloadJson';\n\ninterface PropsType {\n  text?: string | number;\n  borderBottom?: string;\n  date?: string | number;\n  isDownload?: boolean;\n  fileName?: string;\n  isNotHover?: boolean;\n  tooltipMessage?: string;\n}\n\nfunction CopyToClipBoardComp({\n  text,\n  borderBottom,\n  data,\n  isDownload,\n  fileName,\n  isNotHover,\n  tooltipMessage,\n}: propsType) {\n  const [getText, setText] = useState(text);\n  const [copyIcon, setCopyIcon] = useState(true);\n  const setCopyIconHandler = () => {\n    setCopyIcon(false);\n    setTimeout(() => {\n      setCopyIcon(true);\n    }, 2000);\n  };\n\n  return (\n    <Flex\n      id=\"hoverTargetId\"\n      alignContent=\"center\"\n      borderBottom={borderBottom ? '1px solid ' : '0px solid'}\n      borderBottomColor=\"white8\"\n      padding=\"1px 2px 1px 0px\"\n      width=\"100%\"\n    >\n      <Flex width=\"8%\" height=\"13px\" alignContent=\"center\" alignItems=\"center\">\n        {isDownload && (\n          <Flex\n            display=\"none\"\n            color=\"grey2\"\n            alignContent=\"center\"\n            marginTop=\"4px\"\n            sx={{\n              '#hoverTargetId:hover &': {\n                display: 'block',\n              },\n            }}\n          >\n            <DownloadJson fileName={fileName} data={data}></DownloadJson>\n          </Flex>\n        )}\n        <Flex alignContent=\"center\" justifyContent=\"center\" alignItems=\"center\">\n          <CopyToClipboard text={text} onCopy={setCopyIconHandler}>\n            <Flex\n              alignContent=\"center\"\n              alignItems=\"center\"\n              flexDirection=\"row\"\n              display={isNotHover ? 'block' : 'none'}\n              // padding=\"0px 2px\"\n              color=\"grey2\"\n              cursor=\"pointer\"\n              //  right=\"20\"\n              sx={{\n                '#hoverTargetId:hover &': {\n                  display: 'block',\n                },\n              }}\n            >\n              <Tooltip\n                label={tooltipMessage}\n                fontSize=\"10px\"\n                placement=\"auto-start\"\n              >\n                <span>\n                  {copyIcon ? (\n                    <Icon\n                      cursor=\"pointer\"\n                      height=\"12px\"\n                      as={MdContentCopy}\n                    ></Icon>\n                  ) : (\n                    <Icon height=\"12px\" as={TiTick}></Icon>\n                  )}\n                </span>\n              </Tooltip>\n            </Flex>\n          </CopyToClipboard>\n        </Flex>\n      </Flex>\n\n      <Flex alignItems=\"center\" width=\"92%\" paddingTop=\"3px\">\n        <Text\n          textTransform=\"lowercase\"\n          color=\"grey2\"\n          align=\"center\"\n          width=\"100%\"\n          textAlign=\"start\"\n          textOverflow=\"hidden\"\n          fontSize=\"12px\"\n          paddingLeft=\"2px\"\n          overflow=\"hidden\"\n          fontWeight=\"500\"\n          whiteSpace=\"nowrap\"\n          textOverflow=\"ellipsis\"\n          // bg=\"red\"\n        >\n          {!isNotHover && text}\n        </Text>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default CopyToClipBoardComp;\n","// @ts-nocheck\nimport {\n  Flex,\n  Input,\n  Text,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  AccordionIcon,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport CopyToClipBoardComp from './CopyToClipBoardComp';\nimport DownloadJson from './DownloadJson';\n\nfunction SummaryCard({ title, data, getFilterInput, setFilterInput }) {\n  // console.log(data);\n  return (\n    <AccordionItem\n      width=\"100%\"\n      bg=\"transparent\"\n      fontFamily=\"Montserrat\"\n      fontWeight=\"500\"\n      //bg=\"red\"\n    >\n      <Flex flexDirection=\"column\" fontFamily=\"Montserrat\">\n        <AccordionButton\n          fontFamily=\"Montserrat\"\n          fontWeight=\"600\"\n          backgroundColor=\"#EDEDED\"\n          width=\"100%\"\n          height=\"40px\"\n          _hover={{ backgroundColor: 'none' }}\n          backgroundColor=\"none\"\n          _focus={{ boxShadow: ' 0 0 0 white' }}\n          padding=\"0\"\n        >\n          <Flex\n            width=\"100%\"\n            textAlign=\"start\"\n            fontWeight=\"600\"\n            color=\"grey13\"\n            fontSize=\"14px\"\n            alignItems=\"center\"\n            alignContent=\"center\"\n            backgroundColor=\"#EDEDED\"\n            height={title}\n            lineHeight=\"20px\"\n            padding=\"2px 15px\"\n            fontFamily=\"Montserrat\"\n          >\n            <Text> {title}</Text>\n            {setFilterInput && (\n              <span>\n                {' '}\n                &nbsp; &gt;{' '}\n                <Input\n                  variant=\"flushed\"\n                  width=\"60px\"\n                  size=\"xs\"\n                  value={getFilterInput}\n                  onChange={e => setFilterInput(e.target.value)}\n                  borderBottom=\"1px solid\"\n                  borderBottomColor=\"black\"\n                  lineHeight=\"20px\"\n                  _focus={{ boxShadow: ' 0 0 0 white' }}\n                ></Input>\n                <Text as=\"span\" textTransform=\"none\">\n                  ms\n                </Text>{' '}\n              </span>\n            )}\n\n            <span>({data.length})</span>\n            <Flex\n              color=\"grey13\"\n              flex={1}\n              padding=\"2px 10px\"\n              justifyContent=\"flex-end\"\n              alignItems=\"center\"\n              fontSize=\"14px\"\n            >\n              <DownloadJson fileName={title} data={data}></DownloadJson>\n            </Flex>\n          </Flex>\n        </AccordionButton>\n\n        {/* <Box flex='1' textAlign='left'>\n          Section 1 title\n        </Box>\n        <AccordionIcon /> */}\n\n        <AccordionPanel pb={0} width=\"100%\" bg=\"white\">\n          <Flex\n            flexDirection=\"column\"\n            // width=\"100%\"\n            // //paddingBottom=\"15px\"\n            // overflowY=\"scroll\"\n            // css={{\n            //   '&::-webkit-scrollbar': {\n            //     width: '2px',\n            //   },\n            // }}\n          >\n            {data.map(item => (\n              // <Text\n              //   textTransform=\"lowercase\"\n              //   color=\"grey2\"\n              //   borderBottom=\"1px solid \"\n              //   borderBottomColor=\"white8\"\n              //   padding=\"2px 25px\"\n              //   paddingTop=\"3px\"\n              //   fontWeight=\"500\"\n              //   whiteSpace=\"nowrap\"\n              //   textOverflow=\"ellipsis\"\n              // >\n              //   {' '}\n              //   {item.category}\n              // </Text>\n              <CopyToClipBoardComp\n                fileName={title}\n                data={item}\n                isDownload={true}\n                borderBottom={true}\n                text={item.category}\n              >\n                {' '}\n              </CopyToClipBoardComp>\n            ))}\n          </Flex>\n        </AccordionPanel>\n      </Flex>\n    </AccordionItem>\n  );\n}\n\nexport default SummaryCard;\n","// @ts-nocheck\nimport { Accordion, AccordionItem, Flex, Select, Text } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport SummaryCard from '../Components/SummaryCard';\nimport {\n  selectHarChartData,\n  selectHarIssueSummaryEntiesData,\n} from '../slice/selector';\n\nfunction IssueSummaryPopup() {\n  const [filterHttpErrrorData, setFilterHttpErrorData] = useState([]);\n  const [filterHttpError4xxData, setFilterHttpError4xxData] = useState([]);\n  const [filterHttpError5xxData, setFilterHttpError5xxData] = useState([]);\n  const [filterWaitTimeData, setFilterWaitTimeData] = useState([]);\n  const [filterSlowuiThreadData, setFilterSlowuiThreadData] = useState([]);\n  const [filterSSLData, setFilterSSLData] = useState([]);\n  const [filterSlowNetworkData, setFilterSlowNetworkData] = useState([]);\n  const [getFilterInputWaitTime, setFilterInputWaitTime] = useState(200);\n  const [getFilterInputSlowUi, setFilterInputSlowUi] = useState(100);\n  const [getFilterInputSSL, setFilterInputSSL] = useState(200);\n  const [getFilterInputSLowNetWork, setFilterSlowNetWork] = useState(100);\n  const EntiesData = useSelector(selectHarChartData);\n  //console.log(EntiesData);\n\n  useEffect(() => {\n    // filterHttpData();\n    filterHttp4xxData();\n    filterHttp5xxData();\n  }, [EntiesData]);\n\n  useEffect(() => {\n    filterWaitTime();\n    filterSlowUiThread();\n    filterSslTime();\n    filterSlowNewworkTime();\n  }, [\n    getFilterInputWaitTime,\n    getFilterInputSlowUi,\n    getFilterInputSSL,\n    getFilterInputSLowNetWork,\n    EntiesData,\n  ]);\n\n  // const filterHttpData = () => {\n  //   const data = EntiesData.filter(item => item.status > 399);\n  //   setFilterHttpErrorData(data);\n  // };\n  const filterHttp4xxData = () => {\n    const data = EntiesData.filter(\n      item => item.status > 399 && item.status < 499,\n    );\n    setFilterHttpError4xxData(data);\n  };\n  const filterHttp5xxData = () => {\n    const data = EntiesData.filter(item => item.status > 499);\n    setFilterHttpError5xxData(data);\n  };\n\n  const filterWaitTime = () => {\n    const data = EntiesData.filter(item => item.wait > getFilterInputWaitTime);\n    setFilterWaitTimeData(data);\n  };\n  const filterSlowUiThread = () => {\n    const data = EntiesData.filter(item => item.blocked > getFilterInputSlowUi);\n    setFilterSlowuiThreadData(data);\n  };\n  const filterSslTime = () => {\n    const data = EntiesData.filter(item => item.ssl > getFilterInputSSL);\n    setFilterSSLData(data);\n  };\n  const filterSlowNewworkTime = () => {\n    const data = EntiesData.filter(\n      item => item.connect > getFilterInputSLowNetWork,\n    );\n    setFilterSlowNetworkData(data);\n  };\n\n  return (\n    <Flex\n      height=\"470px\"\n      marginBottom=\"5px\"\n      flexDirection=\"column\"\n      paddingBottom=\"20px\"\n    >\n      <Flex\n        flexDirection=\"column\"\n        overflowY=\"scroll\"\n        css={{\n          '&::-webkit-scrollbar': {\n            width: '8px',\n            //height: '30px',\n            border: '5px solid #F3F6F9',\n          },\n          '&::-webkit-scrollbar-track': {\n            boxShadow: 'inset 0 0 6px white',\n          },\n          '&::-webkit-scrollbar-thumb': {\n            backgroundColor: '#C1C1C1',\n            borderRadius: '5px',\n            boreder: '2px solid',\n          },\n        }}\n      >\n        <Accordion allowToggle>\n          {/* <SummaryCard\n            title=\"Https Error\"\n            data={filterHttpErrrorData}\n          ></SummaryCard> */}\n\n          <Flex flexDirection=\"column\">\n            <Text\n              padding=\"2px 15px\"\n              fontWeight=\"600\"\n              color=\"grey13\"\n              backgroundColor=\"#EDEDED\"\n            >\n              HTTP Errors\n            </Text>\n            <Flex flexDirection=\"column\" paddingLeft=\"8px\">\n              <SummaryCard\n                title=\"HTTP Error 4xx\"\n                data={filterHttpError4xxData}\n              ></SummaryCard>\n              <SummaryCard\n                title=\"HTTP Error 5xx\"\n                data={filterHttpError5xxData}\n              ></SummaryCard>\n            </Flex>\n          </Flex>\n\n          <SummaryCard\n            title=\"Wait Time\"\n            data={filterWaitTimeData}\n            getFilterInput={getFilterInputWaitTime}\n            setFilterInput={setFilterInputWaitTime}\n          ></SummaryCard>\n\n          <SummaryCard\n            title=\"Blocked Time\"\n            getFilterInput={getFilterInputSlowUi}\n            setFilterInput={setFilterInputSlowUi}\n            data={filterSlowuiThreadData}\n          ></SummaryCard>\n\n          <SummaryCard\n            title=\"SSL/TLS Time\"\n            getFilterInput={getFilterInputSSL}\n            setFilterInput={setFilterInputSSL}\n            data={filterSSLData}\n          ></SummaryCard>\n          <SummaryCard\n            title=\"Connect Time\"\n            getFilterInput={getFilterInputSLowNetWork}\n            setFilterInput={setFilterSlowNetWork}\n            data={filterSlowNetworkData}\n          ></SummaryCard>\n        </Accordion>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default IssueSummaryPopup;\n","// @ts-nocheck\nimport React from 'react';\nimport { Flex, Text } from '@chakra-ui/react';\nimport CopyToClipBoardComp from './CopyToClipBoardComp';\nfunction UploadDownloadCard({ url, size, type }) {\n  return (\n    <Flex flexDirection=\"column\" padding=\"5px 0px\">\n      <Flex color=\"grey8\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text textTransform=\"lowercase\">\n          {' '}\n          <Text textTransform=\"uppercase\" as=\"span\">\n            {' '}\n            Url{' '}\n          </Text>{' '}\n          for most data {type}\n        </Text>\n        <Text textTransform=\"capitalize\">{type}</Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Text\n          textTransform=\"lowercase\"\n          width=\"80%\"\n          whiteSpace=\"nowrap\"\n          overflow=\"hidden\"\n        >\n          <CopyToClipBoardComp\n            borderBottom={false}\n            text={url}\n          ></CopyToClipBoardComp>\n        </Text>\n        <Text>{size}</Text>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default UploadDownloadCard;\n","// @ts-nocheck\nimport { Flex, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport UploadDownloadCard from './UploadDownloadCard';\n\nfunction DataExchangeCard({ dataExchange }) {\n  // console.log(dataExchange)\n  return (\n    <Flex\n      fontFamily=\"Montserrat\"\n      fontWeight=\"500\"\n      padding=\"15px\"\n      color=\"black1\"\n      flexDirection=\"column\"\n      boxSizing=\"border-box\"\n      height=\"158px\"\n      width=\"440px\"\n      marginLeft=\"auto\"\n      marginRight=\"auto\"\n      backgroundColor=\"white1\"\n      boxShadow=\"0px 3px 6px #00000029\"\n      borderRadius=\"4px\"\n    >\n      <Text fontWeight=\"600\" paddingBottom=\"5px\">\n        Data Exchange\n      </Text>\n\n      <UploadDownloadCard\n        url={dataExchange.most_download.url}\n        size={\n          dataExchange.most_download.download + dataExchange.most_download.unit\n        }\n        type={dataExchange.most_download.name}\n      ></UploadDownloadCard>\n      <UploadDownloadCard\n        url={dataExchange.most_upload.url}\n        size={dataExchange.most_upload.upload + dataExchange.most_upload.unit}\n        type={dataExchange.most_upload.name}\n      ></UploadDownloadCard>\n    </Flex>\n  );\n}\n\nexport default DataExchangeCard;\n","// @ts-nocheck\n\nimport React from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { Flex } from '@chakra-ui/layout';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(ArcElement, Tooltip, Legend);\nfunction PieChart({ pieData, label, sliceBackgroundColor }) {\n  // console.log({pieData, label , sliceBackgroundColor});\n\n  const pieOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n\n    plugins: {\n      legend: {\n        display: true,\n\n        position: 'bottom',\n        align: 'start',\n\n        labels: {\n          boxWidth: 10,\n          padding: 8,\n        },\n\n        maxWidth: 200,\n        // maxHeight : 200 ,\n        maxHeight: 150,\n\n        padding: 0,\n      },\n    },\n\n    elements: {\n      arc: {\n        borderWidth: 0,\n      },\n    },\n  };\n\n  const data = {\n    labels: pieData.labels,\n    datasets: [\n      {\n        data: pieData.values,\n        backgroundColor: sliceBackgroundColor,\n        hoverBackgroundColor: '#FBC2C0',\n        hoverBorderColor: '#F1150E',\n      },\n    ],\n  };\n\n  return (\n    <Flex width=\"210px\">\n      <Pie data={data} options={pieOptions}></Pie>\n    </Flex>\n  );\n}\n\nexport default PieChart;\n","import { Flex, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport PieChart from './PieChart';\nimport InfoComponent from 'app/pages/Appium/components/InfoComponent';\n\nfunction SummaryPieBox({ title, subtitle, data, children , isInfoMessage}) {\n  return (\n    <Flex\n      flexDirection=\"column\"\n      color=\"black1\"\n      padding=\"10px\"\n      margin=\"5px\"\n      width=\"215px\"\n      height=\"240px\"\n      boxShadow=\"0px 3px 6px #00000029\"\n      background=\"white1\"\n      border=\"0.2px solid\"\n      borderColor=\"white9\"\n      borderRadius=\"4px\"\n      fontFamily=\"Montserrat\"\n      fontWeight=\"500\"\n    >\n      \n        <Flex width=\"100%\" justifyContent=\"space-between\" alignContent='center' padding=\" 2px\" >\n        <Text fontWeight=\"600\" as=\"span\">\n        {title}\n        </Text>\n      {isInfoMessage &&  <InfoComponent labelmessage={isInfoMessage}></InfoComponent> }\n        </Flex>\n      \n  \n      <Text\n        fontSize=\"12px\"\n        boxShadow={subtitle ? '0px 3px 6px #00000029' : ' '}\n        marginTop=\"2px\"\n        paddingLeft=\"12px\"\n        lineHeight=\"26px\"\n        height=\"26px\"\n        marginBottom=\"5px\"\n      >\n        {subtitle}\n      </Text>\n      <Flex width=\"200px\" height={false ? '125px' : '170px'}>\n        {children}\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default SummaryPieBox;\n","//@ts-nocheck\nimport { Select } from '@chakra-ui/react'\nimport React from 'react'\nimport PieChart from '../PieChart'\nimport SummaryPieBox from '../SummaryPieBox'\nimport InfoComponent from 'app/pages/Appium/components/InfoComponent'\n\nfunction PieLayout({title , data ,backgroundColors , isInfoMessage}) {\n    //console.log({data })\n  return (\n    <SummaryPieBox\n    isInfoMessage={isInfoMessage}\n    title={title }\n    subtitle ={`Total : ${data.waterfall.total} ${data.unit}`}\n    // subtitle={\n    //   <Select\n    //     fontSize=\"12px\"\n    //     _focus={{ boxShadow: ' 0 0 0 white' }}\n    //     //onChange={e => setSelectUrl(e.target.value)}\n    //     //value={selectUrl}\n    //     height=\"25px\"\n    //     border=\"0px solid\"\n    //   >\n    //     {data.values.map((item, key) => (\n    //       <option value={key}>{item.url}</option>\n    //     ))}\n    //   </Select>\n    //}\n  >\n     \n    <PieChart\n      sliceBackgroundColor={backgroundColors}\n      //label={data.labels}\n      pieData={data}\n    ></PieChart>\n  </SummaryPieBox>\n  )\n}\n\nexport default PieLayout","// @ts-nocheck\nimport { Flex, Text } from '@chakra-ui/layout';\nimport { Table, Tbody, Td, Th, Thead, Tr } from '@chakra-ui/table';\nimport React from 'react';\nimport CopyToClipBoardComp from './CopyToClipBoardComp';\n\nfunction TopAssets({ title, data }) {\n  //console.log(data)\n  return (\n    <Flex\n      fontFamily=\"Montserrat\"\n      padding=\"15px 10px\"\n      width=\"441px\"\n      flexDirection=\"column\"\n      backgroundColor=\"white1\"\n      fontWeight=\"500\"\n      boxShadow=\"0px 3px 6px #00000029\"\n      margin=\"0px auto\"\n      marginTop=\"10px\"\n    >\n      <Text as=\"span\" fontWeight=\"600\">\n        Top 3 {title}\n      </Text>\n      <Flex flexDirection=\"column\" fontWeight=\"500\">\n        {/* table heading */}\n        <Flex\n          borderBottom=\"1px solid \"\n          borderBottomColor=\"white3\"\n          color=\"grey8\"\n          marginRight=\"10px\"\n        >\n          <Text width=\"60%\"> {title} </Text>\n          <Flex justifyContent=\"space-between\" width=\"40%\">\n            <Text marginLeft=\"10px\">Type</Text>\n            <Text marginLeft=\"10px\"> Size</Text>\n          </Flex>\n          {/* <Text marginLeft=\"10px\"> Values</Text> */}\n        </Flex>\n        {/* table body*/}\n        {data.map(item => {\n          return (\n            <Flex\n              borderBottom=\"1px solid \"\n              borderBottomColor=\"white3\"\n              justifyContent=\"space-between\"\n              marginRight=\"10px\"\n            >\n              <Text overflow=\"hidden\" width=\"60%\">\n                {/* {item.url} */}\n                <CopyToClipBoardComp\n                  text={item.url}\n                  borderBottom={false}\n                ></CopyToClipBoardComp>\n              </Text>\n\n              <Flex width=\"40%\" justifyContent=\"space-between\">\n                <Text fontSize=\"12px\" marginLeft=\"10px\">\n                  {item.type}\n                </Text>\n                <Text marginLeft=\"10px\" fontSize=\"12px\" whiteSpace=\"nowrap\">\n                  {item.size + item.unit}\n                </Text>\n              </Flex>\n            </Flex>\n          );\n        })}\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default TopAssets;\n","// @ts-nocheck\nimport { Flex, Select } from '@chakra-ui/react';\nimport { selectTestSessionData } from 'app/pages/TestSession/slice/selectors';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport DataExchangeCard from '../Components/DataExchangeCard';\nimport PieChart from '../Components/PieChart';\nimport PieLayout from '../Components/PieLayout';\nimport SummaryPieBox from '../Components/SummaryPieBox';\nimport TopAssets from '../Components/TopAssets';\nimport { selectHarKpiData } from '../slice/selector';\n\nconst assetbackgroudColor = [\n  '#EC9332',//\"blocked\"\n  '#8e6e4b',//\"dns\"\n  '#B14D93',//\"ssl\"\n  '#2F7CCB',//\"connect\"\n  '#5FA730',//\"send\"\n  '#F9D1E2',//\"wait\" \n  '#C44129',//\"receive\" \n  '#cc8e4b',//\"_blocked_queueing\"\n  '#a9de2d'//\"_blocked_queueing\"\n];\nconst timingbackground = [\n  '#EC9332',//\"blocked\"\n  '#8e6e4b',//\"dns\"\n  '#B14D93',//\"ssl\"\n  '#2F7CCB',//\"connect\"\n  '#5FA730',//\"send\"\n  '#F9D1E2',//\"wait\" \n  '#C44129',//\"receive\" \n  '#cc8e4b'//\"_blocked_queueing\"\n];\n{/* <StatusBox color=\"#2F7CCB\">Connect</StatusBox>\n<StatusBox color=\"#5FA730\">Send</StatusBox>\n<StatusBox color=\"#C44129\">Receive</StatusBox>\n<StatusBox color=\"#F9D1E2\">Wait</StatusBox>\n<StatusBox color=\"#B14D93\">SSL</StatusBox>\n<StatusBox color=\"#EC9332\">Blocked</StatusBox> */}\nconst methodbackground = [\n '#4CAF50',//  GET: (green)\n'#2196F3 ',// POST:(blue)\n'#F44336',// DELETE: (red)\n '#FFC107',// PUT: (green)(orange)\n '#9E9E9E'  // options(gray) \n  // '#B14D93',\n  // '#2F7CCB',\n  // '#5FA730',\n  // '#F9D1E2',\n  // '#C44129',\n];\nconst statusbackground = [\n '#9E9E9E' ,//  1xx Informational: (gray)\n' #4CAF50',   //2xx Success: (green)\n '#2196F3',//  3xx Redirection: (blue)\n'#F44336', //   4xx Client Error:  (red)\n'#FFC107',  // 5xx Server Error: (orange)\n];\n\n\n\nfunction SummaryPopCard() {\n  const KpiSummary = useSelector(selectHarKpiData);\n//   const harKpiData = KpiSummary.hasOwnProperty('kpi') && KpiSummary.kpi.allEntries.har_summary ;\n//  const harChartKpi = KpiSummary.hasOwnProperty('kpi') && KpiSummary.kpi.allEntries.har_chart ;\n  const [selectUrl, setSelectUrl] = useState(0);\n  const [getDataList, setDataList] = useState([]);\n  const [harChartKpi, setHarChartKpi] = useState({});\n  const [harKpiData, setHarKpiData] = useState({});\n  //console.log(KpiSummary);\n\n  //const [getTimingPeiData, setTimingPeiData] = useState([]);\nuseEffect(()=>{\n\nif(KpiSummary.hasOwnProperty('kpi')){\n  const allObject = {\n    url : \"All\",\n    ...KpiSummary.kpi.allEntries\n  }\n  const completeList = [allObject , ...KpiSummary.kpi.body]\n  setDataList(completeList)\n}\n},[KpiSummary])\nconst getSelectDataUrl = (data)=>{\n  const harKpiData = data.har_summary ;\n  const harChartKpi = data.har_chart;\n  return { harKpiData, harChartKpi };\n}\n\nuseEffect(()=>{\n  if(getDataList.length > 0){\n    // console.log(getDataList)\n const { harKpiData , harChartKpi} = getSelectDataUrl(getDataList[selectUrl])\n   //console.log({ harKpiData , harChartKpi} )\n     setHarKpiData(harKpiData)\n     setHarChartKpi(harChartKpi)\n  }\n},[selectUrl ,getDataList])\n\n//console.log({harKpiData ,harChartKpi})\n  return (\n    <Flex\n      height=\"470px\"\n      marginBottom=\"5px\"\n      flexDirection=\"column\"\n      paddingBottom=\"20px\"\n    >\n\n<Select\n        fontSize=\"14px\"\n        _focus={{ boxShadow: ' 0 0 0 white' }}\n        onChange={e => setSelectUrl(e.target.value)}\n        value={selectUrl}\n        height=\"25px\"\n        margin=\"0px 15px\"\n        //padding=\"0px 10px\"\n        border=\"1px solid grey\"\n        width=\"220px\"\n        //placeholder=\"All\"\n      >\n        {getDataList.map((item, key) => (\n          <option value={key}>{item.url}</option>\n        ))}\n      </Select>\n\n      {\n      (Object.keys(harKpiData).length !== 0 && \n      Object.keys(harChartKpi).length !== 0 ) &&\n      (\n        <Flex\n          flexDirection=\"column\"\n          overflowY=\"auto\"\n          css={{\n            '&::-webkit-scrollbar': {\n              width: '8px',\n              //height: '30px',\n              border: '5px solid #F3F6F9',\n            },\n            '&::-webkit-scrollbar-track': {\n              boxShadow: 'inset 0 0 6px white',\n            },\n            '&::-webkit-scrollbar-thumb': {\n              backgroundColor: '#C1C1C1',\n              borderRadius: '5px',\n              boreder: '2px solid',\n            },\n          }}\n        >\n         \n          {/* <Flex margin=\"10px 0px\" justifyContent=\"center\">\n            <SummaryPieBox\n              title=\"Timing KPI\"\n              subtitle={\n                <Select\n                  fontSize=\"12px\"\n                  _focus={{ boxShadow: ' 0 0 0 white' }}\n                  onChange={e => setSelectUrl(e.target.value)}\n                  value={selectUrl}\n                  height=\"25px\"\n                  border=\"0px solid\"\n                >\n                  {harKpiData.har_timingKpi.values.map((item, key) => (\n                    <option value={key}>{item.url}</option>\n                  ))}\n                </Select>\n              }\n            >\n              <PieChart\n                sliceBackgroundColor={timingbackground}\n                label={harKpiData.har_timingKpi.labels}\n                pieData={harKpiData.har_timingKpi.values[selectUrl]}\n              ></PieChart>\n            </SummaryPieBox>\n            <SummaryPieBox\n              title=\"Assets\"\n              subtitle={\n                <Select\n                  _focus={{ boxShadow: ' 0 0 0 white' }}\n                  onChange={e => setSelectUrl(e.target.value)}\n                  value={selectUrl}\n                  height=\"25px\"\n                  fontSize=\"12px\"\n                  border=\"0px solid\"\n                >\n                  {harKpiData.har_timingKpi.values.map((item, key) => (\n                    <option value={key}>{item.url}</option>\n                  ))}\n                </Select>\n              }\n            >\n              <PieChart\n                pieData={harKpiData.har_assets.values[selectUrl]}\n                label={harKpiData.har_assets.labels}\n                sliceBackgroundColor={assetbackgroudColor}\n              ></PieChart>\n            </SummaryPieBox>\n            \n          </Flex> */}\n          <Flex margin=\"10px 0px\" justifyContent=\"center\">\n           \n          <PieLayout title=\"Methods\" data={harChartKpi.chart_by_method} backgroundColors={methodbackground}></PieLayout>\n          <PieLayout title=\"Status\" data={harChartKpi.chart_by_status_code} backgroundColors={statusbackground}></PieLayout>\n          </Flex>\n          <Flex margin=\"10px 0px\" justifyContent=\"center\">\n           \n          <PieLayout title=\"Data Upload\" data={harChartKpi.chart_by_request_assets} isInfoMessage = \"The chart below represents data in bytes\" backgroundColors={assetbackgroudColor}></PieLayout>\n          <PieLayout title=\"Data Download\" data={harChartKpi.chart_by_response_assets} isInfoMessage=\"The chart below represents data in bytes\" backgroundColors={assetbackgroudColor}></PieLayout>\n          </Flex>\n          <Flex margin=\"10px 0px\" justifyContent=\"center\">\n           \n          <PieLayout title=\"Average Timing \" data={harChartKpi.chart_by_avg_timing_kpi} isInfoMessage=\"The chart below represents data in ms\" backgroundColors={timingbackground}></PieLayout>\n          \n          </Flex>\n          <DataExchangeCard\n            dataExchange={harKpiData.har_dataexchange}\n          ></DataExchangeCard>\n          <TopAssets title=\"Assets\" data={harKpiData.har_topAssets}></TopAssets>\n          <TopAssets\n            title=\"Requests\"\n            data={harKpiData.har_topRequests}\n          ></TopAssets>\n        </Flex>\n      )}\n    </Flex>\n  );\n}\n\nexport default SummaryPopCard;\n","export default __webpack_public_path__ + \"static/media/Summary.2de8758a.svg\";","export default __webpack_public_path__ + \"static/media/SummaryActive.163a4d37.svg\";","export default __webpack_public_path__ + \"static/media/Issue Summary.badf1491.svg\";","export default __webpack_public_path__ + \"static/media/Issue SummaryActive.0bdffdc2.svg\";","// @ts-nocheck\nimport { Flex, Img, useDisclosure } from '@chakra-ui/react';\nimport PopupComp from 'app/components/PopupComp';\nimport React, { useState } from 'react';\nimport IssueSummaryPopup from './IssueSummaryPopup';\nimport SummaryPopCard from './SummaryPopCard';\nimport Summary from '../../../../styles/Assets/Summary.svg';\nimport SummaryActive from '../../../../styles/Assets/SummaryActive.svg';\nimport Issuesummary from '../../../../styles/Assets/Issue Summary.svg';\nimport IssuesummaryActive from '../../../../styles/Assets/Issue SummaryActive.svg';\nfunction HarSummaryPopup() {\n  // const [activePopup, setActivePopup] = useState(false);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [togglePopup, setTogglePopup] = useState(false);\n\n  function popupHandler() {\n    onOpen();\n  }\n\n  function issueSummaryHandler() {\n    setTogglePopup(false);\n  }\n  function summaryHandler() {\n    setTogglePopup(true);\n  }\n\n  const issueAction = () => {\n    popupHandler();\n    issueSummaryHandler();\n  };\n\n  const summaryAction = () => {\n    popupHandler();\n    summaryHandler();\n  };\n  //console.log('pop root render');\n  //console.log(isOpen);\n\n  return (\n    <Flex>\n      <Flex\n        position=\"absolute\"\n        flexDirection=\"column\"\n        width=\"35px\"\n        boxShadow=\"0px 3px 6px #00000029\"\n        borderRadius=\"2px\"\n        height=\"80px\"\n        zIndex=\"1000\"\n        background=\"white\"\n        right=\"-30px\"\n        top=\"260px\"\n        alignItems=\"center\"\n        justifyContent=\"space-around\"\n      >\n        <Flex\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          height=\"30px\"\n          width=\"30px\"\n          onClick={issueAction}\n        >\n          {!isOpen && (\n            <Img\n              cursor=\"pointer\"\n              src={Issuesummary}\n              backgroundColor=\"transparent\"\n              alt=\"issue\"\n            ></Img>\n          )}\n          {(isOpen && !togglePopup && (\n            <Img\n              cursor=\"pointer\"\n              src={IssuesummaryActive}\n              backgroundColor=\"transparent\"\n              alt=\"issue\"\n            ></Img>\n          )) ||\n            (isOpen && togglePopup && (\n              <Img\n                cursor=\"pointer\"\n                src={Issuesummary}\n                backgroundColor=\"transparent\"\n                alt=\"issue\"\n              ></Img>\n            ))}\n        </Flex>\n        <Flex\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          height=\"30px\"\n          width=\"30px\"\n          onClick={summaryAction}\n        >\n          {!isOpen && (\n            <Img\n              cursor=\"pointer\"\n              src={Summary}\n              backgroundColor=\"transparent\"\n              alt=\"summary\"\n            ></Img>\n          )}\n          {(isOpen && togglePopup && (\n            <Img\n              cursor=\"pointer\"\n              src={SummaryActive}\n              backgroundColor=\"transparent\"\n              alt=\"summary\"\n            ></Img>\n          )) ||\n            (isOpen && !togglePopup && (\n              <Img\n                cursor=\"pointer\"\n                src={Summary}\n                backgroundColor=\"transparent\"\n                alt=\"summary\"\n              ></Img>\n            ))}\n        </Flex>\n      </Flex>\n\n      {/* summay popup */}\n      {togglePopup && (\n        <PopupComp onClose={onClose} title=\"Summary\" activePopup={isOpen}>\n          <SummaryPopCard></SummaryPopCard>\n        </PopupComp>\n      )}\n\n      {/* isuue summary */}\n      {!togglePopup && (\n        <PopupComp activePopup={isOpen} onClose={onClose} title=\"Issue Summary\">\n          <IssueSummaryPopup></IssueSummaryPopup>\n        </PopupComp>\n      )}\n    </Flex>\n  );\n}\n\nexport default HarSummaryPopup;\n","// @ts-nocheck\nimport React from 'react';\nimport { useRef, useEffect, useState } from 'react';\n// import * as am4core from '@amcharts/amcharts4/core';\n// import * as am4charts from '@amcharts/amcharts4/charts';\n// import am4themes_animated from '@amcharts/amcharts4/themes/animated';\n// import am4themes_dataviz from '@amcharts/amcharts4/themes/dataviz';\nimport { Box, Flex } from '@chakra-ui/layout';\n\nimport { Img } from '@chakra-ui/image';\nimport PopupComp from 'app/components/PopupComp';\nimport HarChartStatus from '../Components/HarChartStatus';\nimport SummaryCard from '../Components/SummaryCard';\nimport DataExchangeCard from '../Components/DataExchangeCard';\nimport SummaryPieBox from '../Components/SummaryPieBox';\nimport TopAssets from '../Components/TopAssets';\nimport RadioCheckbox from '../Components/RadioCheckbox';\nimport PieChart from '../Components/PieChart';\nimport {\n  selectHarChartData,\n  selectHarChartDetailsData,\n} from '../slice/selector';\nimport { useSelector } from 'react-redux';\nimport HarChartComp from '../Components/HarChartComp';\nimport IssueSummaryPopup from './IssueSummaryPopup';\nimport SummaryPopCard from './SummaryPopCard';\nimport HarSummaryPopup from './HarSummaryPopup';\n\nfunction HarChart({ harData, HarKpiData }) {\n\n  return (\n    <>\n      {harData.length !== 0 && (\n        <Flex width=\"100%\" position=\"relative\">\n          <HarChartComp id=\"default\" chartData={harData}></HarChartComp>\n        </Flex>\n      )}\n      <HarSummaryPopup></HarSummaryPopup>\n    </>\n  );\n}\n\nexport default HarChart;\n","// @ts-nocheck\nimport { Flex, Text } from '@chakra-ui/react';\nimport ChartLayout from 'app/components/ChartLayout';\nimport NoContent from 'app/components/NoContent';\nimport SliderAxis from 'app/pages/AppProfiling/components/SliderAxis';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport HarChartStatus from '../Components/HarChartStatus';\nimport RadioButton from '../Components/RadioButton';\nimport SliderAxisHar from '../Components/SliderAxisHar';\nimport {\n  selectHarChartData,\n  selectHarChartDetail,\n  selectHarChartDetailData,\n  selectHarChartDetailsData,\n} from '../slice/selector';\nimport HarChart from './HarChart';\nimport Statistics from './Statistics';\n\nconst getAssetTypeArray = dataArray => {\n  //console.log({dataArray});\n  //const element = dataArray\n  if(dataArray.length === 0) {\n    return []\n  }\n  const assetType = [\n    ...new Set(\n      dataArray.map(item =>\n        item.AssetType\n      ),\n    ),\n  ];\n//console.log({assetType})\n  return assetType.filter(str => str && str.trim().length > 0);\n};\n\nfunction HarFilter({ startTimeIST, endTimeIST, duration }) {\n  const [selectAssetType, setSelectAsset] = useState([]);\n  const [radioFilter, setRadioFilter] = useState('');\n  const [radioFilterInputWaitTime, setRadioFilterInputWaitTime] = useState(200);\n  const [radioFilterInputBlockedTime, setRadioFilterInputBlockedTime] =\n    useState(200);\n  const [radioFilterInputUrl, setRadioFilterInputUrl] = useState('');\n  const [radioFilterSelectAsset, setRadioFilterSelectAsset] = useState('');\n  const harEntiesData = useSelector(selectHarChartData);\n  const [filterData, setFilterData] = useState(harEntiesData);\n  const HarDetailData = useSelector(selectHarChartDetailData);\n  useEffect(() => {\n    ApplyFilterHandler();\n    // console.log(HarDetailData)\n\n    setSelectAsset(getAssetTypeArray(harEntiesData));\n  }, [harEntiesData, HarDetailData]);\n  // console.log(selectAssetType)\n  useEffect(() => {\n    if (radioFilter === '') {\n      ApplyFilterHandler();\n    }\n  }, [radioFilter]);\n\n  const ApplyFilterHandler = () => {\n    if (radioFilter === '') {\n      setFilterData(harEntiesData);\n      //        console.log(harEntiesData)\n    } else if (radioFilter === 'httpError') {\n      const data = harEntiesData.filter(item => item.status > 399);\n      setFilterData(data);\n      //         console.log(data)\n    } else if (radioFilter === 'waitTime') {\n      const data = harEntiesData.filter(\n        item => item.wait > radioFilterInputWaitTime,\n      );\n      setFilterData(data);\n      //  console.log(data)\n    } else if (radioFilter === 'blockTime') {\n      const data = harEntiesData.filter(\n        item => item.blocked > radioFilterInputBlockedTime,\n      );\n      setFilterData(data);\n      //  console.log(data)\n    } else if (radioFilter === 'url') {\n      const data = harEntiesData.filter(item => {\n        if (radioFilterInputUrl === '') {\n          return item;\n        } else {\n          return item.category.toLowerCase().includes(radioFilterInputUrl);\n        }\n      });\n      setFilterData(data);\n      //  console.log(data)\n    } else if (radioFilter === 'assetType' ) {\n      const data = harEntiesData.filter(item =>\n        //item.AssetType.includes(radioFilterSelectAsset),\n         item.AssetType === radioFilterSelectAsset\n        );\n      setFilterData(data);\n    }\n    //console.log('apply running');\n   \n  };\n //console.log(filterData);\n  const radioResetHandler = () => {\n    setRadioFilter('');\n    setRadioFilterInputWaitTime(200);\n    setRadioFilterInputBlockedTime(200);\n    setRadioFilterInputUrl('');\n    setRadioFilterSelectAsset('');\n\n    ApplyFilterHandler();\n  };\n  //  setTimeout(ApplyFilterHandler, 2000)\n\n  //console.log({filterData});\n  return (\n    <ChartLayout height=\"608px\" leftalign=\"206px\">\n      {/*\n\n<TestCasesChart></TestCasesChart> */}\n      <Flex\n        //  zIndex=\"0\"\n        fontFamily=\"Montserrat\"\n        justifySelf=\"center\"\n        height=\"70px\"\n        // backgroundColor=\"transparent\"\n        backgroundColor=\"transparent\"\n        color=\"black\"\n        border=\"1px solid #00000029\"\n        borderRadius=\"5px 5px\"\n        //  boxShadow=\"0px  3px 6px #00000029 inset\"\n      >\n       \n        <RadioButton\n          radioFilter={radioFilter}\n          ApplyFilterHandler={ApplyFilterHandler}\n          radioFilterInputWaitTime={radioFilterInputWaitTime}\n          setRadioFilterInputWaitTime={setRadioFilterInputWaitTime}\n          radioFilterInputBlockedTime={radioFilterInputBlockedTime}\n          setRadioFilterInputBlockedTime={setRadioFilterInputBlockedTime}\n          radioFilterInputUrl={radioFilterInputUrl}\n          setRadioFilterInputUrl={setRadioFilterInputUrl}\n          radioFilterSelectAsset={radioFilterSelectAsset}\n          setRadioFilterSelectAsset={setRadioFilterSelectAsset}\n          radioResetHandler={radioResetHandler}\n          setRadioFilter={setRadioFilter}\n          selectAssetType={selectAssetType}\n        ></RadioButton>\n      </Flex>\n      <SliderAxisHar\n        isLeft={true}\n        startTime={startTimeIST}\n        endTime={endTimeIST}\n        duration={duration}\n      ></SliderAxisHar>\n      <Flex\n        height=\"100%\"\n        //position=\"relative\"\n        //   boxShadow=\"0px 3px 6px #00000029 inset\"\n        border=\"1px solid #00000029\"\n        backgroundColor=\"transparent\"\n        //height=\"500px\"\n        borderRadius=\"5px\"\n        overflowX=\"hidden\"\n        overflowY=\"auto\"\n        css={{\n          '&::-webkit-scrollbar': {\n            width: '8px',\n            //height: '30px',\n            border: '5px solid #F3F6F9',\n          },\n          '&::-webkit-scrollbar-track': {\n            boxShadow: 'inset 0 0 6px white',\n          },\n          '&::-webkit-scrollbar-thumb': {\n            backgroundColor: '#C1C1C1',\n            borderRadius: '5px',\n            boreder: '2px solid',\n          },\n        }}\n      >\n        {HarDetailData.onContentLoad - HarDetailData.onLoadTime > 0 ? (\n          <NoContent message=\"No Content Available\"></NoContent>\n        ) : (\n          <HarChart harData={filterData}></HarChart>\n        )}\n      </Flex>\n      <HarChartStatus NoofRequest={filterData.length}></HarChartStatus>\n    </ChartLayout>\n  );\n}\n\nexport default HarFilter;\n","import { Flex } from '@chakra-ui/layout'\nimport ChartLayout from 'app/components/ChartLayout'\nimport React from 'react'\nimport HarChartComp from '../HarChartComp'\nimport HarChartStatus from '../HarChartStatus'\n\nfunction GroupChartLayout({chartData , id}) {\n   // console.log(chartData)\n  return (\n    \n     <ChartLayout height=\"250px\" leftalign=\"206px\">\n         <Flex\n        height=\"100%\"\n        position=\"relative\"\n        //   boxShadow=\"0px 3px 6px #00000029 inset\"\n        border=\"1px solid #00000029\"\n        backgroundColor=\"transparent\"\n        //height=\"500px\"\n        borderRadius=\"5px\"\n        overflowX=\"hidden\"\n        overflowY=\"auto\"\n        css={{\n          '&::-webkit-scrollbar': {\n            width: '8px',\n            //height: '30px',\n            border: '5px solid #F3F6F9',\n          },\n          '&::-webkit-scrollbar-track': {\n            boxShadow: 'inset 0 0 6px white',\n          },\n          '&::-webkit-scrollbar-thumb': {\n            backgroundColor: '#C1C1C1',\n            borderRadius: '5px',\n            boreder: '2px solid',\n          },\n        }}\n      > \n        <HarChartComp id={id} chartData={chartData} ></HarChartComp>\n      </Flex>\n      <HarChartStatus NoofRequest={chartData.length}></HarChartStatus>\n     </ChartLayout>\n    \n  )\n}\n\nexport default GroupChartLayout","import { Flex, Text } from '@chakra-ui/react'\nimport AccordionComponent from 'app/components/AccordionComponent'\nimport React from 'react'\nimport GroupChartLayout from '../GroupChartLayout'\n\nfunction GroupComponent({group , id}) {\n    //console.log(group)\n  return (\n    <>\n    <AccordionComponent isUrl={true} title={group.url} \n    // rightItem={\n    //   <Flex fontSize='14px'>\n    //   <Text>Filter By Path</Text>\n    //   </Flex>\n    // } \n    >\n      \n          <GroupChartLayout id={id} chartData = {group.entries} ></GroupChartLayout>\n    </AccordionComponent>\n    </>\n  )\n}\n\nexport default GroupComponent","//@ts-nocheck\nimport { Flex, Text } from '@chakra-ui/layout';\nimport React from 'react'\nimport { useSelector } from 'react-redux';\nimport GroupComponent from '../../Components/GroupComponent';\nimport HarChartComp from '../../Components/HarChartComp'\nimport PagesComponent from '../../Components/PagesComponent';\nimport { selectHarAnalysis } from '../../slice/selector';\n\n\n\n\nfunction GroupByChart() {\n    const {HarGroupByData ,HarEntiesData } = useSelector(selectHarAnalysis);\n    //console.log(HarGroupByData)\n  return (\n     <Flex flexDirection='column' borderRadius='5px'    border=\"1px solid #00000029\">\n      <Text padding=\"5px 10px\" >Group By Domain</Text>\n   { HarGroupByData.length > 0 &&  (HarGroupByData.map( (page, index )=> <GroupComponent group={page} key={index} id={index} ></GroupComponent>) )}\n\n    </Flex>\n  )\n}\n\n\n\n\nexport default GroupByChart","// @ts-nocheck\nimport { Flex } from '@chakra-ui/react';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport NoContent from 'app/components/NoContent';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHarChartSlice } from '../slice';\nimport { selectHarChart, selectHarChartData, selectHarKpiData, selectHarLoading } from '../slice/selector';\nimport HarFilter from './HarFilter';\nimport AWS from 'aws-sdk';\nimport { useParams } from 'react-router-dom';\nimport GroupByChart from './GroupByChart';\nimport { useDownloadLogSlice } from 'app/pages/DownLoadLog/slice';\nimport { selectDownloadFileUrl, selectgetFileUrl } from 'app/pages/DownLoadLog/slice/selectors';\n\nconst getAssetTypeArray = dataArray => {\n // const assetArray = [...new Set(dataArray.map(item => item.AssetType))];\n  //console.log(assetArray);\n};\n\n\nfunction HarFileParse({ harUrl, startTimeIST, endTimeIST, duration }) {\n  const harEntiesData = useSelector(selectHarChartData);\n  const fileUrlData = useSelector(selectgetFileUrl);\n  const isLoadingHar = useSelector(selectHarLoading);\n  const dispatch = useDispatch();\n  const { actions } = useDownloadLogSlice();\n  const { testId } = useParams();\n  const harhttpResponse = useSelector(selectHarKpiData)\nconst { harActions } = useHarChartSlice()\nconst {loading }= useSelector(selectHarChart)\n  const assetTypeArray = getAssetTypeArray(harEntiesData);\n\n  useEffect(() => {\n    if(Object(harhttpResponse).key !== 0 && harhttpResponse.hasOwnProperty('kpi') &&  !harhttpResponse.kpi.hasOwnProperty('ErrorLog')){\n      dispatch(actions.loadDownloadFileUrl({ testId: testId, type: 'output' , forUse : 'getData', filename : \"har_chart.json\"}));\n  }\n \n  }, []);\n  useEffect(()=>{\n   if(fileUrlData.hasOwnProperty('url')){\n   dispatch(harActions.loadHarChart(fileUrlData.url))\n   }\n\n  },[fileUrlData])\nconsole.log({harEntiesData})\n\n  return (\n    <Flex flexDirection=\"column\" width=\"100%\">\n      {isLoadingHar || loading ? (\n        <LoadingComponent></LoadingComponent>\n      ) : (\n        <>\n          { harEntiesData.length > 0 ? (\n            <>\n            <HarFilter\n              startTimeIST={startTimeIST}\n                endTimeIST={endTimeIST}\n                duration={duration}\n            ></HarFilter>\n            <GroupByChart></GroupByChart>\n            </>\n          ) : (\n            <NoContent message=\"No Content Available\"></NoContent>\n          )}\n        </>\n      )}\n    </Flex>\n  );\n}\n\nexport default HarFileParse;\n","// @ts-nocheck\n\nimport React, { useEffect, useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport MobileDisplay from '../DisplayScreen/components/MobileDisplay';\nimport {\n  selectLoading,\n  selectTestSessionData,\n} from '../TestSession/slice/selectors';\nimport loadingimage from '../../../styles/Assets/load-loading.gif';\nimport HarFilter from './Features/HarFilter';\nimport { useHarChartSlice } from './slice';\nimport {\n  selectHarChartData,\n  selectHarKpiData,\n  selectHarKpiDataError,\n  selectHarLoading,\n  selectHarUrl,\n  selectKpiHarLoading,\n} from './slice/selector';\nimport { Flex, Img, Text } from '@chakra-ui/react';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport HarFileParse from './Features/HarFileParse';\nimport NoContent from 'app/components/NoContent';\nimport { useParams } from 'react-router-dom';\nimport SliderAxis from '../AppProfiling/components/SliderAxis';\nimport Statistics from './Features/Statistics';\nimport { useDownloadLogSlice } from '../DownLoadLog/slice';\n\n// var url = 'https://s3.ap-south-1.amazonaws.com/final.device-resource.bucket-all/953/client.har';\n\nfunction HarAnalysis() {\n  // var AWS = require('aws-sdk');\n  const { harActions } = useHarChartSlice();\n  const [harFlag, setHarFlag] = useState(false);\n  const [getHarRefresh, setHarRefresh] = useState(0);\n\n  const dispatch = useDispatch();\n  const { testId } = useParams();\n  //const harUrl =\n  //\"https://s3.ap-south-1.amazonaws.com/final.hotstar.device.resource.har/har/500046/har.har\" ;\n  //\"https://s3.ap-south-1.amazonaws.com/final.device-resource.bucket-all/hotstar-downloads/HotstarWebTest1.har\";\n  // useSelector(selectHarUrl);\n  const loadingHarUrl = useSelector(selectKpiHarLoading);\n  const testSessionData = useSelector(selectTestSessionData);\n  const harKpiError = useSelector(selectHarKpiDataError);\n  const harhttpResponse = useSelector(selectHarKpiData);\n  const { actions } = useDownloadLogSlice();\n  // console.log(testSessionData.testConfiguration)\n  const [getUrl, setUrl] = useState();\n\n  //console.log({harhttpResponse});\n  // let harUrl;\n  //   Object.keys(testSessionData).length !== 0 &&\n  //   testSessionData.testConfiguration.captureHar &&\n  //   testSessionData.testOutputArtifacts.testExecutionHARURL;\n\n  // useEffect(() => {\n  //   if (\n  //     testSessionData.hasOwnProperty('testConfiguration') ||\n  //     testSessionData.testConfiguration\n  //   ) {\n  //     setHarFlag(testSessionData.testConfiguration.captureHAR);\n  //   }\n  // }, [testSessionData]);\n\n  useEffect(() => {\n    dispatch(harActions.loadHarHttpKpi(testId));\n    return () => {\n      dispatch(harActions.HarHttpKpiDataLoaded({}));\n      dispatch(harActions.resetChartData());\n      dispatch(actions.getFileUrlLoaded({}));\n    };\n  }, [testId, getHarRefresh]);\n  const startTimeIST =\n    Object.keys(testSessionData).length !== 0 && testSessionData.testStartTime;\n  const endTimeIST =\n    Object.keys(testSessionData).length !== 0 && testSessionData.testEndTime;\n\n  const duration =\n    new Date(endTimeIST.valueOf()) - new Date(startTimeIST).valueOf();\n\n  console.log({ harKpiError });\n  return (\n    <Flex\n      position=\"relative\"\n      minHeight=\"105vh\"\n      flexDirection=\"column\"\n      fontFamily=\"Montserrat\"\n      fontWeight=\"500\"\n      width=\"100%\"\n      // bg=\"white\"\n    >\n      <>\n        {harFlag || true ? (\n          <>\n            {loadingHarUrl ? (\n              <LoadingComponent></LoadingComponent>\n            ) : (\n              <>\n                {harKpiError ? (\n                  <NoContent\n                    message={harKpiError}\n                    // setAgainHandler={setHarRefresh}\n                    // getRefresh={getHarRefresh}\n                  ></NoContent>\n                ) : (\n                  <>\n                    {Object(harhttpResponse).key !== 0 &&\n                    harhttpResponse.hasOwnProperty('kpi') ? (\n                      <>\n                        <HarFileParse\n                          startTimeIST={startTimeIST}\n                          endTimeIST={endTimeIST}\n                          duration={duration}\n                          //harUrl={harUrl}\n                        ></HarFileParse>\n                      </>\n                    ) : (\n                      <NoContent message=\"No Har Selected\"></NoContent>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n          </>\n        ) : (\n          <NoContent message=\"No Har Selected\"></NoContent>\n        )}\n      </>\n      {/* <Statistics></Statistics> */}\n    </Flex>\n  );\n}\n\nexport default HarAnalysis;\n","import { Flex, Tab, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nfunction CustomIconButton({ children }) {\n  return (\n    <Flex\n      fontFamily=\"Montserrat\"\n      borderRadius=\"5px\"\n      fontSize=\"14px\"\n      //fontWeight=\"500\"\n      align=\"center\"\n      justifyContent=\"center\"\n      display=\"flex\"\n      marginLeft=\"5px\"\n      //padding=\"5px\"\n      //border=\"1px solid #C8C8C8\"\n      data-button-id={`${children}-tab-button`}\n      bg=\"white\"\n      //color=\"grey13\"\n      // _focus={{ boxShadow: ' 0 0 0 white' }}\n      w=\"40px\"\n      h=\"40px\"\n      border=\"1px solid white\"\n      boxShadow=\" 0px 0px 6px #008FE0\"\n      color=\"#008FE0\"\n      background=\"#F3F6F9\"\n      fontWeight=\"500\"\n    >\n      {/* <Text marginLeft=\"5px\" textTransform=\"capitalize\"> */}\n      {children}\n      {/* </Text> */}\n    </Flex>\n  );\n}\n\nexport default CustomIconButton;\n","// @ts-nocheck\nimport { ChevronRightIcon } from '@chakra-ui/icons';\nimport {\n  Container,\n  Flex,\n  Text,\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbSeparator,\n  Stack,\n  HStack,\n  Spacer,\n  Icon,\n  Textarea,\n} from '@chakra-ui/react';\nimport ButtonComp from 'app/components/ButtonComp';\n\nimport SelectOption from 'app/pages/DebugReportGenerate/components/SelectOption';\nimport { getEmailId } from 'Authentication/configuration/GetEmail';\nimport React from 'react';\nimport { BiMobile } from 'react-icons/bi';\nimport { FiMonitor } from 'react-icons/fi';\nimport { ImFileZip } from 'react-icons/im';\nimport { RiDeviceLine } from 'react-icons/ri';\nimport { Link } from 'react-router-dom';\n\nimport PopoverComponent from '../../../components/PopoverComponent';\nimport CustomIconButton from './CustomIconButton';\nimport ROUTES from 'app/constants/Routes';\nconst tabroute = ['Test Summary', 'Test Session ID -148'];\n\nfunction SubheaderSessionId({\n  getUserEmail,\n  status,\n  abortTestHandler,\n  tabType,\n  testId,\n}) {\n  const email = getEmailId();\n  const testanalyticsHandler = () => {};\n\n  return (\n    <>\n      <Flex\n        fontFamily=\"Montserrat\"\n        fontWeight=\"500\"\n        backgroundColor=\"white1\"\n        justifyContent=\"space-between\"\n        width=\"100%\"\n        alignItems=\"center\"\n        paddingLeft=\"20px\"\n        color=\"grey13\"\n        height=\"60px\"\n      >\n        <Flex fontSize=\"16px\" fontWeight=\"500\" fontFamily=\"Montserrat\">\n          <Breadcrumb\n            textDecoration=\"none\"\n            color=\"black2\"\n            separator={<ChevronRightIcon color=\"black2\" />}\n          >\n            (\n            <BreadcrumbItem>\n              <BreadcrumbLink\n                as={Link}\n                color=\"blue1\"\n                fontWeight=\"600\"\n                to={\n                  tabType === 'lr-interact' || tabType === 'lr-automation'\n                    ? `${ROUTES.LR_SESSION_SUMMARY}`\n                    : `${ROUTES.MOBILE_SESSION_SUMMARY}`\n                }\n                _focus={{ boxShadow: ' 0 0 0 white' }}\n                _hover={{ textDecoration: 'none', color: 'blue1' }}\n              >\n                Session Summary\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <BreadcrumbLink\n                as={Link}\n                _focus={{ boxShadow: ' 0 0 0 white' }}\n                _hover={{ textDecoration: 'none', color: 'blue1' }}\n              >\n                Session Analysis\n                {/* ID - {sessionId} */}\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n          </Breadcrumb>\n        </Flex>\n        <>\n          {tabType === 'app-automation' && (\n            <CustomIconButton>\n              <Icon\n                w=\"30px\"\n                title=\"Automation\"\n                color=\"grey1\"\n                h=\"30px\"\n                as={BiMobile}\n              ></Icon>\n            </CustomIconButton>\n          )}\n          {tabType === 'lr-automation' && (\n            <CustomIconButton>\n              <Icon\n                w=\"30px\"\n                title=\"Automation\"\n                color=\"grey1\"\n                h=\"30px\"\n                as={BiMobile}\n              ></Icon>\n            </CustomIconButton>\n          )}\n          {(tabType === 'lr-interact' || tabType === 'mobile-interact') && (\n            <CustomIconButton>\n              <Icon\n                w=\"30px\"\n                title=\"Interact\"\n                color=\"grey1\"\n                h=\"30px\"\n                as={RiDeviceLine}\n              ></Icon>\n            </CustomIconButton>\n          )}\n        </>\n        {Object.keys(status).length !== 0 && (\n          <Flex\n            height=\"50px\"\n            alignItems=\"center\"\n            flexDirection=\"row\"\n            justifyContent=\"center\"\n            padding=\"10px 0px\"\n            marginRight=\"5\"\n            boxSizing=\"border-box\"\n          >\n            {status.testStatus === 'Started' &&\n              (tabType === 'lr-automation' || tabType === 'app-automation' ? (\n                <ButtonComp padding=\"6px 12px\" buttonHandler={abortTestHandler}>\n                  abort\n                </ButtonComp>\n              ) : (\n                <></>\n              ))}\n\n            {tabType !== 'lr-interact' && (\n              <Flex\n                fontWeight=\"500\"\n                marginLeft=\"10px\"\n                alignItems=\"center\"\n                flexDirection=\"column\"\n                justifyContent=\"center\"\n                padding=\"5px\"\n              >\n                <Text\n                  as=\"span\"\n                  fontWeight=\"600\"\n                  fontSize=\"16px\"\n                  paddingRight=\"5px\"\n                  data-status-id=\"pass-status-number\"\n                >\n                  {status.testCaseSummary.passed || 0}\n                </Text>\n                <Text color=\"green2\" fontSize=\"13px\">\n                  Passed{' '}\n                </Text>\n              </Flex>\n            )}\n            {tabType !== 'lr-interact' && (\n              <Flex\n                marginLeft=\"10px\"\n                alignItems=\"center\"\n                flexDirection=\"column\"\n                justifyContent=\"center\"\n                padding=\"5px\"\n              >\n                <Text\n                  as=\"span\"\n                  fontSize=\"16px\"\n                  fontWeight=\"600\"\n                  paddingRight=\"5px\"\n                  data-status-id=\"fail-status-number\"\n                >\n                  {status.testCaseSummary.failed || 0}\n                </Text>\n                <Text color=\"red2\" fontSize=\"13px\">\n                  Failed\n                </Text>\n              </Flex>\n            )}\n            <Flex\n              marginLeft=\"10px\"\n              alignItems=\"center\"\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              padding=\"5px\"\n            >\n              <Text as=\"b\" paddingRight=\"5px\"></Text>\n              <Text\n                fontSize=\"16px\"\n                textTransform=\"uppercase\"\n                color=\"green2\"\n                fontWeight=\"600\"\n                data-status-id=\"test-status-type\"\n              >\n                {status.testStatus}\n              </Text>\n            </Flex>\n          </Flex>\n        )}\n      </Flex>\n    </>\n  );\n}\n\nexport default SubheaderSessionId;\n","import { lazyLoad } from 'utils/loadable';\n\nexport const DisplayScreen = lazyLoad(\n  () => import('./index'),\n  module => module.DisplayScreen,\n);\n","import { Flex } from '@chakra-ui/react';\nimport DisplayScreen from 'app/pages/DisplayScreen';\nimport NoContainDisplay from 'app/pages/DisplayScreen/components/NoContainDisplay';\nimport ScreenShotDisplay from 'app/pages/DisplayScreen/components/ScreenShotDisplay';\nimport { selectDownloadScreenshotsData } from 'app/pages/DownLoadLog/slice/selectors';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nfunction ScreentshotsViewer({tabType}) {\n  const displaySceenData = useSelector(selectDownloadScreenshotsData);\n  return (\n    <Flex\n      marginTop=\"20px\"\n      justifyContent=\"flex-start\"\n      alignItems=\"center\"\n      flexDirection=\"column\"\n    >\n      {displaySceenData.length > 0 ? (\n        <DisplayScreen tabType= {tabType === 'mobile-interact' ?  'mobile-interact' :  \"lr-interact\" } orientation={tabType === 'mobile-interact' ?  'portrait' :  \"landscape\" }   deviceType={tabType === 'mobile-interact' ?  'mobile' :  \"tv\" }    ></DisplayScreen>\n      ) : (\n        <Flex flexDirection=\"column\" margin=\"0px 20px\" width=\"600px\">\n          <NoContainDisplay tabType={tabType === 'mobile-interact' ?  'mobile-interact' :  \"lr-interact\" }  ></NoContainDisplay>\n        </Flex>\n      )}\n    </Flex>\n  );\n}\n\nexport default ScreentshotsViewer;\n","// @ts-nocheck\nimport React from 'react';\nimport {\n  Tabs,\n  Tab,\n  TabList,\n  TabPanels,\n  TabPanel,\n  Flex,\n} from '@chakra-ui/react';\nimport SubHeaderComp from 'app/components/SubHeaderComp';\nimport SubContainer from 'app/components/SubContainer';\nimport MobileDisplay from './MobileDisplay';\nimport { DisplayScreen } from 'app/pages/DisplayScreen/Loadable';\nimport ScreentShotViewer from './ScreentshotsViewer';\nimport ResizablePanel from './ResizablePanel';\n\nfunction SubTabsComponent({\n  listofTabs,\n  listofComponents,\n  defaultIndex,\n  isSubContainer,\n  rightContent,\n  isBorder,\n  tabType,\n  deviceType,\n  orientation,\n  orientationView\n}) {\n  return (\n    <Tabs isLazy={false} defaultIndex={defaultIndex} orientation={orientation}>\n      <SubHeaderComp>\n        <TabList\n          borderBottomWidth={isBorder ? '3px' : '0px'}\n          // borderBottomWidth= \"3px\"\n          borderTop={isBorder ? '2px solid #EDEDED' : '0px'}\n          borderColor=\"grey3\"\n          width=\"100%\"\n          fontFamily=\"Montserrat\"\n          fontSize=\"14px\"\n          fontWeight=\"500\"\n          color=\"grey15\"\n        >\n          {listofTabs &&\n            listofTabs.map((tab, index) => (\n              <Tab\n                key={index}\n                paddingLeft=\"0px\"\n                paddingRight=\"0px\"\n                marginLeft=\"3px\"\n                fontWeight=\"500\"\n                fontSize=\"14px\"\n                marginRight=\"3px\"\n                data-sub-tab-id={`tab-button-${tab}`}\n                borderBottom=\"3px solid transparent\"\n                _focus={{ boxShadow: ' 0 0 0 white' }}\n                _selected={{\n                  color: 'black',\n                  fontWeight: '600',\n                  borderBottomColor: 'red',\n                }}\n              >\n                {tab}\n              </Tab>\n            ))}\n        </TabList>\n        {rightContent}\n      </SubHeaderComp>\n      <Flex bg=\"white\" position=\"relative\" minHeight='105vh' >\n        {(tabType !== 'lr-interact' || tabType !== 'mobile-interact'  ) ? (\n          <DisplayScreen\n            orientation={orientationView}\n            tabType={tabType}\n            deviceType={deviceType}\n          ></DisplayScreen>\n        ) : (\n          <ScreentShotViewer tabType={tabType} ></ScreentShotViewer>\n        )}\n\n        <TabPanels \n       // minHeight=\"105vh\" \n        display=\"flex\"\n         //bg=\"white\"\n          >\n          {listofComponents &&\n            listofComponents.map((tabcomp, index) => (\n              <TabPanel\n                key={index}\n                display=\"flex\"\n                padding=\"0\"\n                margin=\"0\"\n                width=\"100%\"\n              >\n                {isSubContainer && <SubContainer>{tabcomp}</SubContainer>}\n                {!isSubContainer && tabcomp}\n              </TabPanel>\n            ))}\n        </TabPanels>\n        {/* </ResizablePanel> */}\n      </Flex>\n    </Tabs>\n  );\n}\n\nexport default SubTabsComponent;\n","import { lazyLoad } from 'utils/loadable';\n\nexport const DownloadLog = lazyLoad(\n  () => import('./index'),\n  module => module.DownloadLog,\n);\n","import { lazyLoad } from 'utils/loadable';\n\nexport const AppProfiling = lazyLoad(\n  () => import('./index'),\n  module => module.AppProfiling,\n);\n","// @ts-nocheck\nimport { AspectRatio, Flex } from '@chakra-ui/react';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport NoContent from 'app/components/NoContent';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  selectLoading,\n  selectTestSessionData,\n} from '../TestSession/slice/selectors';\n\nexport function LiveLog() {\n  const testSessionData = useSelector(selectTestSessionData);\n  //console.log(testSessionData);\n  const isLoading = useSelector(selectLoading);\n\n  let getlivelogUrl = testSessionData.hasOwnProperty('extra')\n    ? testSessionData.extra.liveLog\n    : undefined;\n  const getliveLogFlag =\n    testSessionData.hasOwnProperty('testConfiguration') &&\n    testSessionData.testConfiguration.hasOwnProperty('captureLiveLogs') &&\n    testSessionData.testConfiguration.captureLiveLogs;\n  //console.log('livelog url', getliveLogFlag);\n  return (\n    <Flex\n      marginTop=\"10px\"\n      fontFamily=\"Montserrat\"\n      fontWeight=\"500\"\n      fontSize=\"14px\"\n      flexDirection=\"column\"\n      background=\"white1\"\n      width=\"100%\"\n      padding=\"20px 10px\"\n      color=\"grey15\"\n      boxShadow=\"2px 8px 6px #00000029\"\n    >\n      {isLoading ? (\n        <LoadingComponent></LoadingComponent>\n      ) : (\n        <>\n          {getliveLogFlag ? (\n            <Flex\n              flexDirection=\"column\"\n              //height=\"550px\"\n              width=\"100%\"\n              borderRadius=\"5px\"\n            >\n              <Flex\n                overflowY=\"scroll\"\n                css={{\n                  '&::-webkit-scrollbar': {\n                    width: '8px',\n                    //height: '30px',\n                    border: '5px solid #F3F6F9',\n                  },\n                  '&::-webkit-scrollbar-track': {\n                    boxShadow: 'inset 0 0 6px white',\n                  },\n                  '&::-webkit-scrollbar-thumb': {\n                    backgroundColor: '#C1C1C1',\n                    borderRadius: '5px',\n                    boreder: '2px solid',\n                  },\n                }}\n                flexDirection=\"column\"\n              >\n                <iframe\n                  title=\"livelog\"\n                  src={getlivelogUrl}\n                  allowFullScreen\n                  width=\"100%\"\n                  height=\"540px\"\n                ></iframe>\n              </Flex>\n            </Flex>\n          ) : (\n            <NoContent message=\"No LIVE LOG Selected\"> </NoContent>\n          )}\n        </>\n      )}\n    </Flex>\n  );\n}\n\nexport default LiveLog;\n","//@ts-nocheck\nimport { Flex, Text } from '@chakra-ui/react';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport SummaryTableComp from 'app/components/SummaryTableComp';\n\nimport TestCaseExperience from '../TestCaseExperience';\nimport TestCasesTable from '../TestCases/components/TestCasesTable';\n\nexport function Testcasenetweb() {\n  const TestCaseSummaryTableHeading = ['URL', 'Payload', 'DNS', 'LightHouse'];\n\n  const testCaseData = [\n    {\n      url: 'test1',\n\n      payload: 'kp1',\n\n      dns: 'val1',\n\n      lighthouse: 'lighthouse1',\n    },\n\n    {\n      url: 'test1',\n\n      payload: 'kp1',\n\n      dns: 'val1',\n\n      lighthouse: 'lighthouse1',\n    },\n    {\n      url: 'test1',\n\n      payload: 'kp1',\n\n      dns: 'val1',\n\n      lighthouse: 'lighthouse1',\n    },\n    {\n      url: 'test1',\n\n      payload: 'kp1',\n\n      dns: 'val1',\n\n      lighthouse: 'lighthouse1',\n    },\n  ];\n\n  const data = ['Url', 'Status'];\n\n  const dataValue = [\n    {\n      data: 'https://hotmail.com',\n      time: 'PASSED',\n    },\n    {\n      data: 'https://yahoo.com',\n      time: 'FAILED',\n    },\n    {\n      data: 'https://google.com',\n      time: 'PASSED',\n    },\n    { data: 'https://amazon.com', time: 'PASSED' },\n  ];\n\n  const value = [];\n  const pagevalue = [{}];\n\n  return (\n    <>\n      <Flex\n        fontFamily=\"Montserrat\"\n        flexDirection=\"row\"\n        width=\"100%\"\n        color=\"grey13\"\n      >\n        <Flex\n          flexDirection=\"column\"\n          padding=\"1px 5px 15px 5px\"\n          flex={1}\n          height=\"535px\"\n          overflowY=\"auto\"\n          css={{\n            '&::-webkit-scrollbar': {\n              width: '8px',\n              //height: '30px',\n              border: '5px solid #F3F6F9',\n            },\n            '&::-webkit-scrollbar-track': {\n              boxShadow: 'inset 0 0 6px white',\n            },\n            '&::-webkit-scrollbar-thumb': {\n              backgroundColor: '#C1C1C1',\n              borderRadius: '5px',\n              boreder: '2px solid',\n            },\n          }}\n        >\n          {/* <SummaryTableComp \n            tableHeader={TestCaseSummaryTableHeading}\n            \n            summaryTableData={testCaseData}\n         \n\n           title=\"Experience KPIs\"\n\n            ></SummaryTableComp>\n    */}\n\n          <TestCasesTable\n            title=\"Experience KPI\"\n            tableHeader={TestCaseSummaryTableHeading}\n            TestCaseSummaryTableData={testCaseData}\n            error={null}\n          ></TestCasesTable>\n\n          <TestCasesTable\n            title=\"Payload\"\n            tableHeader={data}\n            TestCaseSummaryTableData={dataValue}\n            error={null}\n          ></TestCasesTable>\n\n          <TestCasesTable\n            title=\"Dns\"\n            // tableHeader={value  }\n            // TestCaseSummaryTableData={pagevalue}\n            // error={null}\n          ></TestCasesTable>\n\n          <TestCasesTable title=\"Lighthouse\"></TestCasesTable>\n\n          {/* <TestCasesTable\n   title=\"Payload\"\n  \n   tableHeader={TestCaseSummaryTableHeading}\n   TestCaseSummaryTableData={TestCaseSummaryTableHeading}\n\n   >\n\n   </TestCasesTable> */}\n\n          {/* <TestCasesTable\n   title=\"DNS\"\n  \n   tableHeader={TestCaseSummaryTableHeading}\n   TestCaseSummaryTableData={Data}\n\n   >\n\n   </TestCasesTable>\n        \n   <TestCasesTable\n   title=\"LightHouse\"\n  \n   tableHeader={TestCaseSummaryTableHeading}\n   TestCaseSummaryTableData={Data}\n\n   >\n\n   </TestCasesTable> */}\n        </Flex>\n      </Flex>\n    </>\n  );\n}\n\nexport default Testcasenetweb;\n","// @ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectTestSessionData,\n  selectLoading,\n  selectError,\n  selectAbortTestResponse,\n  selectAbortTestError,\n  selectLoadingAbort,\n} from './slice/selectors';\nimport { TestSessionErrorType } from './slice/types';\nimport { useTestSessionSlice } from './slice';\nimport DisplayTable from './Features/DisplayTable';\nimport SubContainer from 'app/components/SubContainer';\nimport SubNavbar from './components/SubNavbar';\nimport SubTabWrapper from './Features/SubTabWrapper';\nimport TestCases from '../TestCases';\nimport { Flex } from '@chakra-ui/layout';\nimport ExperienceKpi from '../ExperienceKpi';\nimport HarAnalysis from '../HarAnalysis';\nimport loadingimage from '../../../styles/Assets/load-loading.gif';\nimport { Img } from '@chakra-ui/image';\n\nimport SubheaderSessionId from './components/SubheaderSessionId';\nimport {\n  selectSessionId,\n  selecttestSessionIdDetails,\n} from '../TestAnalytics/testAnalyticsSlice/selectors';\nimport SubTabsComponent from './components/SubTabsComponent';\nimport { generatePath, useNavigate, useParams } from 'react-router-dom';\nimport { DownloadLog } from '../DownLoadLog/Loadable';\nimport { AppProfiling } from '../AppProfiling/Loadable';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport NoContent from 'app/components/NoContent';\n//import features from '../../../features.json';\nimport { useToast } from '@chakra-ui/react';\nimport LiveLog from '../LiveLog';\nimport Testcasenetweb from '../Testcasesnetweb';\nimport { selectFeatureFlagConfigData } from 'Authentication/slice/selectors';\nimport ResizablePanel from './components/ResizablePanel';\n\nexport function TestSession() {\n  const features = useSelector(selectFeatureFlagConfigData);\n  const toast = useToast();\n  const { actions } = useTestSessionSlice();\n  // const [tab, setTab] = useState('app')\n  const { testId } = useParams();\n  const testSessionData = useSelector(selectTestSessionData);\n  const error = useSelector(selectError);\n  const aportTestResponseData = useSelector(selectAbortTestResponse);\n  const abortTestError = useSelector(selectAbortTestError);\n  const isLoading = useSelector(selectLoading);\n  const loadingAboertResponse = useSelector(selectLoadingAbort);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(actions.loadTestSessionData(testId));\n\n    return () => {\n      dispatch(actions.testSessionDataLoaded({}));\n    };\n  }, [testId]);\n\n  useEffect(() => {\n    if (\n      aportTestResponseData.hasOwnProperty('message') &&\n      abortTestError == null\n    ) {\n      if (\n        aportTestResponseData.hasOwnProperty('message') &&\n        aportTestResponseData.message === 'Success'\n      ) {\n        //   localStorage.setItem('testStatus', 'Aborted');\n        toast({\n          title: 'Aborted Successfully',\n          status: 'success',\n          isClosable: true,\n          position: 'bottom-right',\n        });\n        dispatch(actions.loadTestSessionData(testId));\n      } else {\n        toast({\n          title: aportTestResponseData.message,\n          status: 'error',\n          isClosable: true,\n          position: 'bottom-right',\n        });\n      }\n      dispatch(actions.abortedTestResponse({}));\n    }\n    if (abortTestError === 1) {\n      toast({\n        title: 'Abort action could not be completed.',\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n      dispatch(actions.abortTestError(null));\n    }\n  }, [aportTestResponseData, abortTestError]);\n\n  const harEnable =\n    features.features.enable[\n      'test-analytics-display-test-execution-har-analytics'\n    ];\n  const appProfilingEnable =\n    features.features.enable[\n      'test-analytics-display-test-execution-app-profiling'\n    ];\n\n  const tab = //'lr-automation';\n    testSessionData.hasOwnProperty('extra') &&\n    testSessionData.extra.hasOwnProperty('testType') &&\n    testSessionData.extra.testType;\n  const deviceType = //'tv'\n    testSessionData.hasOwnProperty('extra') &&\n    testSessionData.extra.hasOwnProperty('deviceType') &&\n    testSessionData.extra.deviceType;\n  const orientationView = //'landscape'\n    testSessionData.hasOwnProperty('extra') &&\n    testSessionData.extra.hasOwnProperty('orientation') &&\n    testSessionData.extra.testType.orientation;\n\n  const getUserEmail =\n    testSessionData.hasOwnProperty('uuid') &&\n    testSessionData.uuid.hasOwnProperty('userEmail') &&\n    testSessionData.uuid.userEmail;\n\n  const deviceId =\n    testSessionData.hasOwnProperty('deviceSerial') &&\n    testSessionData.deviceSerial;\n  const livelogflag =\n    testSessionData.hasOwnProperty('testStatus') &&\n    testSessionData.testStatus === 'Started';\n\n  const listofComponents =\n    tab === 'network'\n      ? [\n          <Testcasenetweb></Testcasenetweb>,\n          <DownloadLog></DownloadLog>,\n          <Flex>pcap</Flex>,\n          <Flex>tableau</Flex>,\n        ]\n      : tab === 'web'\n      ? [<Testcasenetweb></Testcasenetweb>, <DownloadLog></DownloadLog>]\n      : tab === 'lr-automation' ||\n        tab === 'lr-interact' ||\n        tab === 'mobile-interact'\n      ? [\n          tab === 'lr-automation' && <TestCases></TestCases>,\n          true && <DownloadLog></DownloadLog>,\n          tab === 'lr-automation' && livelogflag && <LiveLog></LiveLog>,\n        ]\n      : [\n          true && <TestCases></TestCases>,\n          appProfilingEnable && <AppProfiling></AppProfiling>,\n          harEnable && <HarAnalysis></HarAnalysis>,\n          true && <DownloadLog></DownloadLog>,\n          livelogflag && <LiveLog></LiveLog>,\n        ];\n\n  const listofTabs =\n    tab === 'network'\n      ? ['TEST CASES', 'DOWNLOADS', 'PCAP ANALYSIS', 'TABLEAU']\n      : tab === 'web'\n      ? ['TEST CASES', 'DOWNLOADS']\n      : tab === 'lr-automation' ||\n        tab === 'lr-interact' ||\n        tab === 'mobile-interact'\n      ? [\n          tab === 'lr-automation' && 'TEST CASES',\n          true && 'DOWNLOADS',\n          tab === 'lr-automation' && livelogflag && 'LIVE LOG',\n        ]\n      : [\n          true && 'TEST CASES',\n          appProfilingEnable && 'APP PROFILING',\n          harEnable && 'NETWORK',\n          true && 'DOWNLOADS',\n          livelogflag && 'LIVE LOG',\n        ];\n\n  const [currentTabId, setCurrentTabId] = useState('testcase');\n  // document.getElementById(\"currentTabId\").style.borderBottom =\"3px solid blue\";\n  const tabHandler = e => {\n    setCurrentTabId(e.target.id);\n  };\n\n  const abortTestHandler = () => {\n    dispatch(actions.loadAbortTest(testId));\n  };\n\n  return (\n    <>\n      <SubheaderSessionId\n        getUserEmail={getUserEmail}\n        testId={testId}\n        tabType={tab}\n        status={testSessionData}\n        abortTestHandler={abortTestHandler}\n      ></SubheaderSessionId>\n      <SubContainer>\n        {isLoading || loadingAboertResponse ? (\n          <LoadingComponent height=\"120px\"></LoadingComponent>\n        ) : (\n          <>\n            {error === null ? (\n              <DisplayTable testSessionData={testSessionData}></DisplayTable>\n            ) : (\n              <NoContent\n                message=\"Something Went wrong\"\n                height=\"120px\"\n              ></NoContent>\n            )}\n          </>\n        )}\n        <SubTabWrapper>\n          <SubTabsComponent\n            tabType={tab}\n            deviceType={deviceType}\n            orientationView={orientationView}\n            isBorder={true}\n            listofTabs={listofTabs}\n            listofComponents={listofComponents}\n          ></SubTabsComponent>\n        </SubTabWrapper>\n      </SubContainer>\n    </>\n  );\n}\n\nexport const repoErrorText = (error: TestSessionErrorType) => {\n  switch (error) {\n    case TestSessionErrorType.RESPONSE_ERROR:\n      return 'There is no such user 😞';\n    default:\n      return 'An error has occurred!';\n  }\n};\n"],"sourceRoot":""}