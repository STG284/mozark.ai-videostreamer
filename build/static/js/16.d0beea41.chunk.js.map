{"version":3,"sources":["app/pages/MyDevices/slice/selector.ts","app/pages/Appium/components/CustomIconButton.tsx","app/pages/UiAutomator/components/SelectTrayOption.tsx","app/pages/Calender/Components/SearchbarWithButton.tsx","app/pages/Calender/Components/FullCalendarComp.tsx","app/pages/Calender/slice/index.ts","app/pages/Calender/slice/selector.ts","app/pages/Calender/Features/SchedulerComp.tsx","app/pages/Calender/Components/FilterSearchComponet.tsx","app/pages/Calender/index.tsx"],"names":["selectSlice","state","myDevices","initialState","selectMyDevicesData","createSelector","myDevicesData","selectedDeviceForTray","myDevicesLoading","myDevicesError","traySelectDevice","selectedDeviceTrayName","devicesTrayName","selecteTrayList","deviceTrayList","selecteTrayListError","deviceListTrayError","selecteTrayDevices","TrayDeviceData","selectCreateTrayLoading","createTrayLoading","selectCreateTrayError","createTrayResponseError","selectDeleteTrayLoading","deleteTrayLoading","selectUpdateTrayLoading","updateTrayLoading","selectUpdateTrayError","updateTrayResponseError","selectFetchTrayListLoading","loadingTrayList","selectCreateTrayResponse","createTrayResponseLoaded","selectDeleteTrayResponse","deleteTrayResponseLoaded","selectDeleteTrayError","deleteTrayResponseError","selectUpdateTrayResponse","updateTrayResponseLoaded","selectLoadTrayDevicesError","TrayDataLoadError","CustomIconButton","props","getInputProps","getCheckboxProps","useRadio","input","checkbox","_jsxs","Box","as","children","_jsx","Center","align","justify","cursor","bg","border","borderRadius","w","width","h","height","color","_checked","Icon","title","FaApple","_Fragment","AiFillAndroid","VscClearAll","SelectTrayOption","_ref","selectValue","setSelectValue","selectOptions","type","Select","placeholder","size","borderColor","value","onChange","e","target","_focus","boxShadow","map","item","index","trayName","name","SearchbarWithButton","searchItem","setSearchItem","searchItemsHandler","Flex","paddingRight","SearchBar","enterKeyHandler","event","keyCode","ButtonComp","marginLeft","padding","buttonHandler","BiSearch","FullCalendarComp","eventData","resourseData","calendarTooltip","setCalendarTooltip","useState","slotDuration","setSlotDuration","document","createElement","handleDurationChange","duration","FullCalendar","style","fontSize","fontWeight","fontFamily","schedulerLicenseKey","plugins","resourceTimeline","timeGridFourDay","initialView","nowIndicator","locale","contentHeight","timeFormat","dayHeaderFormat","weekday","month","day","year","displayEventTime","columnFormat","scrollTime","minute","slotLabelFormat","meridiem","hour","hour12","firstDay","views","concat","days","headerToolbar","left","center","right","customButtons","duration5","text","click","duration10","duration15","buttonText","prev","next","week","aspectRatio","resourceAreaHeaderContent","resourceOrder","labelText","field","resources","events","eventMouseEnter","info","el","Date","start","toLocaleTimeString","end","extendedProps","projectName","eventMouseLeave","handleEventMouseLeave","calendarDeviceSerial","totalPage","currentPage","slice","createSlice","reducers","loadDeviceSerial","action","payload","serial","totalPages","Math","ceil","length","loadFilterDeviceSerial","data","filter","platform","key","toLowerCase","brand","modelName","deviceParameters","city","getFilterData","loadFilterDeviceForTray","actions","CalendarActions","useCalendarSlice","useInjectReducer","reducer","Calendar","selectCalendarDeviceSerial","getColorForTag","tagName","hash","i","charCodeAt","toString","SchedulerComp","getListingDevices","getSerialDevices","useSelector","dispatch","useDispatch","busyDeviceSlots","selectBusyDeviceSlots","loadingBusyDeviceList","selectBusyDeviceLoading","getEventData","setEventData","getResourseData","setResourseData","testExecutionActions","useTestExecutionSlice","setTotalPage","setCurrentPage","useEffect","loadindBusyDeviceSlots","list","push","id","deviceSerial","j","busySlots","busySlotParameters","busyBy","startTime","endTime","description","resourceId","hasOwnProperty","getSchedulerData","flexDirection","fontWieght","LoadingComponent","justifyContent","justifySelf","className","marginTop","marginRight","display","Text","disabled","onClick","prePageHandler","textTransform","nextPageHandler","NoContent","message","FilterSearchComponet","selectCategory","setSelectCategory","selectTrayValue","setTraySelectValue","selectListingDevices","selectTrayOptionList","useMyDevicesSlice","isMobileTesting","usePlatformtypeHook","getRootProps","getRadioProps","useRadioGroup","defaultValue","val","group","loadDeviceTrayList","applyResetFilterSearchHandler","parseInt","devices","alignItems","alignContent","paddingBottom","searchButtonHandler","trim","toLocaleLowerCase","HStack","spacing","radio","margin","backgroundColor","logo","RiRefreshLine","Calender","loadingDeviceList","selectDeviceListLoading","loadDeviceList","testType","minHeight"],"mappings":"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","file":"static/js/16.d0beea41.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { initialState } from '.';\n\nimport { RootState } from 'types';\n\n// First select the relevant part from the state\nconst selectSlice = (state: RootState) => state.myDevices || initialState;\n\nexport const selectMyDevicesData = createSelector(\n  [selectSlice],\n  state => state.myDevicesData,\n);\n\nexport const selectLoadingMyDevices = createSelector(\n  [selectSlice],\n  state => state.myDevicesLoading,\n);\nexport const selectMyDevicesError = createSelector(\n  [selectSlice],\n  state => state.myDevicesError,\n);\n\nexport const selectDeviceCount = createSelector(\n  [selectSlice],\n  state => state.traySelectDevice,\n);\n\nexport const selectedDeviceForTray = createSelector(\n  [selectSlice],\n  state => state.traySelectDevice,\n);\nexport const selectedDeviceTrayName = createSelector(\n  [selectSlice],\n  state => state.devicesTrayName,\n);\nexport const selecteTrayList = createSelector(\n  [selectSlice],\n  state => state.deviceTrayList,\n);\nexport const selecteTrayListError = createSelector(\n  [selectSlice],\n  state => state.deviceListTrayError,\n);\nexport const selecteTrayDevices = createSelector(\n  [selectSlice],\n  state => state.TrayDeviceData,\n);\nexport const selectCreateTrayLoading = createSelector(\n  [selectSlice],\n  state => state.createTrayLoading,\n);\nexport const selectCreateTrayError = createSelector(\n  [selectSlice],\n  state => state.createTrayResponseError,\n);\nexport const selectDeleteTrayLoading = createSelector(\n  [selectSlice],\n  state => state.deleteTrayLoading,\n);\nexport const selectUpdateTrayLoading = createSelector(\n  [selectSlice],\n  state => state.updateTrayLoading,\n);\nexport const selectUpdateTrayError = createSelector(\n  [selectSlice],\n  state => state.updateTrayResponseError,\n);\nexport const selectFetchTrayListLoading = createSelector(\n  [selectSlice],\n  state => state.loadingTrayList,\n);\nexport const selectCreateTrayResponse = createSelector(\n  [selectSlice],\n  state => state.createTrayResponseLoaded,\n);\nexport const selectDeleteTrayResponse = createSelector(\n  [selectSlice],\n  state => state.deleteTrayResponseLoaded,\n);\nexport const selectDeleteTrayError = createSelector(\n  [selectSlice],\n  state => state.deleteTrayResponseError,\n);\nexport const selectUpdateTrayResponse = createSelector(\n  [selectSlice],\n  state => state.updateTrayResponseLoaded,\n);\nexport const selectLoadTrayDevicesError = createSelector(\n  [selectSlice],\n  state => state.TrayDataLoadError,\n);\n\n// export const selectDeletedUser = createSelector(\n//   [selectSlice],\n//   state => state.deleteUserDetail,\n// );\n// export const selectDeletedUserError = createSelector(\n//   [selectSlice],\n//   state => state.deletteUserError,\n// );\n\n// export const selectToastMessageUser = createSelector(\n//   [selectSlice],\n//   state => state.toastMessage,\n// );\n","// @ts-nocheck\nimport {\n  Box,\n  Center,\n  Flex,\n  IconButton,\n  useRadio,\n  Icon,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport { AiFillAndroid } from 'react-icons/ai';\nimport { FaApple } from 'react-icons/fa';\nimport { RiRefreshLine } from 'react-icons/ri';\nimport { VscClearAll } from 'react-icons/vsc';\n\nfunction CustomIconButton(props) {\n  const { getInputProps, getCheckboxProps } = useRadio(props);\n\n  const input = getInputProps();\n  const checkbox = getCheckboxProps();\n\n  //console.log(checkbox);\n  // console.log(input);\n\n  return (\n    <Box as=\"label\">\n      <input {...input} />\n      {/* <IconButton\n         {...checkbox}\n        aria-label=\"androidIcon\"\n        bg=\"white\"\n        borderRadius=\"3px\"\n        w=\"39px\"\n        h=\"39px\"\n        color=\"grey5\"\n        border=\".2px solid #C8C8C8\"\n        _focus={{ boxShadow: 'none' }}\n        _checked={{ bg: 'white3', color: 'blue1' }}\n        icon={   props.children === \"ios\" ?  <FaApple /> : <AiFillAndroid />  }\n      /> */}\n      <Center\n        align=\"center\"\n        justify=\"center\"\n        {...checkbox}\n        cursor=\"pointer\"\n        bg={props.children && 'white'}\n        border={props.children && '.2px solid #C8C8C8'}\n        borderRadius=\"3px\"\n        w={props.width || '39px'}\n        h={props.height || '39px'}\n        color=\"grey5\"\n        _checked={\n          props.children && {\n            bg: 'white3',\n            color: 'blue1',\n            border: '1px solid #F3F6F9',\n          }\n        }\n      >\n        {props.children === 'ios' ? (\n          <Icon title=\"ios\" width=\"16px\" as={FaApple} height=\"18px\"></Icon>\n        ) : (\n          <>\n            {props.children === 'android' ? (\n              <Icon\n                title=\"android\"\n                width=\"16px\"\n                as={AiFillAndroid}\n                height=\"20px\"\n              ></Icon>\n            ) : (\n              <Icon\n                title=\"clear\"\n                width=\"16px\"\n                as={VscClearAll}\n                height=\"20px\"\n              ></Icon>\n            )}\n          </>\n        )}\n      </Center>\n    </Box>\n  );\n}\n\nexport default CustomIconButton;\n","// @ts-nocheck\nimport { Select } from '@chakra-ui/react';\nimport React from 'react';\n\nfunction SelectTrayOption({\n  title,\n  selectValue,\n  setSelectValue,\n  selectOptions,\n  type,\n  width,\n}) {\n  return (\n    <Select\n      placeholder={title}\n      size=\"sm\"\n      width={width || '230px'}\n      color=\"grey13\"\n      h=\"34px\"\n      border=\"1px solid \"\n      borderColor=\"grey1\"\n      borderRadius=\"5px\"\n      data-select={title}\n      value={selectValue}\n      onChange={e => setSelectValue(e.target.value)}\n      _focus={{ boxShadow: ' 0 0 0 white', borderColor: 'grey1' }}\n    >\n      {selectOptions &&\n        selectOptions.map((item, index) => (\n          <option\n            data-select-project={\n              type === 'project' && item.trayName + '_' + index\n            }\n            key={index}\n            value={type === 'project' ? item.name : index}\n          >\n            {type === 'project' ? item.name : item.trayName}\n          </option>\n        ))}\n    </Select>\n  );\n}\n\nexport default SelectTrayOption;\n","// @ts-nocheck\nimport { Flex, Icon } from '@chakra-ui/react';\nimport ButtonComp from 'app/components/ButtonComp';\nimport SearchBar from 'app/pages/TestAnalytics/components/SearchBar';\nimport React from 'react';\nimport { BiSearch } from 'react-icons/bi';\n\nfunction SearchbarWithButton({\n  searchItem,\n  setSearchItem,\n  searchItemsHandler,\n}) {\n  const enterKeyHandler = event => {\n    if (event.keyCode === 13) {\n      searchItemsHandler();\n    }\n  };\n\n  return (\n    <Flex paddingRight=\"20px\" width=\"40%\" align=\"center\">\n      <SearchBar\n        width=\"70%\"\n        enterKeyHandler={enterKeyHandler}\n        searchItem={searchItem}\n        setSearchItem={setSearchItem}\n      ></SearchBar>\n      <ButtonComp\n        marginLeft=\"0px\"\n        padding=\"9px  10px\"\n        name=\"search-testanalytic-key-button\"\n        buttonHandler={searchItemsHandler}\n      >\n        <Icon as={BiSearch}></Icon>\n      </ButtonComp>\n    </Flex>\n  );\n}\n\nexport default SearchbarWithButton;\n","// @ts-nocheck\nimport { Flex, Tooltip } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport FullCalendar from '@fullcalendar/react'; // must go before plugins\nimport resourceTimeline from '@fullcalendar/resource-timeline'; // a plugin!\nimport timeGridFourDay from '@fullcalendar/timegrid';\nimport './tooltip.css';\nfunction FullCalendarComp({ eventData, resourseData }) {\n  const [calendarTooltip, setCalendarTooltip] = useState('');\n  const wrapperElement = document.createElement('div');\n  const [slotDuration, setSlotDuration] = useState(10);\n  const handleEventMouseEnter = info => {\n    // setCalendarTooltip(info.event.title);\n    const elementToWrap = info.el;\n    //elementToWrap.style.position = 'relative';\n\n    //  elementToWrap.title = info.event.extendedProps.description;\n\n    // console.log(info.event.title);\n    //console.log(info.event.start);\n    // console.log(info.event.end);\n    // console.log(info.event.extendedProps.description);\n    //wrapperElement.className = 'wrapper-tooltip'\n    elementToWrap.title = `${new Date(\n      info.event.start,\n    ).toLocaleTimeString()} - ${new Date(\n      info.event.end,\n    ).toLocaleTimeString()}, Project Name : ${\n      info.event.extendedProps.projectName\n    }`;\n\n    // elementToWrap.title = titleElement.outerHTML;\n\n    //console.log(elementToWrap)\n    //elementToWrap.appendChild(wrapperElement);\n    //setCalendarTooltip(elementToWrap);\n    //console.log(wrapperElement)\n  };\n\n  const handleEventMouseLeave = () => {\n    // wrapperElement.className = '';\n    //wrapperElement.innerText ='title'\n    //calendarTooltip.removeChild(wrapperElement);\n    setCalendarTooltip('');\n    // wrapperElement.innerText = 'tooltip'\n  };\n\n  const handleDurationChange = duration => {\n    setSlotDuration(duration);\n  };\n\n  return (\n    <Flex>\n      <FullCalendar\n        style={{\n          fontSize: '12px',\n          fontWeight: '500',\n          fontFamily: 'Montserrat',\n        }}\n        schedulerLicenseKey=\"CC-Attribution-NonCommercial-NoDerivatives\"\n        plugins={[resourceTimeline, timeGridFourDay]}\n        initialView=\"timeGridFourDay\"\n        // initialDate=\"2021-05-23\"\n        nowIndicator={true}\n        locale=\"en\"\n        contentHeight=\"auto\"\n        timeFormat=\"hh:mm\" // uppercase H for 24-hour clock、\n        dayHeaderFormat={{\n          weekday: 'short',\n          month: 'numeric',\n          day: 'numeric',\n          year: 'numeric',\n        }}\n        displayEventTime={false}\n        //  displayEventTooltip={true}\n        columnFormat=\"ddd\"\n        scrollTime=\"0\"\n        slotDuration={{ minute: slotDuration }}\n        slotLabelFormat={[\n          {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n            meridiem: 'short',\n          }, // top level of text\n          {\n            hour: '2-digit',\n            minute: '2-digit',\n            meridiem: true,\n            hour12: true,\n          }, // lower level of text\n        ]}\n        firstDay=\"1\"\n        views={{\n          timeGridFourDay: {\n            type: 'resourceTimeline',\n            slotDuration: `00:${slotDuration}`,\n            style: { fontWeight: '500' },\n            displayEventTime: false,\n            duration: { days: 1 },\n            headerToolbar: false,\n            slotLabelFormat: [\n              {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n                meridiem: 'short',\n              }, // top level of text\n              {\n                hour: '2-digit',\n                minute: '2-digit',\n                meridiem: true,\n                hour12: true,\n              }, // lower level of text\n            ],\n          },\n          displayEventTime: false,\n        }}\n        headerToolbar={{\n          left: 'today,resourceTimelineDay,resourceTimelineWeek, duration5,duration10,duration15',\n          center: 'title',\n          right: 'prev,next',\n        }}\n        customButtons={{\n          duration5: {\n            text: '5',\n            click: () => handleDurationChange('05'),\n          },\n          duration10: {\n            text: '10',\n            click: () => handleDurationChange('10'),\n          },\n          duration15: {\n            text: '15',\n            click: () => handleDurationChange('15'),\n          },\n        }}\n        buttonText={{\n          prev: ' < ',\n          next: ' > ',\n          week: 'week',\n        }}\n        aspectRatio={1.5}\n        resourceAreaHeaderContent=\"Devices\"\n        resourceOrder={[\n          {\n            labelText: 'Device',\n            field: 'title',\n          },\n          {\n            labelText: 'Occupancy',\n            field: 'occupancy',\n          },\n        ]}\n        resources={resourseData}\n        events={eventData}\n        eventMouseEnter={handleEventMouseEnter}\n        eventMouseLeave={handleEventMouseLeave}\n      />\n    </Flex>\n  );\n}\n\nexport default FullCalendarComp;\n","// @ts-nocheck\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\nimport { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';\n\nimport { CalendarState } from './types';\n\nexport const initialState: CalendarState = {\n  calendarDeviceSerial: [],\n  totalPage: 1,\n  currentPage: 0,\n};\n\nconst getFilterData = payload => {\n  // console.log(payload);\n  if (payload.type === 'platform') {\n    const filterData = payload.data.filter(\n      item => item.platform === payload.key,\n    );\n    //console.log(filterData);\n    return filterData.map(item => item.serial);\n  }\n  if (payload.type === 'search') {\n    const filterData = payload.data.filter(\n      item =>\n        item.platform.toLowerCase() === payload.key ||\n        item.brand.toLowerCase() == payload.key ||\n        item.serial.toLowerCase() == payload.key ||\n        item.modelName.toLowerCase() == payload.key ||\n        item.deviceParameters.city.toLowerCase() == payload.key,\n    );\n    //console.log(filterData);\n    return filterData.map(item => item.serial);\n  }\n\n  return [];\n};\n\nconst slice = createSlice({\n  name: 'Calendar',\n  initialState,\n  reducers: {\n    loadDeviceSerial: (state, action: PayloadAction<any>) => {\n      //console.log(action.payload)\n      state.calendarDeviceSerial = action.payload.map(item => item.serial);\n      state.totalPages = Math.ceil(action.payload.length / 10);\n    },\n    loadFilterDeviceSerial: (state, action: PayloadAction<any>) => {\n      state.calendarDeviceSerial = getFilterData(action.payload);\n      state.totalPages = Math.ceil(action.payload.data.length / 10);\n    },\n    loadFilterDeviceForTray: (state, action: PayloadAction<any>) => {\n      state.calendarDeviceSerial = action.payload;\n    },\n  },\n});\n\nexport const { actions: CalendarActions } = slice;\n\nexport const useCalendarSlice = () => {\n  useInjectReducer({ key: slice.name, reducer: slice.reducer });\n  //useInjectSaga({ key: slice.name, saga: HomePageSaga });\n  return { CalendarActions: slice.actions };\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\n// First select the relevant part from the state\nconst selectSlice = (state: RootState) => state.Calendar || initialState;\n\nexport const selectCalendarDeviceSerial = createSelector(\n  [selectSlice],\n  state => state.calendarDeviceSerial,\n);\nexport const selectTotalPages = createSelector(\n  [selectSlice],\n  state => state.totalPages,\n);\nexport const selectCurrentPage = createSelector(\n  [selectSlice],\n  state => state.currentPage,\n);\n","// @ts-nocheck\nimport { Flex, Text } from '@chakra-ui/react';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport NoContent from 'app/components/NoContent';\nimport { useTestExecutionSlice } from 'app/pages/Xcui/slice';\nimport {\n  selectBusyDeviceLoading,\n  selectBusyDeviceSlots,\n} from 'app/pages/Xcui/slice/selector';\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FullCalendarComp from '../Components/FullCalendarComp';\nimport {\n  selectCalendarDeviceSerial,\n  selectTotalPages,\n} from '../slice/selector';\nconst getColorForTag = tagName => {\n  // Convert tag name to a numerical hash value\n  if(!tagName){\n    return '#FF0000';\n    }\n  let hash = 0;\n  for (let i = 0; i < tagName.length; i++) {\n    hash = tagName.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  // Generate RGB values from hash value\n  let r = (hash & 0xff0000) >> 16;\n  let g = (hash & 0x00ff00) >> 8;\n  let b = hash & 0x0000ff;\n  // Return color string in hex format (#RRGGBB)\n  return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n};\nconst getSchedulerData = list => {\n  let eventData = [];\n  let resourseData = [];\n  for (let i = 0; i < list.length; i++) {\n    resourseData.push({\n      id: list[i].deviceSerial,\n      title: list[i].modelName + ' - ' + list[i].city,\n    });\n\n    for (let j = 0; j < list[i].busySlots.length; j++) {\n\n      if(list[i].busySlots[j].busySlotParameters.busyBy !== 'free'){\n        // console.log(list[i].busySlots[j].busySlotParameters.busyBy)\n        eventData.push({\n          start: list[i].busySlots[j].startTime,\n          end: list[i].busySlots[j].endTime,\n          title: '', // list[i].busySlots[j].busySlotParameters.projectName,\n          description: 'description',\n          color: getColorForTag(\n            list[i].busySlots[j].busySlotParameters.projectName,\n          ),\n          resourceId: list[i].deviceSerial,\n          projectName: list[i].busySlots[j].busySlotParameters.hasOwnProperty(\n            'projectName',\n          )\n            ? list[i].busySlots[j].busySlotParameters.projectName\n            : '-',\n        });\n  \n      }\n   \n    }\n  }\n  return { eventData, resourseData };\n};\n\nfunction SchedulerComp({ getListingDevices }) {\n  //sconsole.log('child render scheduler');\n  const getSerialDevices = useSelector(selectCalendarDeviceSerial);\n  const dispatch = useDispatch();\n  const busyDeviceSlots = useSelector(selectBusyDeviceSlots);\n  const loadingBusyDeviceList = useSelector(selectBusyDeviceLoading);\n  const [getEventData, setEventData] = useState([]);\n  const [getResourseData, setResourseData] = useState([]);\n  //const { eventData, resourseData } = getSchedulerData(busyDeviceSlots);\n  const { testExecutionActions } = useTestExecutionSlice();\n  //const totalPage = useSelector(selectTotalPages);\n  const [totalPage, setTotalPage] = useState(0);\n  const [currentPage, setCurrentPage] = useState(0);\n\n  useEffect(() => {\n    if (totalPage > 0 && getSerialDevices.length > 0) {\n      dispatch(\n        testExecutionActions.loadindBusyDeviceSlots(\n          getSerialDevices.slice(currentPage * 10, currentPage * 10 + 10),\n        ),\n      );\n    }\n  }, [currentPage, getSerialDevices]);\n\n  useEffect(() => {\n    if (getSerialDevices.length > 0) {\n      setTotalPage(Math.ceil(getSerialDevices.length / 10));\n    }\n  }, [getSerialDevices]);\n\n  useEffect(() => {\n    if (busyDeviceSlots.length > 0) {\n      const { eventData, resourseData } = getSchedulerData(busyDeviceSlots);\n      setEventData(eventData);\n      setResourseData(resourseData);\n      //console.log(eventData, resourseData)\n    }\n  }, [busyDeviceSlots]);\n\n  //console.log(busyDeviceSlots)\n  const prePageHandler = () => {\n    if (currentPage > 0) {\n      setCurrentPage(state => state - 1);\n    }\n  };\n  const nextPageHandler = () => {\n    if (currentPage + 1 < totalPage) {\n      setCurrentPage(state => state + 1);\n    }\n  };\n\n  //console.log(getSerialDevices);\n  return (\n    <Flex\n      flexDirection=\"column\"\n      fontFamily=\"Montserrat\"\n      fontWieght=\"500\"\n      fontSize=\"14px\"\n    >\n      {loadingBusyDeviceList ? (\n        <LoadingComponent height=\"80vh\"></LoadingComponent>\n      ) : (\n        <>\n          {getSerialDevices.length > 0 ? (\n            <>\n              <FullCalendarComp\n                eventData={getEventData}\n                resourseData={getResourseData}\n              ></FullCalendarComp>\n              <Flex width=\"100%\" justifyContent=\"flex-end\">\n                <Flex\n                  fontFamily=\"Montserrat\"\n                  justifySelf=\"flex-end\"\n                  fontWeight=\"500\"\n                  className=\"pagination\"\n                  boxShadow=\"0px 3px 6px #00000029\"\n                  borderRadius=\"13\"\n                  marginTop=\"10px\"\n                  marginRight=\"5px \"\n                  color=\"grey2\"\n                  padding=\"5px 10px\"\n                  display=\"inline-block\"\n                  flexDirection=\"row\"\n                >\n                  <Text\n                    cursor={currentPage <= 0 ? '' : 'pointer'}\n                    as=\"span\"\n                    padding=\"0px 5px\"\n                    disabled={currentPage <= 0 ? true : false}\n                    onClick={prePageHandler}\n                  >\n                    {' '}\n                    &lt;{' '}\n                  </Text>\n                  <Text as=\"span\" textTransform=\"none\" padding=\"0px 5px\">\n                    {currentPage + 1} Of {totalPage}\n                  </Text>\n                  <Text\n                    cursor={currentPage + 1 >= totalPage ? '' : 'pointer'}\n                    as=\"span\"\n                    padding=\"0px 5px\"\n                    disabled={currentPage + 1 >= totalPage ? true : false}\n                    onClick={nextPageHandler}\n                  >\n                    {' '}\n                    &gt;{' '}\n                  </Text>\n                </Flex>\n              </Flex>\n            </>\n          ) : (\n            <NoContent message=\"no data found\"></NoContent>\n          )}\n        </>\n      )}\n    </Flex>\n  );\n}\n\nexport default SchedulerComp;\n","// @ts-nocheck\nimport {\n  Flex,\n  HStack,\n  Icon,\n  Select,\n  Text,\n  useRadioGroup,\n} from '@chakra-ui/react';\nimport ButtonComp from 'app/components/ButtonComp';\nimport CustomIconButton from 'app/pages/Appium/components/CustomIconButton';\nimport { useMyDevicesSlice } from 'app/pages/MyDevices/slice';\nimport { selecteTrayList } from 'app/pages/MyDevices/slice/selector';\nimport SelectTrayOption from 'app/pages/UiAutomator/components/SelectTrayOption';\nimport { selectListingDevices } from 'app/pages/Xcui/slice/selector';\nimport React, { useEffect, useState } from 'react';\nimport { RiRefreshLine } from 'react-icons/ri';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useCalendarSlice } from '../slice';\nimport SearchbarWithButton from './SearchbarWithButton';\nimport usePlatformtypeHook from 'app/pages/HomePage/usePlatformtypeHook';\n\nfunction FilterSearchComponet() {\n  const [selectCategory, setSelectCategory] = useState('');\n  const [searchItem, setSearchItem] = useState('');\n  const options = ['android', 'ios', 'reset'];\n  const [selectTrayValue, setTraySelectValue] = useState(-1);\n  const getListingDevices = useSelector(selectListingDevices);\n  const dispatch = useDispatch();\n  const selectTrayOptionList = useSelector(selecteTrayList);\n  const { CalendarActions } = useCalendarSlice();\n  const { actions } = useMyDevicesSlice();\n  const isMobileTesting = usePlatformtypeHook();\n  const { getRootProps, getRadioProps } = useRadioGroup({\n    name: 'category',\n    defaultValue: 'reset',\n    onChange: val => setSelectCategory(val),\n  });\n  const group = getRootProps();\n  useEffect(() => {\n    dispatch(actions.loadDeviceTrayList(isMobileTesting ? 'app-automation' : 'lr-automation'));\n  }, []);\n  const applyResetFilterSearchHandler = () => {\n    if (getListingDevices.length > 0) {\n      dispatch(CalendarActions.loadDeviceSerial(getListingDevices));\n      setSearchItem('');\n      setSelectCategory('');\n      setTraySelectValue(-1);\n    }\n  };\n\n  useEffect(() => {\n    if (parseInt(selectTrayValue) === 0 || parseInt(selectTrayValue) > 0) {\n      if (selectTrayOptionList[selectTrayValue].devices.length > 0) {\n        dispatch(\n          CalendarActions.loadFilterDeviceForTray(\n            selectTrayOptionList[selectTrayValue].devices,\n          ),\n        );\n        setSearchItem('');\n      }\n    } else if (parseInt(selectTrayValue) < 0) {\n      //console.log('reset')\n    } else {\n      if (getListingDevices.length > 0) {\n        dispatch(CalendarActions.loadDeviceSerial(getListingDevices));\n        setSearchItem('');\n      }\n    }\n  }, [selectTrayValue]);\n\n  //console.log(selectTrayOptionList)\n  useEffect(() => {\n    if (\n      selectCategory !== '' &&\n      selectCategory !== null &&\n      getListingDevices.length > 0\n    ) {\n      dispatch(\n        CalendarActions.loadFilterDeviceSerial({\n          type: 'platform',\n          key: selectCategory,\n          data: getListingDevices,\n        }),\n      );\n      setTraySelectValue(-1);\n      setSearchItem('');\n    }\n    if (selectCategory === 'reset') {\n      applyResetFilterSearchHandler();\n    }\n  }, [selectCategory]);\n\n  const searchButtonHandler = () => {\n    if (searchItem !== '') {\n      dispatch(\n        CalendarActions.loadFilterDeviceSerial({\n          type: 'search',\n          key: searchItem.trim().toLocaleLowerCase(),\n          data: getListingDevices,\n        }),\n      );\n      setTraySelectValue(-1);\n    }\n  };\n\n  //console.log(selectTrayValue);\n\n  return (\n    <Flex\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      alignContent=\"center\"\n      padding=\"10px\"\n      paddingBottom=\"0px\"\n      fontFamily=\"Montserrat\"\n      width=\"100%\"\n    >\n      <SearchbarWithButton\n        setSearchItem={setSearchItem}\n        searchItem={searchItem}\n        searchItemsHandler={searchButtonHandler}\n      ></SearchbarWithButton>\n      <Flex alignItems=\"center\" alignContent=\"center\" height=\"40px\">\n        <HStack {...group} spacing=\"0px\">\n          {options.map(value => {\n            const radio = getRadioProps({ value });\n            return (\n              <CustomIconButton\n                height=\"33px\"\n                width=\"40px\"\n                key={value}\n                {...radio}\n              >\n                {value}\n              </CustomIconButton>\n            );\n          })}\n        </HStack>\n        {/* <Flex\n          w=\"200px\"\n          //justifyContent=\"space-between\"\n          color=\"grey\"\n          fontWeight=\"500\"\n          alignItems=\"center\"\n          alignSelf=\"end\"\n          padding=\"0px 10px\"\n          alignItems=\"center\"\n          alignContent=\"center\"\n        >\n          <Text marginRight=\"10px\" color=\"grey13\">\n            Tray\n          </Text>\n          <Select\n            align=\"right\"\n            width=\"140px\"\n            h=\"35px\"\n            placeholder=\"select tray\"\n          >\n            <option value=\"option1\">Option 1</option>\n            <option value=\"option2\">Option 2</option>\n            <option value=\"option3\">Option 3</option>\n          </Select>{' '}\n        </Flex> */}\n        <HStack margin=\"0px 10px\">\n          <Text>Tray</Text>\n          <SelectTrayOption\n            width=\"140px\"\n            selectOptions={selectTrayOptionList}\n            title=\"Select Tray\"\n            selectValue={selectTrayValue}\n            setSelectValue={setTraySelectValue}\n          ></SelectTrayOption>\n        </HStack>\n\n        <ButtonComp\n          padding=\"4px 8px\"\n          backgroundColor=\"white\"\n          color=\"#3F4254\"\n          logo={<Icon as={RiRefreshLine} fontWeight=\"600\"></Icon>}\n          buttonHandler={applyResetFilterSearchHandler}\n        >\n          Reset\n        </ButtonComp>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default FilterSearchComponet;\n","//@ts-nocheck\nimport React, { useEffect } from 'react';\nimport { Flex, Text } from '@chakra-ui/layout';\nimport Schedulers from './Components/Schedulers';\nimport SubContainer from 'app/components/SubContainer';\nimport SubLayout from 'app/components/SubLayout';\nimport { useDispatch } from 'react-redux';\nimport { useTestExecutionSlice } from 'app/pages/Xcui/slice';\nimport { useSelector } from 'react-redux';\nimport {\n  selectBusyDeviceLoading,\n  selectBusyDeviceSlots,\n  selectDeviceListLoading,\n} from '../Xcui/slice/selector';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { useState } from 'react';\nimport { selectListingDevices } from 'app/pages/Xcui/slice/selector';\nimport SchedulerComp from './Features/SchedulerComp';\nimport Subheader from 'app/components/Subheader';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport NoContent from 'app/components/NoContent';\nimport FilterSearchComponet from './Components/FilterSearchComponet';\nimport { useCalendarSlice } from './slice';\nimport { selectCalendarDeviceSerial } from './slice/selector';\nimport usePlatformtypeHook from '../HomePage/usePlatformtypeHook';\n\nexport function Calender() {\n  const dispatch = useDispatch();\n  const { testExecutionActions } = useTestExecutionSlice();\n  const { CalendarActions } = useCalendarSlice();\n  //const busyDeviceSlots = useSelector(selectBusyDeviceSlots);\n  const loadingDeviceList = useSelector(selectDeviceListLoading);\n  const isMobileTesting = usePlatformtypeHook();\n  const getListingDevices = useSelector(selectListingDevices);\n  // getListingDevices.map(item => item.serial);\n\n  useEffect(() => {\n    dispatch(testExecutionActions.loadDeviceList({testType : isMobileTesting ? 'app-automation,mobile-interact' : 'lr-automation,lr-interact' , platform: ''}))\n  }, []);\n  useEffect(() => {\n    if (getListingDevices.length > 0) {\n      //console.log(getListingDevices )\n      dispatch(CalendarActions.loadDeviceSerial(getListingDevices));\n    }\n  }, [getListingDevices]);\n\n  //console.log('parent');\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      borderRadius=\"5px\"\n      bg=\"white\"\n      minHeight=\"100vh\"\n      width=\"100%\"\n    >\n      <FilterSearchComponet></FilterSearchComponet>\n      <>\n        {loadingDeviceList ? (\n          <LoadingComponent height=\"90vh\"></LoadingComponent>\n        ) : (\n          <>\n            {getListingDevices.length > 0 ? (\n              <Flex\n                width=\"100%\"\n                //borderRadius=\"10px\"\n                //   bg=\"white\"\n                //  justifyContent=\"center\"\n                padding=\"15px\"\n                alignItems=\"center\"\n                flexDirection=\"column\"\n                fontFamily=\"Montserrat\"\n                // margin=\"10px\"\n              >\n                <>\n                  {getListingDevices.length > 0 ? (\n                    <SchedulerComp\n                      getListingDevices={getListingDevices}\n                    ></SchedulerComp>\n                  ) : (\n                    <NoContent\n                      message=\"No Data Found\"\n                      height=\"80vh\"\n                    ></NoContent>\n                  )}\n                </>\n              </Flex>\n            ) : (\n              <NoContent message=\"No Data\" height=\"80vh\"></NoContent>\n            )}\n          </>\n        )}\n      </>\n    </Flex>\n  );\n}\nexport default Calender;\n"],"sourceRoot":""}