{"version":3,"sources":["app/pages/TestAnalytics/components/Table/index.tsx","styles/Assets/Automation.svg","app/pages/DebugReportGenerate/components/SelectOption.tsx","../../../src/textarea.tsx","app/pages/SettingsManageUser/components/InviteUserCard.tsx","app/pages/SettingsManageUser/slice/types.ts","app/pages/SettingsManageUser/slice/saga.ts","app/pages/SettingsManageUser/slice/index.ts","app/pages/SettingsManageUser/slice/selector.ts","app/pages/SettingsManageUser/components/EditUserPopup.tsx","app/pages/SettingsManageUser/components/ManageUserTable.tsx","app/pages/SettingsManageUser/index.tsx"],"names":["PaginatedTable","_ref","columns","data","leftIcon","rightHoverIcon","type","getTabIndex","editUserClickHandler","deleteUserClickHandler","history","useNavigate","GetLastAuthUser","last_auth","concat","UserPool","getClientId","reg","RegExp","document","cookie","match","email","getEmailId","getTabIndexKey","inputRef","useRef","homePageActions","useHomePageSlice","getPageIndexinit","useSelector","selectPageIndexInisialValue","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","state","pageIndex","pageSize","useDispatch","useTable","initialState","hasOwnProperty","key","value","autoResetPage","usePagination","_jsxs","Flex","flexDirection","paddingTop","width","backgroundColor","children","CustomTable","fontFamily","fontWeight","variant","_jsx","Thead","color","map","headerGroup","Tr","getHeaderGroupProps","Th","minWidth","paddingLeft","paddingRight","headers","column","textTransform","padding","getHeaderProps","render","Tbody","row","i","textDecoration","cursor","className","cells","original","uuid","onClick","id","_id","_hover","background","getRowProps","Td","testType","Icon","title","w","h","as","MdOutlineMonitor","RiDeviceLine","testId","AiOutlineSetting","MdOutlineTouchApp","cell","index","testStatus","getCellProps","dateTimeConverter","testStartTime","updatedAt","sessionId","Date","createdDate","toGMTString","slice","user_role","Text","bg","align","borderRadius","isMFAEnabled","AiOutlineCheckSquare","MdOutlineDisabledByDefault","status","Badge","sx","display","justify","alignItems","MdOutlineAnalytics","HStack","user_name","e","FaTrashAlt","MdEdit","GrShieldSecurity","createdBy","justifyContent","marginRight","boxShadow","marginTop","disabled","Box","paddingBottom","Input","size","_focus","textAlign","fontSize","borderBottom","borderBottomColor","ref","onFocus","target","select","onKeyUp","onChange","Number","length","SelectOption","placeholder","selectValue","setSelectValue","optionList","height","Select","border","borderColor","margin","item","style","Textarea","forwardRef","props","styles","useStyleConfig","omitThemingProps","rows","rest","textareaProps","useFormControl","textareaStyles","omit","textarea","cx","__css","__DEV__","displayName","InviteUserCard","userEmail","setUserEmail","sendInviteUserHandler","Stack","InputComponent","setInputValue","inputValue","alignSelf","ButtonComp","name","buttonHandler","ManageUserErrorType","BASE_URL_USER","REACT_APP_COGNITO_BASE_URL","getManageUserData","requestUrl","idToken","GetIdToken","config","method","Authorization","manageUserData","call","request","put","actions","manageUserDataLoaded","manageUserDataError","RESPONSE_ERROR","error","getUserDetail","action","updateRequestUrl","payload","body","JSON","stringify","response","Object","keys","updateUserDetailLoaded","updateUserDetailError","deleteUserDetailWorker","deleteRequestUrl","responsedata","deleteUserDetailLoaded","deleteUserDetailError","signupRequestWorker","signViaInviteUrl","fetch","json","message","signupRequestSended","signupRequestError","manageUserSaga","takeLatest","loadManageUserData","takeEvery","updateUserDetail","deleteUserDetail","signupRequest","loading","isDeleteTriger","isUpdateTriger","updateUserError","deletteUserError","toastMessage","sendInvite","sentInviteResponse","sendInviteError","createSlice","reducers","console","log","updateToastMessage","userManageActions","useManageUserSlice","useInjectReducer","reducer","useInjectSaga","saga","selectSlice","manageUser","selectManageUserData","createSelector","selectLoading","selectManageUserDataError","selectUpdatedUser","selectDeletedUser","selectDeletedUserError","selectUpdateUserError","selectInvitedUser","selectInviteLoading","selectInviteError","selectLoadingDeleteUser","selectLoadingUpdateUser","EditUserPopup","userData","onClose","selectUser","setSelectUser","useState","userName","setUserName","userPassword","setUserPassword","password","userId","setUserId","tenant_id","dispatch","updatedUserData","updatedUserError","toast","useToast","useEffect","isClosable","position","spacing","isDisabled","borderTop","updateHandlerUser","userRole","tenantId","Header","accessor","ManageUserTable","isOpen","onOpen","useDisclosure","userInfo","setUserInfo","manageData","isLoading","mangeDataError","deletedUser","deletedUserError","LoadingComponent","_Fragment","NoContent","IoMdContact","userDetail","PopupComponent","buttonHandler1","footer","SettingsManageUser","updatedUser","invitedUser","inviteUserError","getDeleteUserId","setDeleteUserId","loadingInviteUser","loadingDeleteUser","loadingUpdateUser","isOverLay","SubLayout","PopoverComponent","minHeight","button","focus","async","buttonTitle1","buttonTitle2","buttonHandler2","deleteUserButtonHandler","justifyItems"],"mappings":"oHAAA,iQA+FO,SAASA,EAAcC,GAS1B,IAT2B,QAC7BC,EAAO,KACPC,EAAI,SACJC,EAAQ,eACRC,EAAc,KACdC,EAAI,YACJC,EAAW,qBACXC,EAAoB,uBACpBC,GACDR,EACKS,EAAUC,cAMUC,MACtB,MAAMC,EAAS,kCAAAC,OAAqCC,IAASC,cAAa,iBACpEC,EAAM,IAAIC,OAAO,OAADJ,OAAQD,EAAS,YACvC,IACE,OAAOM,SAASC,OAAOC,MAAMJ,GAAK,EACpC,CAAE,MACA,OAAO,IACT,GAGeL,GAfjB,MAgBMU,EAAQC,cAERC,EAAiBjB,GAA+B,IAAhBA,EAAoBA,EAAc,GAClEkB,EAAWC,oBAEX,gBAAEC,GAAoBC,cACtBC,EAAmBC,YAAYC,MAE/B,cACJC,EAAa,kBACbC,EAAiB,aACjBC,EAAY,WACZC,EAAU,KACVC,EAAI,gBAIJC,EAAe,YACfC,EAAW,YACXC,EAAW,SAEXC,EAAQ,SACRC,EAAQ,aACRC,EAEAC,OAAO,UAAEC,EAAS,SAAEC,KAlBLC,cAmBbC,mBACF,CACE7C,UACAC,OACA6C,aAAc,CACZJ,UACEf,EAAiBoB,eAAe,QAChCpB,EAAiBqB,MAAG,eAAApC,OAAoBR,GAAIQ,OAAGU,GAC3CK,EAAiBsB,MACjB,EAINN,SAAU,IAEZO,eAAe,GAIjBC,kBAIF,OACEC,eAACC,IAAI,CACHC,cAAc,SACdC,WAAW,MACXC,MAAM,OACNC,gBAAgB,QAAOC,SAAA,CAEvBN,eAACO,IAAW,CACVC,WAAW,aACXC,WAAW,MACXC,QAAQ,YACJhC,IAAe4B,SAAA,CAEnBK,cAACC,IAAK,CAACH,WAAW,MAAMI,MAAM,QAAOP,SAClC1B,EAAakC,KAAIC,GAChBf,eAACgB,IAAE,IAAKD,EAAYE,sBAAqBX,SAAA,CAOtCxD,GACC6D,cAACO,IAAE,CACDV,WAAW,aACXW,SAAS,MACTC,YAAY,MACZC,aAAa,QAGhBN,EAAYO,QAAQR,KAAIS,GACvBZ,cAACO,IAAE,CACDV,WAAW,aACXgB,cAAc,aACdC,QAAQ,UACRZ,MAAM,WACFU,EAAOG,iBAAgBpB,SAE1BiB,EAAOI,OAAO,cAGlB5E,GAAkB4D,cAACO,IAAE,WAI5BP,cAACiB,IAAK,CAACnB,WAAW,MAAMI,MAAM,YAAalC,IAAmB2B,SAC3DxB,EAAKgC,KAAI,CAACe,EAAKC,KACdjD,EAAWgD,GAGT7B,eAACgB,IAAE,CACDe,eAAe,OACfC,OAAiB,wBAAThF,GAAkC,UAC1CiF,UAAU,SACV,0BACY,oBAATjF,GAAuC,oBAATA,IAC/B6E,EAAIK,MAAM,GAAGL,IAAIM,SAASC,KAE5B,wBACW,wBAATpF,GACA6E,EAAIK,MAAM,GAAGL,IAAIM,SAASC,KAE5BC,QAASA,KA/HNC,MAgIY,wBAATtF,IAhIHsF,EAiIUT,EAAIK,MAAM,GAAGL,IAAIM,SAASC,KAAKG,IAhIxDnF,EAAQ,gBAADI,OAAiB8E,IAiIV,EAEFE,OAAQzF,EAAiB,CAAE0F,WAAY,UAAa,MAChDZ,EAAIa,cAAapC,SAAA,CAEpBxD,GACC6D,cAACgC,IAAE,CAACxB,SAAS,OAAOC,YAAY,OAAOC,aAAa,MAAKf,SAC7C,wBAATtD,EACwC,kBAAvC6E,EAAIK,MAAM,GAAGL,IAAIM,SAASS,SACxBjC,cAACkC,IAAI,CACHC,MAAM,gBACNC,EAAE,OACFC,EAAE,OACFnC,MAAM,QACNoC,GAAIC,MAGN,gBADErB,EAAIK,MAAM,GAAGL,IAAIM,SAASS,SAE5BjC,cAACkC,IAAI,CACHE,EAAE,OACFD,MAAM,cACNE,EAAE,OACFnC,MAAM,QACNoC,GAAIE,MAEsC,KAA1CtB,EAAIK,MAAM,GAAGL,IAAIM,SAASC,KAAKgB,OACjCzC,cAACkC,IAAI,CACHE,EAAE,OACFC,EAAE,OACFF,MAAM,iBACNjC,MAAM,QACNoC,GAAII,MAGN1C,cAACkC,IAAI,CACHhC,MAAM,QACNkC,EAAE,OACFC,EAAE,OACFF,MAAM,SACNG,GAAIK,MAIRxG,IAKL+E,EAAIK,MAAMpB,KAAI,CAACyC,EAAMC,IAGlB7C,cAACgC,IAAE,CACD9B,MACW,wBAAT7D,EAC6C,YAAzC6E,EAAIK,MAAM,GAAGL,IAAIM,SAASsB,WACxB,UACyC,WAAzC5B,EAAIK,MAAM,GAAGL,IAAIM,SAASsB,WAC1B,UACA,GACF,GAQNjC,cAAc,OACdL,SACW,wBAATnE,EAAiC,OAAS,OAG5CyE,QAAQ,aACJ8B,EAAKG,eACTvC,SAAS,OAAMb,SAKH,IAAVkD,GACS,wBAATxG,IAEE,cADA6E,EAAIK,MAAM,GAAGL,IAAIM,SAASsB,WAE1B,UAC0C,YAAzC5B,EAAIK,MAAM,GAAGL,IAAIM,SAASsB,YACzB,iBACO,IAAVD,GACU,wBAATxG,GACA2G,YACE9B,EAAIK,MAAM,GAAGL,IAAIM,SAASyB,gBAEnB,IAAVJ,GACU,iBAATxG,GACA2G,YACE9B,EAAIK,MAAM,GAAGL,IAAIM,SAAS0B,YAEnB,IAAVL,GACU,wBAATxG,GACA6E,EAAIK,MAAM,GAAGL,IAAIM,SAASC,KAAK0B,WAC/BjC,EAAIK,MAAM,GAAGL,IAAIM,SAASC,KAAK0B,WACvB,GAATN,GACU,cAATxG,GACA,IAAI+G,KAEFlC,EAAIK,MAAM,GAAGL,IAAIM,SAAS6B,aAEzBC,cACAC,MAAM,EAAG,KACH,IAAVV,IACW,oBAATxG,GACU,mBAATA,IAEA,gBADF6E,EAAIK,MAAM,GAAGL,IAAIM,SAASgC,WAExBxD,cAACyD,IAAI,CACHC,GAAG,QACHxD,MAAM,QACNyD,MAAM,SACNC,aAAa,OACbnE,MAAM,QAAOE,SAGZuB,EAAIK,MAAM,GAAGL,IAAIM,SAASgC,aAGtB,IAAVX,IACW,oBAATxG,GACU,mBAATA,IAEA,gBADF6E,EAAIK,MAAM,GAAGL,IAAIM,SAASgC,WAExBxD,cAACyD,IAAI,CACHC,GAAG,QACHxD,MAAM,QACNyD,MAAM,SACNC,aAAa,OACbnE,MAAM,QAAOE,SAGZuB,EAAIK,MAAM,GAAGL,IAAIM,SAASgC,aAGtB,IAAVX,IACW,oBAATxG,GACU,mBAATA,IACF,aACS,IAAVwG,GACU,oBAATxG,IACC6E,EAAIK,MAAM,GAAGL,IAAIM,SAASqC,aACzB7D,cAACkC,IAAI,CACHhC,MAAM,QACNkC,EAAE,OACFC,EAAE,OACFC,GAAIwB,MAGN9D,cAACkC,IAAI,CACHE,EAAE,OACFC,EAAE,OACFnC,MAAM,QACNoC,GAAIyB,SAGC,oBAAT1H,GACS,mBAATA,IACU,IAAVwG,GAEE,0BADF3B,EAAIK,MAAM,GAAGL,IAAIM,SAASwC,QAExB3E,eAACoE,IAAI,CAAA9D,SAAA,CACFuB,EAAIK,MAAM,GAAGL,IAAIM,SAASnE,MAAO,IAClCgC,eAAC4E,IAAK,CACJL,aAAa,OACb9C,QAAQ,WACRf,QAAQ,UAASJ,SAAA,CAEhB,IAAI,eACQ,WAIrBiD,EAAK5B,OAAO,YAInB5E,GACC4D,cAACgC,IACC,CACAxB,SAAS,OACTM,QAAQ,UACRL,YAAY,MACZC,aAAa,MACbF,SAAmB,wBAATnE,EAAiC,OAAS,OAAOsD,SAE3DN,eAACC,IAAI,CACH4E,GAAI,CACF,kBAAmB,CACjBC,QAAS,UAGbxC,GAAE,MAAA9E,OAAQsE,GACVgD,QAAQ,OACRC,QAAQ,SACRC,WAAW,SAAQ1E,SAAA,CAET,wBAATtD,GACC2D,cAACkC,IAAI,CACHI,GAAIgC,IACJlC,EAAE,OACFlC,MAAM,QACNmC,EAAE,SAII,mBAAThG,GAA6BD,EACpB,oBAATC,GACCgD,eAACkF,IAAM,CAACZ,MAAM,SAAStB,EAAE,OAAM1C,SAAA,CAC7BK,cAACV,IAAI,CACH8C,EAAE,OACF,0CAAAvF,OAAyCqE,EAAIK,MAAM,GAAGL,IAAIM,SAASgD,WACnEnC,EAAE,OACFqB,GAAG,QACHC,MAAM,SACNS,QAAQ,SACRR,aAAa,MACbvC,OAAO,UACPK,QAAS+C,GACPjI,EACE0E,EAAIK,MAAM,GAAGL,IAAIM,SAASgD,WAG9B7E,SAEAK,cAACkC,IAAI,CAAChC,MAAM,QAAQoC,GAAIoC,QAE1B1E,cAACV,IACC,CACA,wCAAAzC,OAAuCqE,EAAIK,MAAM,GAAGL,IAAIM,SAASgD,WACjEpC,EAAE,OACFC,EAAE,OACFqB,GAAG,QACHC,MAAM,SACNS,QAAQ,SACR/C,OAAO,UACPuC,aAAa,MACblC,QAAS+C,GACPlI,EAAqB2E,EAAIK,MAAM,GAAGL,IAAIM,UACvC7B,SAEDK,cAACkC,IAAI,CAAChC,MAAM,QAAQoC,GAAIqC,WAIpB,mBAATtI,GACC2D,cAACuE,IAAM,CAACZ,MAAM,SAAStB,EAAE,OAAM1C,SAC7BK,cAACV,IACC,CACA,wCAAAzC,OAAuCqE,EAAIK,MAAM,GAAGL,IAAIM,SAASgD,WACjEpC,EAAE,OACFC,EAAE,OACFqB,GAAG,QACHC,MAAM,SACNS,QAAQ,SACR/C,OAAO,UACPuC,aAAa,MACblC,QAAS+C,GACPlI,EAAqB2E,EAAIK,MAAM,GAAGL,IAAIM,UACvC7B,SAEDK,cAACkC,IAAI,CAAChC,MAAM,OAAOoC,GAAIsC,UAInB,iBAATvI,GACC6E,EAAIK,MAAM,GAAGL,IAAIM,SAASqD,YAAcxH,GACtCgC,eAACkF,IAAM,CAACZ,MAAM,SAAStB,EAAE,OAAM1C,SAAA,CAC7BK,cAACV,IAAI,CACH8C,EAAE,OACF,0CAAAvF,OAAyCqE,EAAIK,MAAM,GAAGL,IAAIM,SAASG,IACnEU,EAAE,OACFqB,GAAG,QACHC,MAAM,SACNS,QAAQ,SACRR,aAAa,MACbvC,OAAO,UACPK,QAAS+C,GACPjI,EACE0E,EAAIK,MAAM,GAAGL,IAAIM,SAASC,MAG9B9B,SAEAK,cAACkC,IAAI,CAAChC,MAAM,QAAQoC,GAAIoC,QAE1B1E,cAACV,IACC,CACA,wCAAAzC,OAAuCqE,EAAIK,MAAM,GAAGL,IAAIM,SAASG,IACjES,EAAE,OACFC,EAAE,OACFqB,GAAG,QACHC,MAAM,SACNS,QAAQ,SACR/C,OAAO,UACPuC,aAAa,MACblC,QAAS+C,GACPlI,EAAqB2E,EAAIK,MAAM,GAAGL,IAAIM,UACvC7B,SAEDK,cAACkC,IAAI,CAAChC,MAAM,QAAQoC,GAAIqC,WAItB,wBAATtI,GACCgD,eAACkF,IAAM,CAACZ,MAAM,SAAStB,EAAE,OAAM1C,SAAA,CAC7BK,cAACV,IAAI,CACH8C,EAAE,OACFC,EAAE,OACF,6CAAAxF,OAA4CqE,EAAIK,MAAM,GAAGL,IAAIM,SAASC,MACtEiC,GAAG,QACHC,MAAM,SACNS,QAAQ,SACRR,aAAa,MACbvC,OAAO,UACPK,QAAS+C,GACPjI,EACE0E,EAAIK,MAAM,GAAGL,IAAIM,SAASC,MAM9B9B,SAEAK,cAACkC,IAAI,CAAChC,MAAM,QAAQoC,GAAIoC,QAE1B1E,cAACV,IACC,CACA,2CAAAzC,OAA0CqE,EAAIK,MAAM,GAAGL,IAAIM,SAASC,MACpEW,EAAE,OACFC,EAAE,OACFqB,GAAG,QACHC,MAAM,SACNS,QAAQ,SACR/C,OAAO,UACPuC,aAAa,MACblC,QAAS+C,GACPlI,EAAqB2E,EAAIK,MAAM,GAAGL,IAAIM,UACvC7B,SAEDK,cAACkC,IAAI,CAAChC,MAAM,QAAQoC,GAAIqC,YAInB,oBAATtI,GACS,oBAATA,IACAgD,eAACkF,IAAM,CAACZ,MAAM,SAAStB,EAAE,OAAM1C,SAAA,CAC7BK,cAACV,IAAI,CACH8C,EAAE,OACFC,EAAE,OACFqB,GAAG,QACHC,MAAM,SACNS,QAAQ,SACRR,aAAa,MACbvC,OAAO,UACP,wBACEH,EAAIK,MAAM,GAAGL,IAAIM,SAASC,KAE5BC,QAAS+C,GACPjI,EACE0E,EAAIK,MAAM,GAAGL,IAAIM,SAASC,MAG9B9B,SAEAK,cAACkC,IAAI,CAAChC,MAAM,QAAQoC,GAAIoC,QAClB,uBAe5B1E,cAACV,IAAI,CACHwF,eAAe,WACfhE,QAAQ,WACRiE,YAAY,OACZ7E,MAAM,SAAQP,SAEdN,eAACC,IAAI,CACHO,WAAW,aACXC,WAAW,MACXwB,UAAU,aACV0D,UAAU,wBACVpB,aAAa,KACbqB,UAAU,OACVF,YAAY,OACZ7E,MAAM,QACNY,QAAQ,WACRqD,QAAQ,eAAcxE,SAAA,CAEtBN,eAAA,UAAQqC,QAASA,IAAMjD,IAAgByG,UAAW9G,EAAgBuB,SAAA,CAChEN,eAAC8F,IAAG,CAAC7C,GAAG,IAAIxC,WAAW,MAAM8D,aAAa,MAAKjE,SAAA,CAC5C,IAAI,IACA,OACA,IAAI,UAEH,IACVK,cAACmF,IAAG,CAAC7C,GAAG,OAAOpC,MAAM,QAAQQ,aAAa,MAAM0E,cAAc,MAAKzF,SACjEK,cAACqF,IAAK,CACJtF,QAAQ,UACRuF,KAAK,OACL7F,MAAM,OACN8F,OAAQ,CAAErF,MAAO,QACjBsF,UAAU,QACVC,SAAS,OACTC,aAAa,cACbC,kBAAkB,QAClBC,IAAKpI,EACLnB,KAAK,SACL6C,MAAOP,EAAY,EACnBkH,QAASpB,GAAKA,EAAEqB,OAAOC,SACvBC,QAASvB,IACO,cAAVA,EAAExF,KACJwF,EAAEqB,OAAOC,QACX,EAEFE,SAAUxB,IACR,MAAMtG,EAAOsG,EAAEqB,OAAO5G,MAAQgH,OAAOzB,EAAEqB,OAAO5G,OAAS,EAAI,EAC3DX,EAASJ,EAAK,MAGb,IACPkB,eAAC8F,IAAG,CAACtE,cAAc,YAAYyB,GAAG,OAAOpC,MAAM,QAAOP,SAAA,CACpDN,eAAA,QAAAM,SAAA,CAAM,MAAIrB,EAAY6H,UAAe,OAEvC9G,eAAA,UAAQqC,QAASA,IAAMlD,IAAY0G,UAAW7G,EAAYsB,SAAA,CAAC,OAEzDN,eAAC8F,IAAG,CAAC7C,GAAG,IAAIxC,WAAW,MAAM8D,aAAa,MAAKjE,SAAA,CAC5C,IACA,YAEK,WAKpB,C,oCC/qBe,QAA0B,sC,oCCAzC,4BAoDeyG,IAxCf,SAAqBpK,GAON,IAPO,YACpBqK,EAAW,MACX5G,EAAK,YACL6G,EAAW,eACXC,EAAc,WACdC,EAAU,OACVC,GACUzK,EACV,OACEgE,cAAC0G,IAAM,CACLhD,GAAG,QACH2C,YAAaA,EACbf,KAAK,KACL7F,MAAOA,GAAS,OAChBS,MAAM,SACNmC,EAAGoE,GAAU,QACbE,OAAO,aACPC,YAAY,QACZhD,aAAa,MACbiD,OAAO,UACPhG,cAAc,aACd3B,MAAOoH,EACPL,SAAUxB,GAAK8B,EAAe9B,EAAEqB,OAAO5G,OACvCqG,OAAQ,CAAEP,UAAW,eAAgB4B,YAAa,SAAUjH,SAE3D6G,GACCA,EAAWrG,KAAI,CAAC2G,EAAMjE,IACpB7C,cAAA,UACE,wBAAAnD,OAAuBiK,EAAI,KAAAjK,OAAIgG,GAC/BkE,MAAO,CAAElG,cAAe,cAExB3B,MAAO4H,EAAKnH,SAEF,cAATmH,EAAuB,UAAYA,GAH/BjE,MAQjB,C,waCHO,IAAMmE,EAAWC,aAAsC,CAACC,EAAOtB,KACpE,IAAMuB,EAASC,YAAe,WAAYF,GAC1C,EAAqCG,YAAiBH,IAAhD,UAAE5F,EAAF,KAAagG,GAAnB,EAA4BC,E,oIAA5B,yBAEMC,EAAgBC,YAAoCF,GASpDG,EAAiBJ,EAAOK,YAAKR,EAPnB,CACd,IACA,OACA,SACA,cAGoDA,EAEtD,OACE,gBAAC,IAAOS,SAAR,GACEhC,IAAKA,EACL0B,KAAMA,GACFE,EAHN,CAIElG,UAAWuG,YAAG,kBAAmBvG,GACjCwG,MAAOJ,IANX,IAWEK,MACFf,EAASgB,YAAc,Y,kFCtCVC,MA9Bf,SAAuBjM,GAAsD,IAArD,UAAEkM,EAAS,aAAEC,EAAY,sBAAEC,GAAuBpM,EACxE,OACEqD,eAACgJ,IAAK,CAAC5I,MAAM,OAAOS,MAAM,QAAQ+E,UAAU,OAAMtF,SAAA,CAChDN,eAACC,IAAI,CAACC,cAAc,SAAQI,SAAA,CAC1BK,cAACsI,IAAc,CACbnG,MAAM,0BACN1C,MAAM,OACN8I,cAAeJ,EACfK,WAAYN,IAEdlI,cAACyD,IAAI,CAAA9D,SAAC,6BAGRN,eAACC,IAAI,CAACmJ,UAAU,MAAK9I,SAAA,CAClB,IACDK,cAAC0I,IAAU,CACTC,KAAK,4BACL7H,QAAQ,WACRZ,MAAM,QACNR,gBAAgB,QAChBI,WAAW,MACX8I,cAAeR,EAAsBzI,SACtC,gBAMT,E,6ECRO,IAAKkJ,EAAmB,SAAnBA,GAAmB,OAAnBA,IAAmB,mCAAnBA,IAAmB,mCAAnBA,CAAmB,MClB/B,MAAMC,E,MAAgBC,EAEtB,SAAUC,IAGR,MAAMC,EAAU,GAAApM,OAAMiM,EAAa,UAG7BI,EAAUC,cACVC,EAAS,CACbC,OAAQ,MACR1I,QAAS,CACP,eAAgB,mBAChB2I,cAAc,UAADzM,OAAYqM,KAG7B,IACE,MAAMK,QAAyCC,YAC7CC,IACAR,EACAG,IAEgB,OAAdG,QAAc,IAAdA,OAAc,EAAdA,EAAgBpD,QAAS,QACrBuD,YAAIC,EAAQC,qBAAqBL,UAEjCG,YACJC,EAAQE,oBAAoBhB,EAAoBiB,gBAGtD,CAAE,MAAOC,SACDL,YAAIC,EAAQE,oBAAoBhB,EAAoBiB,gBAC5D,CACF,CAEA,SAAUE,EAAcC,GACtB,MAAMC,EAAgB,GAAArN,OAAMiM,EAAa,UAAAjM,OAASoN,EAAOE,QAAQxI,IAG3DuH,EAAUC,cACVC,EAAS,CACbC,OAAQ,MACR1I,QAAS,CACP,eAAgB,mBAChB2I,cAAc,UAADzM,OAAYqM,IAE3BkB,KAAMC,KAAKC,UAAUL,EAAOE,QAAQjO,OAGtC,IACE,MAAMqO,QAAiBf,YAAKC,IAASS,EAAkBd,GAGlB,IAAjCoB,OAAOC,KAAKF,GAAUpE,aAClBuD,YAAIC,EAAQe,uBAAuBH,UAInCb,YAAIC,EAAQgB,sBAAsB,cAI5C,CAAE,MAAOZ,SACDL,YAAIC,EAAQgB,sBAAsB,cAG1C,CACF,CAEA,SAAUC,EAAuBX,GAG/B,MAAMY,EAAgB,GAAAhO,OAAMiM,EAAa,UAAAjM,OAASoN,EAAOE,SAEnDjB,EAAUC,cACVC,EAAS,CACbC,OAAQ,SACR1I,QAAS,CACP,eAAgB,mBAChB2I,cAAc,UAADzM,OAAYqM,KAG7B,IACE,MAAM4B,QAAqBtB,YAAKC,IAASoB,EAAkBzB,GAGlB,IAArCoB,OAAOC,KAAKK,GAAc3E,aACtBuD,YAAIC,EAAQoB,uBAAuBD,UAInCpB,YAAIC,EAAQqB,sBAAsB,cAI5C,CAAE,MAAOjB,SACDL,YAAIC,EAAQqB,sBAAsB,cAG1C,CACF,CAEA,SAAUC,EAAoBhB,GAO5B,MAAMiB,EAAgB,GAAArO,OAAMiM,EAAa,WAGnCI,EAAUC,cACVC,EAAS,CACbC,OAAQ,OACR1I,QAAS,CACP,eAAgB,mBAChB2I,cAAc,UAADzM,OAAYqM,IAE3BkB,KAAMC,KAAKC,UAAU,CAAEpC,UAAW+B,EAAOE,WAG3C,IACE,MAAMI,QAAiBY,MAAMD,EAAkB9B,GACzC0B,QAAqBP,EAASa,OAEhCN,EAAa9L,eAAe,WACD,qBAAzB8L,EAAaO,cACT3B,YAAIC,EAAQ2B,oBAAoBR,UAEhCpB,YAAIC,EAAQ4B,mBAAmB,sBAGjC7B,YAAIC,EAAQ4B,mBAAmB,WAEzC,CAAE,MAAOxB,SACDL,YAAIC,EAAQ4B,mBAAmB,WACvC,CACF,CAEO,SAAUC,UACTC,YAAW9B,EAAQ+B,mBAAmBrP,KAAM2M,SAC5C2C,YAAUhC,EAAQiC,iBAAiBvP,KAAM2N,SACzC2B,YAAUhC,EAAQkC,iBAAiBxP,KAAMuO,SACzCa,YAAW9B,EAAQmC,cAAczP,KAAM4O,EAC/C,CC/IO,MAAMlM,EAAgC,CAC3CgN,SAAS,EACThC,MAAO,KACPR,eAAgB,GAChBqC,iBAAkB,CAAC,EACnBC,iBAAkB,CAAC,EACnBG,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAiB,KACjBC,iBAAkB,KAClBC,aAAc,GACdC,YAAY,EACZC,mBAAoB,GACpBC,gBAAiB,IAGbhJ,EAAQiJ,YAAY,CACxB7D,KAAM,aACN5J,eACA0N,SAAU,CACRf,mBAAoBhN,IAClBA,EAAMqN,SAAU,CAAI,EAEtBnC,qBAAsBA,CAAClL,EAAOuL,KAC5BvL,EAAMqN,SAAU,EAChBrN,EAAMqL,MAAQ,KACdrL,EAAM6K,eAAiBU,EAAOE,OAAO,EAEvCN,oBAAqBA,CAACnL,EAAOuL,KAC3BvL,EAAMqN,SAAU,EAChBrN,EAAMqL,MAAQE,EAAOE,OAAO,EAG9ByB,iBAAkBA,CAAClN,EAAOuL,KACxBvL,EAAMuN,gBAAiB,CAAI,EAE7BvB,uBAAwBA,CAAChM,EAAOuL,KAC9BvL,EAAMkN,iBAAmB3B,EAAOE,QAChCuC,QAAQC,IAAI1C,EAAOE,SACnBzL,EAAMuN,gBAAiB,CAAK,EAG9BtB,sBAAuBA,CAACjM,EAAOuL,KAC7BvL,EAAMuN,gBAAiB,EACvBvN,EAAMwN,gBAAkBjC,EAAOE,OAAO,EAGxC0B,iBAAkBA,CAACnN,EAAOuL,KACxBvL,EAAMsN,gBAAiB,CAAI,EAG7BjB,uBAAwBA,CAACrM,EAAOuL,KAC9BvL,EAAMmN,iBAAmB5B,EAAOE,QAEhCzL,EAAMsN,gBAAiB,CAAK,EAG9BhB,sBAAuBA,CAACtM,EAAOuL,KAC7BvL,EAAMsN,gBAAiB,EACvBtN,EAAMyN,iBAAmBlC,EAAOE,OAAO,EAEzCyC,mBAAoBA,CAAClO,EAAOuL,KAAR2C,EAGpBd,cAAepN,IACbA,EAAM2N,YAAa,CAAI,EAEzBf,oBAAqBA,CAAC5M,EAAOuL,KAC3BvL,EAAM2N,YAAa,EACnB3N,EAAM4N,mBAAqBrC,EAAOE,OAAO,EAE3CoB,mBAAoBA,CAAC7M,EAAOuL,KAC1BvL,EAAM2N,YAAa,EACnB3N,EAAM6N,gBAAkBtC,EAAOE,OAAO,MAK7BR,QAASkD,GAAsBtJ,EAEjCuJ,EAAqBA,KAChCC,YAAiB,CAAE9N,IAAKsE,EAAMoF,KAAMqE,QAASzJ,EAAMyJ,UACnDC,YAAc,CAAEhO,IAAKsE,EAAMoF,KAAMuE,KAAM1B,IAChC,CAAE7B,QAASpG,EAAMoG,UCtFpBwD,EAAezO,GAAqBA,EAAM0O,YAAcrO,EAEjDsO,EAAuBC,YAClC,CAACH,IACDzO,GAASA,EAAM6K,iBAGJgE,EAAgBD,YAC3B,CAACH,IACDzO,GAASA,EAAMqN,UAEJyB,EAA4BF,YACvC,CAACH,IACDzO,GAASA,EAAMqL,QAGJ0D,EAAoBH,YAC/B,CAACH,IACDzO,GAASA,EAAMkN,mBAEJ8B,GAAoBJ,YAC/B,CAACH,IACDzO,GAASA,EAAMmN,mBAEJ8B,GAAyBL,YACpC,CAACH,IACDzO,GAASA,EAAMyN,mBASJyB,IANyBN,YACpC,CAACH,IACDzO,GAASA,EAAM0N,eAGUkB,YAAe,CAACH,IAAczO,GAASA,EAAMqL,QACnCuD,YACnC,CAACH,IACDzO,GAASA,EAAMwN,mBAGJ2B,GAAoBP,YAC/B,CAACH,IACDzO,GAASA,EAAM4N,qBAEJwB,GAAsBR,YACjC,CAACH,IACDzO,GAASA,EAAM2N,aAEJ0B,GAAoBT,YAC/B,CAACH,IACDzO,GAASA,EAAM6N,kBAGJyB,GAA0BV,YACrC,CAACH,IACDzO,GAASA,EAAMsN,iBAEJiC,GAA0BX,YACrC,CAACH,IACDzO,GAASA,EAAMuN,iBCkHFiC,OAnKf,SAAsBlS,GAAyB,IAAxB,SAAEmS,EAAQ,QAAEC,GAASpS,EAK1C,MAAOqS,EAAYC,GAAiBC,mBAASJ,EAAS3K,WAAa,KAC5DgL,EAAUC,GAAeF,mBAASJ,EAAS3J,WAAa,KACxD0D,EAAWC,GAAgBoG,mBAASJ,EAAS9Q,OAAS,KACtDqR,EAAcC,GAAmBJ,mBAASJ,EAASS,UAAY,KAC/DC,EAAQC,GAAaP,mBAASJ,EAASY,WAAa,KACrD,QAAEpF,GAAYmD,IACdkC,EAAWnQ,cACXoQ,EAAkBpR,YAAY4P,GAC9ByB,EAAmBrR,YAAY+P,IAE/BuB,EAAQC,cAmEd,OA/DAC,qBAAU,KACR,IACuC,IAAjC7E,OAAOC,KAAKwE,KAEZA,EAAgBjQ,eAAe,YACH,iBAA5BiQ,EAAgB5D,UAGhB8D,EAAM,CACJhN,MAAO8M,EAAgB5D,QACvBrH,OAAQ,UACRsL,YAAY,EACZC,SAAU,iBAGZP,EAASrF,EAAQe,uBAAuB,CAAC,IACzC+D,EAAY,IACZtG,EAAa,IACbwG,EAAgB,IAChBL,EAAc,KAGS,eAArBY,IAEFC,EAAM,CACJhN,MAAO,uBACP6B,OAAQ,QACRsL,YAAY,EACZC,SAAU,iBAEZP,EAASrF,EAAQgB,sBAAsB,MAG7C,CAAE,MAAOlG,GACP,IAED,CAACwK,EAAiBC,IA4BnB7P,eAACgJ,IAAK,CAACmH,QAAQ,OAAO1O,QAAQ,YAAYhB,WAAW,MAAML,MAAM,OAAME,SAAA,CACrEN,eAACkF,IAAM,CAAA5E,SAAA,CACLK,cAACyD,IAAI,CAAChE,MAAM,QAAOE,SAAC,SAEpBK,cAACsI,IAAc,CACbE,WAAYgG,EACZjG,cAAekG,EACfhP,MAAM,QACN0C,MAAM,kBACNsN,YAAY,OAIhBpQ,eAACkF,IAAM,CAAA5E,SAAA,CACLK,cAACyD,IAAI,CAAChE,MAAM,QAAOE,SAAC,SAEpBK,cAACoG,IAAY,CACXG,eAAgB+H,EAChBhI,YAAa+H,EACb7H,WAtFe,CAAC,cAAe,cAuF/B/G,MAAM,aAGVJ,eAACkF,IAAM,CAAA5E,SAAA,CACLK,cAACyD,IAAI,CAAChE,MAAM,QAAOE,SAAC,aAEpBK,cAACsI,IAAc,CACbpD,UAAU,EACVqD,cAAeJ,EACfK,WAAYN,EACZzI,MAAM,QACN0C,MAAM,mBAGV9C,eAACkF,IAAM,CAAA5E,SAAA,CACLK,cAACyD,IAAI,CAAChE,MAAM,QAAOE,SAAC,cAEpBK,cAACsI,IAAc,CACbjM,KAAK,WACLoT,YAAY,EACZlH,cAAeoG,EACfnG,WAAW,WACX/I,MAAM,QACN0C,MAAM,sBAIV9C,eAACC,IAAI,CACHoQ,UAAU,YACVlQ,WAAW,MACXoH,YAAY,SACZxC,QAAQ,MACR3E,MAAM,OAAME,SAAA,CAEZK,cAAC0I,IAAU,CACTC,KAAK,0BACL/B,YAAY,SACZ1G,MAAM,QACNT,MAAM,OACNmJ,cAAewF,EACftO,WAAW,MAAKH,SACjB,WAGDK,cAAC0I,IAAU,CACThJ,gBAAgB,QAChBiJ,KAAK,0BACL/B,YAAY,QACZ1G,MAAM,QACNT,MAAM,OACNK,WAAW,MACX8I,cAjGkB+G,KACR,IAAZnB,GAAgC,IAAdH,GAAiC,IAAbnG,EACxCiH,EAAM,CACJhN,MAAO,uBACP6B,OAAQ,QACRsL,YAAY,EACZC,SAAU,kBAGZP,EACErF,EAAQiC,iBAAiB,CACvB1P,KAAM,CACJsS,SAAUA,EACVoB,SAAUvB,EACVnG,UAAWA,EAEX2H,SAAUhB,GAEZlN,GAAI6M,KAGRJ,IACF,EA2EuCzO,SAClC,gBAMT,E,UC3JA,MAAM1D,GAAU,CACd,CACE6T,OAAQ,OACRC,SAAU,aAGZ,CACED,OAAQ,OACRC,SAAU,aAGZ,CACED,OAAQ,QACRC,SAAU,SAGZ,CACED,OAAQ,WACRC,SAAU,YAEZ,CACED,OAAQ,MACRC,SAAU,iBAwGCC,OApGf,SAAwBhU,GAA8B,IAA7B,uBAAEQ,GAAwBR,EACjD,MAAM,QAAE2N,GAAYmD,KACd,OAAEmD,EAAM,OAAEC,EAAM,QAAE9B,GAAY+B,eAC7BC,EAAUC,GAAe9B,mBAAS,CAAC,GAGpCY,EAAQC,cACRJ,EAAWnQ,cAEXyR,EAAazS,YAAYwP,GACzBkD,EAAY1S,YAAY0P,GACxBiD,EAAiB3S,YAAY2P,GAE7BiD,EAAc5S,YAAY6P,IAC1BgD,EAAmB7S,YAAY8P,IAsCrC,OAnCA0B,qBAAU,KACR,IACMoB,EAAYzR,eAAe,aAC7BmQ,EAAM,CACJhN,MAAOsO,EAAYpF,QACnBrH,OAAQ,UACRsL,YAAY,EACZC,SAAU,iBAEZP,EAASrF,EAAQoB,uBAAuB,CAAC,KAElB,eAArB2F,IACFvB,EAAM,CACJhN,MAAO,uBACP6B,OAAQ,QACRsL,YAAY,EACZC,SAAU,iBAEZP,EAASrF,EAAQqB,sBAAsB,KAE3C,CAAE,MAAOvG,GACP,IAED,CAACgM,EAAaC,IAafrR,eAACC,IAAI,CAACG,MAAM,OAAOwF,UAAU,OAAOnE,QAAQ,OAAMnB,SAAA,CAC/C4Q,EACCvQ,cAAC2Q,IAAgB,IAEjB3Q,cAAA4Q,WAAA,CAAAjR,SACsB,IAAnB6Q,EACCxQ,cAAC6Q,KAAS,CAACpK,OAAO,OAAO4E,QAAQ,yBAEjCrL,cAAA4Q,WAAA,CAAAjR,SACyB,IAAtB2Q,EAAWnK,OACVnG,cAACjE,IAAc,CACbI,SACE6D,cAACkC,IAAI,CACHE,EAAE,OACFC,EAAE,OACFnC,MAAM,QACNoC,GAAIwO,MAGRzU,KAAK,kBACLE,qBA/BawU,IAC3BV,EAAYU,GACZb,GAAQ,EA8BM1T,uBAAwBA,EACxBJ,gBAAgB,EAChBF,KAAMoU,EACNrU,QAASA,KAGX+D,cAAC6Q,KAAS,CAACpK,OAAO,OAAO4E,QAAQ,sBAM3CrL,cAACgR,IAAc,CACb7O,MAAM,YACN8O,eAAgB7C,EAChB3O,MAAM,QACNyR,QAAQ,EACRjB,OAAQA,EACR7B,QAASA,EAAQzO,SAEjBK,cAACkO,GAAa,CAACE,QAASA,EAASD,SAAUiC,QAInD,EC9GO,SAASe,KAEd,MAAM,QAAExH,GAAYmD,IACdqC,EAAQC,cACRJ,EAAWnQ,cACXuS,EAAcvT,YAAY4P,GAC1BgD,EAAc5S,YAAY6P,IAC1B2D,EAAcxT,YAAYgQ,IAC1ByD,EAAkBzT,YAAYkQ,KAC7B7F,EAAWC,GAAgBoG,mBAAS,KACpCgD,EAAiBC,GAAmBjD,mBAAS,KAC9C,OAAE0B,EAAM,OAAEC,EAAM,QAAE9B,GAAY+B,cAC9BsB,EAAoB5T,YAAYiQ,IAChC4D,EAAoB7T,YAAYmQ,IAChC2D,EAAoB9T,YAAYoQ,IACtCoB,qBAAU,KACRL,EAASrF,EAAQ+B,qBAAqB,GACrC,CAAC0F,EAAaX,EAAaY,IAE9BhC,qBAAU,KACJgC,EAAYrS,eAAe,aAC7BgQ,EAASrF,EAAQ2B,oBAAoB,CAAC,IACtC6D,EAAM,CACJhN,MAAOkP,EAAYhG,QACnBrH,OAAQ,UACRsL,YAAY,EACZC,SAAU,iBAEZpH,EAAa,KAES,YAApBmJ,IACFnC,EAAM,CACJhN,MAAO,uBACP6B,OAAQ,QACRsL,YAAY,EACZC,SAAU,iBAGZP,EAASrF,EAAQ4B,mBAAmB,MAGd,gBAApB+F,IACFnC,EAAM,CACJhN,MAAO,sBACP6B,OAAQ,QACRsL,YAAY,EACZC,SAAU,iBAEZP,EAASrF,EAAQ4B,mBAAmB,KACtC,GACC,CAAC8F,EAAaC,IA4BjB,OACEjS,eAACC,IAAI,CAACC,cAAc,SAASgQ,SAAS,WAAU5P,SAAA,EAC5C8R,GAAqBC,GAAqBC,IAC1C3R,cAAC2Q,IAAgB,CACflK,OAAO,QAEPmL,WAAW,EACXrC,SAAS,aAIbvP,cAAC6R,IAAS,CAAAlS,SACRN,eAACC,IAAI,CACHO,WAAW,aACXC,WAAW,MACX2F,SAAS,OACTlG,cAAc,SACduB,QAAQ,OACRrB,MAAM,OAAME,SAAA,CAEZN,eAACC,IAAI,CAACwF,eAAe,gBAAenF,SAAA,CAClCN,eAACkF,IAAM,CAAA5E,SAAA,CACLK,cAACyD,IAAI,CAAA9D,SAAC,SACNK,cAACoG,IAAY,CAAC3G,MAAM,QAAQ4G,YAAY,eAE1ChH,eAACkF,IAAM,CAAA5E,SAAA,CAGLK,cAAC8R,IAAgB,CACfrL,OAAO,QACPhH,MAAM,QACN0C,MAAM,WAKNxC,SAEAN,eAACgJ,IAAK,CAAC5I,MAAM,OAAOS,MAAM,QAAQ+E,UAAU,MAAKtF,SAAA,CAC/CN,eAACkF,IAAM,CAAA5E,SAAA,CACLK,cAACyD,IAAI,CAAA9D,SAAC,cACNK,cAACsI,IAAc,CAAC7I,MAAM,aAExBO,cAACyD,IAAI,CAAA9D,SAAC,gBACNK,cAACgH,EAAQ,CACPX,YAAY,mBACZ0L,UAAU,QACVxM,OAAQ,CAAEP,UAAW,kBAEvB3F,eAACC,IAAI,CAACmJ,UAAU,MAAK9I,SAAA,CAClB,IACDK,cAAC0I,IAAU,CACT5H,QAAQ,WACRZ,MAAM,QACNR,gBAAgB,QAChBI,WAAW,MAAKH,SACjB,gBAMPK,cAAC8R,IAAgB,CACfrL,OAAO,QACPhH,MAAM,QACN0C,MAAM,WACN6P,OACEhS,cAAC0I,IAAU,CACTC,KAAK,kBACLsJ,OAAO,EACPnR,QAAQ,WAAUnB,SACnB,aAGFA,SAEDK,cAACiI,EAAc,CACbE,aAAcA,EACdD,UAAWA,EACXE,sBAzGcA,KACV,KAAdF,EACFiH,EAAM,CACJhN,MAAO,sBACP6B,OAAQ,QACRsL,YAAY,EACZC,SAAU,iBAGZP,EAASrF,EAAQmC,cAAc5D,GACjC,YA4HMlI,cAACgQ,GAAe,CACdxT,uBA1HqB0V,UAG7BV,EAAgB7P,GAChBuO,GAAQ,IAwHFlQ,cAACgR,IAAc,CACb7O,MAAM,cACN8O,eAAgB7C,EAChB3O,MAAM,QAENwQ,OAAQA,EACR7B,QAASA,EACT+D,aAAa,SACbC,aAAa,SACbnB,eAAgB7C,EAChBiE,eA/HsBC,KAC9BtD,EAASrF,EAAQkC,iBAAiB0F,IAElCnD,GAAS,EA4HuCzO,SAExCK,cAACV,IAAI,CACH8E,QAAQ,SACR3E,MAAM,OACNkE,MAAM,SACN4O,aAAa,SAAQ5S,SAErBK,cAACyD,IAAI,CAAC+B,UAAU,SAAQ7F,SAAC,gDAOvC,CAEewR,Y","file":"static/js/21.4bdad908.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useEffect, useRef } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Table as CustomTable,\n  Thead,\n  Tr,\n  Img,\n  Text,\n  Box,\n  // Container,\n  Td,\n  Th,\n  Tbody,\n  Input,\n  Flex,\n  //  IconButton,\n  Icon,\n  Center,\n  HStack,\n  Badge,\n} from '@chakra-ui/react';\n\nimport { useTable, usePagination } from 'react-table';\n\nimport automationIcon from '../../../../../styles/Assets/Automation.svg';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { GrShieldSecurity } from 'react-icons/gr';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport {\n  MdEdit,\n  MdOutlineAnalytics,\n  MdOutlineDisabledByDefault,\n  MdOutlineMonitor,\n  MdOutlineTouchApp,\n} from 'react-icons/md';\n\nimport { useTestAnalyticsSlice } from '../../testAnalyticsSlice';\nimport { AiOutlineCheckSquare, AiOutlineSetting } from 'react-icons/ai';\nimport { dateTimeConverter } from 'utils/gernricfunction';\nimport UserPool from 'Authentication/configuration/UserPool';\nimport { FiTv } from 'react-icons/fi';\nimport { RiDeviceLine } from 'react-icons/ri';\n\nimport { HomePageActions, useHomePageSlice } from 'app/pages/HomePage/slice';\nimport { selectPageIndexInisialValue } from 'app/pages/HomePage/slice/selectors';\nimport { getEmailId } from 'Authentication/configuration/GetEmail';\nimport { BsCheckCircle } from 'react-icons/bs';\n\nconst AutomationIcon = () => {\n  return (\n    <Flex as=\"span\" padding=\"0px\">\n      {' '}\n      <Img\n        width=\"22px\"\n        marginLeft=\"5px\"\n        height=\"22px\"\n        src={automationIcon}\n        alt=\"debug\"\n      ></Img>\n    </Flex>\n  );\n};\n//\n\n// const actionBoxShow = e => {\n//   if (document.getElementById(`box${e}`)) {\n//     document.getElementById(`box${e}`).style.display = 'block';\n//   }\n// };\n// const actionBoxHide = e => {\n//   document.getElementById(`box${e}`).style.display = 'none';\n// };\n\nconst getTestIdHandler = id => {\n  // console.log(id)\n};\n\n// const getPageIndexForTable = (type, getTabIndex) => {\n//   if (type) {\n//     const getTabIndexKey = getTabIndex || getTabIndex === 0 ? getTabIndex : '';\n//     if (\n//       parseInt(localStorage.getItem(`pageIndexKey${type}${getTabIndexKey}`))\n//     ) {\n//       return parseInt(\n//         localStorage.getItem(`pageIndexKey${type}${getTabIndexKey}`),\n//       );\n//     } else {\n//       return 0;\n//     }\n//   }\n//   return 0;\n// };\n\nexport function PaginatedTable({\n  columns,\n  data,\n  leftIcon,\n  rightHoverIcon,\n  type,\n  getTabIndex,\n  editUserClickHandler,\n  deleteUserClickHandler,\n}) {\n  let history = useNavigate();\n  const getRowId = id => {\n    history(`/testsummary/${id}`);\n    //  console.log(id)\n  };\n\n  const GetLastAuthUser = () => {\n    const last_auth = `CognitoIdentityServiceProvider.${UserPool.getClientId()}.LastAuthUser`;\n    const reg = new RegExp(`(?<=${last_auth}=)[^;]*`);\n    try {\n      return document.cookie.match(reg)[0];\n    } catch {\n      return null;\n    }\n  };\n\n  const username = GetLastAuthUser();\n  const email = getEmailId();\n\n  const getTabIndexKey = getTabIndex || getTabIndex === 0 ? getTabIndex : '';\n  const inputRef = useRef();\n  //const { actions } = useManageUserSlice();\n  const { homePageActions } = useHomePageSlice();\n  const getPageIndexinit = useSelector(selectPageIndexInisialValue);\n  const dispatch = useDispatch();\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page, // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    // pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    //setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        pageIndex:\n          getPageIndexinit.hasOwnProperty('key') &&\n          getPageIndexinit.key === `pageIndexKey${type}${getTabIndexKey}`\n            ? getPageIndexinit.value\n            : 0,\n        //getPageIndexForTable(type, getTabIndex),\n        //getPageIndexForTable(type)\n        // parseInt(localStorage.getItem(`pageIndexKey${type}${getTabIndexKey}`)) === 'NAN' ?  0 :  parseInt(localStorage.getItem(`pageIndexKey${type}${getTabIndexKey}`)),\n        pageSize: 20,\n      },\n      autoResetPage: true,\n      // manualPagination: false,\n      //autoResetPageIndex : false,\n    },\n    usePagination,\n  );\n\n  // Render the UI for your table\n  return (\n    <Flex\n      flexDirection=\"column\"\n      paddingTop=\"5px\"\n      width=\"100%\"\n      backgroundColor=\"white\"\n    >\n      <CustomTable\n        fontFamily=\"Montserrat\"\n        fontWeight=\"500\"\n        variant=\"simple\"\n        {...getTableProps()}\n      >\n        <Thead fontWeight=\"500\" color=\"grey1\">\n          {headerGroups.map(headerGroup => (\n            <Tr {...headerGroup.getHeaderGroupProps()}>\n              {/* <Th\n                fontFamily=\"Montserrat\"\n                minWidth=\"0px\"\n                paddingLeft=\"0px\"\n                paddingRight=\"0px\"\n              ></Th> */}\n              {leftIcon && (\n                <Th\n                  fontFamily=\"Montserrat\"\n                  minWidth=\"0px\"\n                  paddingLeft=\"0px\"\n                  paddingRight=\"0px\"\n                ></Th>\n              )}\n              {headerGroup.headers.map(column => (\n                <Th\n                  fontFamily=\"Montserrat\"\n                  textTransform=\"capitalize\"\n                  padding=\"2px 5px\"\n                  color=\"grey1\"\n                  {...column.getHeaderProps()}\n                >\n                  {column.render('Header')}\n                </Th>\n              ))}\n              {rightHoverIcon && <Th></Th>}\n            </Tr>\n          ))}\n        </Thead>\n        <Tbody fontWeight=\"500\" color=\"grey13\" {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row);\n\n            return (\n              <Tr\n                textDecoration=\"none\"\n                cursor={type === 'testAnalyticsTable ' && 'pointer'}\n                className=\"testTr\"\n                data-scriptappbuild-id={\n                  (type === 'deleteappbuilds' || type === 'deletetestsuite') &&\n                  row.cells[0].row.original.uuid\n                }\n                data-manageproject-id={\n                  type === 'manangeProjectTable' &&\n                  row.cells[0].row.original.uuid\n                }\n                onClick={() => {\n                  if (type === 'testAnalyticsTable ') {\n                    getRowId(row.cells[0].row.original.uuid._id);\n                  }\n                }}\n                _hover={rightHoverIcon ? { background: 'grey14' } : ''}\n                {...row.getRowProps()}\n              >\n                {leftIcon && (\n                  <Td minWidth=\"10px\" paddingLeft=\"10px\" paddingRight=\"5px\">\n                    {type === 'testAnalyticsTable ' ? (\n                      row.cells[0].row.original.testType === 'lr-automation' ? (\n                        <Icon\n                          title=\"LR Automation\"\n                          w=\"22px\"\n                          h=\"22px\"\n                          color=\"grey1\"\n                          as={MdOutlineMonitor}\n                        ></Icon>\n                      ) : row.cells[0].row.original.testType ===\n                        'lr-interact' ? (\n                        <Icon\n                          w=\"22px\"\n                          title=\"LR Interact\"\n                          h=\"22px\"\n                          color=\"grey1\"\n                          as={RiDeviceLine}\n                        ></Icon>\n                      ) : row.cells[0].row.original.uuid.testId !== '' ? (\n                        <Icon\n                          w=\"22px\"\n                          h=\"22px\"\n                          title=\"App Automation\"\n                          color=\"grey1\"\n                          as={AiOutlineSetting}\n                        ></Icon>\n                      ) : (\n                        <Icon\n                          color=\"grey1\"\n                          w=\"22px\"\n                          h=\"22px\"\n                          title=\"Manual\"\n                          as={MdOutlineTouchApp}\n                        ></Icon>\n                      )\n                    ) : (\n                      leftIcon\n                    )}\n                  </Td>\n                )}\n\n                {row.cells.map((cell, index) => {\n                  // {console.log(cell.render('Cell').props.data[i].id)}\n                  return (\n                    <Td\n                      color={\n                        type === 'testAnalyticsTable '\n                          ? row.cells[0].row.original.testStatus === 'Started'\n                            ? '#0d5bb5'\n                            : row.cells[0].row.original.testStatus === 'Failed'\n                            ? '#EF4E90'\n                            : ''\n                          : ''\n                      }\n                      // color={\n                      //   type === 'testAnalyticsTable ' &&\n                      //   row.cells[0].row.original.testStatus === 'Completed'\n                      //     ? ' '\n                      //     : '#0d5bb5'\n                      // }\n                      textTransform=\"none\"\n                      minWidth={\n                        type === 'testAnalyticsTable ' ? '60px' : '70px'\n                      }\n                      // minWidth={index === 5 ? '100px' : '70px'}\n                      padding=\"5px 4px\"\n                      {...cell.getCellProps()}\n                      minWidth=\"75px\"\n                    >\n                      {/* get the data of particular cell */}\n                      {/* {console.log(row.cells[0].row.original.user_role)} */}\n\n                      {(index === 0 &&\n                        type === 'testAnalyticsTable ' &&\n                        ((row.cells[0].row.original.testStatus ===\n                          'Completed' &&\n                          'Success') ||\n                          (row.cells[0].row.original.testStatus === 'Aborted' &&\n                            'User Aborted'))) ||\n                        (index === 1 &&\n                          type === 'testAnalyticsTable ' &&\n                          dateTimeConverter(\n                            row.cells[0].row.original.testStartTime,\n                          )) ||\n                        (index === 2 &&\n                          type === 'journeyTable' &&\n                          dateTimeConverter(\n                            row.cells[0].row.original.updatedAt,\n                          )) ||\n                        (index === 2 &&\n                          type === 'testAnalyticsTable ' &&\n                          row.cells[0].row.original.uuid.sessionId &&\n                          row.cells[0].row.original.uuid.sessionId) ||\n                        (index == 1 &&\n                          type === 'appBuilds' &&\n                          new Date(\n                            //cell.render('Cell').props.data[i].createdDate,\n                            row.cells[0].row.original.createdDate,\n                          )\n                            .toGMTString()\n                            .slice(5, 16)) ||\n                        (index === 1 &&\n                          (type === 'manageUserTable' ||\n                            type === 'manageKeyTable') &&\n                          row.cells[0].row.original.user_role ===\n                            'SystemAdmin' && (\n                            <Text\n                              bg=\"blue1\"\n                              color=\"white\"\n                              align=\"center\"\n                              borderRadius=\"20px\"\n                              width=\"120px\"\n                            >\n                              {/* {cell.render('Cell').props.data[i].role} */}\n                              {row.cells[0].row.original.user_role}\n                            </Text>\n                          )) ||\n                        (index === 1 &&\n                          (type === 'manageUserTable' ||\n                            type === 'manageKeyTable') &&\n                          row.cells[0].row.original.user_role ===\n                            'TenantAdmin' && (\n                            <Text\n                              bg=\"blue1\"\n                              color=\"white\"\n                              align=\"center\"\n                              borderRadius=\"20px\"\n                              width=\"120px\"\n                            >\n                              {/* {cell.render('Cell').props.data[i].role} */}\n                              {row.cells[0].row.original.user_role}\n                            </Text>\n                          )) ||\n                        (index === 3 &&\n                          (type === 'manageUserTable' ||\n                            type === 'manageKeyTable') &&\n                          '*********') ||\n                        (index === 4 &&\n                          type === 'manageUserTable' &&\n                          (row.cells[0].row.original.isMFAEnabled ? (\n                            <Icon\n                              color=\"grey1\"\n                              w=\"25px\"\n                              h=\"25px\"\n                              as={AiOutlineCheckSquare}\n                            ></Icon>\n                          ) : (\n                            <Icon\n                              w=\"25px\"\n                              h=\"25px\"\n                              color=\"grey1\"\n                              as={MdOutlineDisabledByDefault}\n                            ></Icon>\n                          ))) ||\n                        ((type === 'manageUserTable' ||\n                          type === 'manageKeyTable') &&\n                          index === 2 &&\n                          row.cells[0].row.original.status ===\n                            'FORCE_CHANGE_PASSWORD' && (\n                            <Text>\n                              {row.cells[0].row.original.email}{' '}\n                              <Badge\n                                borderRadius=\"20px\"\n                                padding=\"0px 10px\"\n                                variant=\"outline\"\n                              >\n                                {' '}\n                                not verified{' '}\n                              </Badge>\n                            </Text>\n                          )) ||\n                        cell.render('Cell')}\n                    </Td>\n                  );\n                })}\n                {rightHoverIcon && (\n                  <Td\n                    // minWidth=\"10px\"\n                    minWidth=\"95px\"\n                    padding=\"0px 5px\"\n                    paddingLeft=\"4px\"\n                    paddingRight=\"0px\"\n                    minWidth={type === 'testAnalyticsTable ' ? '50px' : '95px'}\n                  >\n                    <Flex\n                      sx={{\n                        '.testTr:hover &': {\n                          display: 'block',\n                        },\n                      }}\n                      id={`box${i}`}\n                      display=\"none\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                    >\n                      {type === 'testAnalyticsTable ' && (\n                        <Icon\n                          as={MdOutlineAnalytics}\n                          w=\"25px\"\n                          color=\"grey1\"\n                          h=\"25px\"\n                        ></Icon>\n                      )}\n\n                      {type === 'appbuildstable' && rightHoverIcon}\n                      {type === 'manageUserTable' && (\n                        <HStack align=\"center\" h=\"30px\">\n                          <Flex\n                            w=\"30px\"\n                            data-icon-id={`delete-user-icon-button-${row.cells[0].row.original.user_name}`}\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            borderRadius=\"5px\"\n                            cursor=\"pointer\"\n                            onClick={e =>\n                              deleteUserClickHandler(\n                                row.cells[0].row.original.user_name,\n                              )\n                            }\n                            //   onClick={e => dispatch(actions.deleteUserDetail(row.cells[0].row.original.id)) }\n                          >\n                            <Icon color=\"grey1\" as={FaTrashAlt}></Icon>\n                          </Flex>\n                          <Flex\n                            //id = {row.cells[0].row.original.id}\n                            data-icon-id={`edit-user-icon-button-${row.cells[0].row.original.user_name}`}\n                            w=\"30px\"\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            cursor=\"pointer\"\n                            borderRadius=\"5px\"\n                            onClick={e =>\n                              editUserClickHandler(row.cells[0].row.original)\n                            }\n                          >\n                            <Icon color=\"grey1\" as={MdEdit}></Icon>\n                          </Flex>\n                        </HStack>\n                      )}\n                      {type === 'manageKeyTable' && (\n                        <HStack align=\"center\" h=\"30px\">\n                          <Flex\n                            //id = {row.cells[0].row.original.id}\n                            data-icon-id={`edit-user-icon-button-${row.cells[0].row.original.user_name}`}\n                            w=\"30px\"\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            cursor=\"pointer\"\n                            borderRadius=\"5px\"\n                            onClick={e =>\n                              editUserClickHandler(row.cells[0].row.original)\n                            }\n                          >\n                            <Icon color=\"grey\" as={GrShieldSecurity}></Icon>\n                          </Flex>\n                        </HStack>\n                      )}\n                      {type === 'journeyTable' &&\n                        row.cells[0].row.original.createdBy === email && (\n                          <HStack align=\"center\" h=\"30px\">\n                            <Flex\n                              w=\"30px\"\n                              data-icon-id={`delete-user-icon-button-${row.cells[0].row.original.id}`}\n                              h=\"30px\"\n                              bg=\"white\"\n                              align=\"center\"\n                              justify=\"center\"\n                              borderRadius=\"5px\"\n                              cursor=\"pointer\"\n                              onClick={e =>\n                                deleteUserClickHandler(\n                                  row.cells[0].row.original.uuid,\n                                )\n                              }\n                              //   onClick={e => dispatch(actions.deleteUserDetail(row.cells[0].row.original.id)) }\n                            >\n                              <Icon color=\"grey1\" as={FaTrashAlt}></Icon>\n                            </Flex>\n                            <Flex\n                              //id = {row.cells[0].row.original.id}\n                              data-icon-id={`edit-user-icon-button-${row.cells[0].row.original.id}`}\n                              w=\"30px\"\n                              h=\"30px\"\n                              bg=\"white\"\n                              align=\"center\"\n                              justify=\"center\"\n                              cursor=\"pointer\"\n                              borderRadius=\"5px\"\n                              onClick={e =>\n                                editUserClickHandler(row.cells[0].row.original)\n                              }\n                            >\n                              <Icon color=\"grey1\" as={MdEdit}></Icon>\n                            </Flex>\n                          </HStack>\n                        )}\n                      {type === 'manangeProjectTable' && (\n                        <HStack align=\"center\" h=\"30px\">\n                          <Flex\n                            w=\"30px\"\n                            h=\"30px\"\n                            data-icon-id={`delete-project-icon-button-${row.cells[0].row.original.uuid}`}\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            borderRadius=\"5px\"\n                            cursor=\"pointer\"\n                            onClick={e =>\n                              deleteUserClickHandler(\n                                row.cells[0].row.original.uuid,\n                              )\n                            }\n                            // data-delete-project-button-id={\n                            //   row.cells[0].row.original.uuid\n                            // }\n                            //   onClick={e => dispatch(actions.deleteUserDetail(row.cells[0].row.original.id)) }\n                          >\n                            <Icon color=\"grey1\" as={FaTrashAlt}></Icon>\n                          </Flex>\n                          <Flex\n                            //id = {row.cells[0].row.original.id}\n                            data-icon-id={`edit-project-icon-button-${row.cells[0].row.original.uuid}`}\n                            w=\"30px\"\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            cursor=\"pointer\"\n                            borderRadius=\"5px\"\n                            onClick={e =>\n                              editUserClickHandler(row.cells[0].row.original)\n                            }\n                          >\n                            <Icon color=\"grey1\" as={MdEdit}></Icon>\n                          </Flex>\n                        </HStack>\n                      )}\n                      {(type === 'deleteappbuilds' ||\n                        type === 'deletetestsuite') && (\n                        <HStack align=\"center\" h=\"30px\">\n                          <Flex\n                            w=\"30px\"\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            borderRadius=\"5px\"\n                            cursor=\"pointer\"\n                            data-delete-button-id={\n                              row.cells[0].row.original.uuid\n                            }\n                            onClick={e =>\n                              deleteUserClickHandler(\n                                row.cells[0].row.original.uuid,\n                              )\n                            }\n                            //   onClick={e => dispatch(actions.deleteUserDetail(row.cells[0].row.original.id)) }\n                          >\n                            <Icon color=\"grey1\" as={FaTrashAlt}></Icon>\n                          </Flex>{' '}\n                        </HStack>\n                      )}\n                    </Flex>\n                  </Td>\n                )}\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </CustomTable>\n      {/* \n        Pagination can be built however you'd like. \n        This is just a very basic UI implementation:\n      */}\n      <Flex\n        justifyContent=\"flex-end\"\n        padding=\"10px 0px\"\n        marginRight=\"10px\"\n        color=\"grey13\"\n      >\n        <Flex\n          fontFamily=\"Montserrat\"\n          fontWeight=\"500\"\n          className=\"pagination\"\n          boxShadow=\"0px 3px 6px #00000029\"\n          borderRadius=\"13\"\n          marginTop=\"10px\"\n          marginRight=\"5px \"\n          color=\"grey2\"\n          padding=\"5px 10px\"\n          display=\"inline-block\"\n        >\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n            <Box as=\"b\" fontWeight=\"500\" borderRadius=\"50%\">\n              {' '}\n              &lt;{' '}\n            </Box>{' '}\n            &nbsp;\n          </button>{' '}\n          <Box as=\"span\" color=\"black\" paddingRight=\"2px\" paddingBottom=\"3px\">\n            <Input\n              variant=\"flushed\"\n              size=\"18px\"\n              width=\"25px\"\n              _focus={{ color: 'none' }}\n              textAlign=\"right\"\n              fontSize=\"14px\"\n              borderBottom=\"1.5px solid\"\n              borderBottomColor=\"grey2\"\n              ref={inputRef}\n              type=\"number\"\n              value={pageIndex + 1}\n              onFocus={e => e.target.select()}\n              onKeyUp={e => {\n                if (e.key === 'Backspace') {\n                  e.target.select();\n                }\n              }}\n              onChange={e => {\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                gotoPage(page);\n              }}\n            />\n          </Box>{' '}\n          <Box textTransform=\"lowercase\" as=\"span\" color=\"black\">\n            <span>of {pageOptions.length}</span>{' '}\n          </Box>\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\n            &nbsp;\n            <Box as=\"b\" fontWeight=\"500\" borderRadius=\"50%\">\n              {' '}\n              {'  >'}\n            </Box>\n          </button>{' '}\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Automation.a7979bd9.svg\";","import { Select } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface propsType {\n  placeholder?: string;\n  width?: any;\n  optionList?: Array<any>;\n  selectValue?: string | number;\n  setSelectValue?: any;\n  height?: string | number;\n}\n\nfunction SelectOption({\n  placeholder,\n  width,\n  selectValue,\n  setSelectValue,\n  optionList,\n  height,\n}: propsType) {\n  return (\n    <Select\n      bg=\"white\"\n      placeholder={placeholder}\n      size=\"sm\"\n      width={width || '100%'}\n      color=\"grey15\"\n      h={height || ' 34px'}\n      border=\"1px solid \"\n      borderColor=\"grey1\"\n      borderRadius=\"5px\"\n      margin=\"0px 2px\"\n      textTransform=\"capitalize\"\n      value={selectValue}\n      onChange={e => setSelectValue(e.target.value)}\n      _focus={{ boxShadow: ' 0 0 0 white', borderColor: 'grey1' }}\n    >\n      {optionList &&\n        optionList.map((item, index) => (\n          <option\n            data-option={`select-${item}-${index}`}\n            style={{ textTransform: 'capitalize' }}\n            key={index}\n            value={item}\n          >\n            {item === 'completed' ? 'success' : item}\n          </option>\n        ))}\n    </Select>\n  );\n}\n\nexport default SelectOption;\n","import { FormControlOptions, useFormControl } from \"@chakra-ui/form-control\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, omit, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\ninterface TextareaOptions {\n  /**\n   * The border color when the textarea is focused. Use color keys in `theme.colors`\n   * @example\n   * focusBorderColor = \"blue.500\"\n   */\n  focusBorderColor?: string\n  /**\n   * The border color when the textarea is invalid. Use color keys in `theme.colors`\n   * @example\n   * errorBorderColor = \"red.500\"\n   */\n  errorBorderColor?: string\n  /**\n   * If `true`, the textarea element will span the full width of its parent\n   *\n   * @deprecated\n   * This component defaults to 100% width,\n   * please use the props `maxWidth` or `width` to configure\n   */\n  isFullWidth?: boolean\n}\n\ntype Omitted = \"disabled\" | \"required\" | \"readOnly\"\nexport interface TextareaProps\n  extends Omit<HTMLChakraProps<\"textarea\">, Omitted>,\n    TextareaOptions,\n    FormControlOptions,\n    ThemingProps<\"Textarea\"> {}\n\n/**\n * Textarea is used to enter an amount of text that's longer than a single line\n * @see Docs https://chakra-ui.com/textarea\n */\nexport const Textarea = forwardRef<TextareaProps, \"textarea\">((props, ref) => {\n  const styles = useStyleConfig(\"Textarea\", props)\n  const { className, rows, ...rest } = omitThemingProps(props)\n\n  const textareaProps = useFormControl<HTMLTextAreaElement>(rest)\n\n  const omitted = [\n    \"h\",\n    \"minH\",\n    \"height\",\n    \"minHeight\",\n  ] as (keyof SystemStyleObject)[]\n\n  const textareaStyles = rows ? omit(styles, omitted) : styles\n\n  return (\n    <chakra.textarea\n      ref={ref}\n      rows={rows}\n      {...textareaProps}\n      className={cx(\"chakra-textarea\", className)}\n      __css={textareaStyles}\n    />\n  )\n})\n\nif (__DEV__) {\n  Textarea.displayName = \"Textarea\"\n}\n","// @ts-nocheck\nimport { Flex, Stack, Text } from '@chakra-ui/react';\nimport ButtonComp from 'app/components/ButtonComp';\nimport InputComponent from 'app/pages/Appium/components/InputComponent';\nimport React from 'react';\n\nfunction InviteUserCard({ userEmail, setUserEmail, sendInviteUserHandler }) {\n  return (\n    <Stack width=\"100%\" color=\"grey1\" marginTop=\"10px\">\n      <Flex flexDirection=\"column\">\n        <InputComponent\n          title=\"Enter Invite User Email\"\n          width=\"100%\"\n          setInputValue={setUserEmail}\n          inputValue={userEmail}\n        ></InputComponent>\n        <Text>Invite using email id</Text>\n      </Flex>\n\n      <Flex alignSelf=\"end\">\n        {' '}\n        <ButtonComp\n          name=\"manage-invite-user-button\"\n          padding=\"7px 15px\"\n          color=\"white\"\n          backgroundColor=\"blue1\"\n          fontWeight=\"500\"\n          buttonHandler={sendInviteUserHandler}\n        >\n          Invite\n        </ButtonComp>\n      </Flex>\n    </Stack>\n  );\n}\n\nexport default InviteUserCard;\n","import { ManageUserData } from 'types/ManageUser';\n\nexport interface manageUserState {\n  loading: boolean;\n  error?: ManageUserErrorType | null;\n  manageUserData: ManageUserData[];\n  updateUserDetail: updateUserDetail | string;\n  deleteUserDetail: DeleteUserDetail | string;\n  isUpdateTriger: boolean;\n  isDeleteTriger: boolean;\n  updateUserError: string | null | UpdatedUserErrorType;\n  deletteUserError: string | null | UpdatedUserErrorType;\n  toastMessage: String | null;\n  sendInvite: boolean;\n  sentInviteResponse: updateUserDetail;\n  sendInviteError: string | null | UpdatedUserErrorType;\n}\n\nexport interface updateUserDetail {\n  //   name: string;\n  //   email: string;\n  //   password: string;\n  //   role: string;\n  //   id: string | number;\n}\nexport interface DeleteUserDetail {}\nexport enum ManageUserErrorType {\n  RESPONSE_ERROR = 1,\n  TEST_NOT_FOUND = 2,\n}\nexport enum UpdatedUserErrorType {\n  RESPONSE_ERROR = 1,\n  TEST_NOT_FOUND = 2,\n}\n","import GetIdToken from 'Authentication/configuration/GetIdToken';\nimport { call, put, takeLatest, delay, takeEvery } from 'redux-saga/effects';\nimport { ManageUserData } from 'types/ManageUser';\nimport { request } from 'utils/request';\nimport { userManageActions as actions } from './';\nimport { ManageUserErrorType } from './types';\nimport { REACT_APP_COGNITO_BASE_URL } from 'utils/enviroment';\n\nconst BASE_URL_USER = REACT_APP_COGNITO_BASE_URL;\n\nfunction* getManageUserData() {\n  \n\n  const requestUrl = `${BASE_URL_USER}/users`;\n\n\n  const idToken = GetIdToken();\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  try {\n    const manageUserData: ManageUserData[] = yield call(\n      request,\n      requestUrl,\n      config,\n    );\n    if (manageUserData?.length > 0) {\n      yield put(actions.manageUserDataLoaded(manageUserData));\n    } else {\n      yield put(\n        actions.manageUserDataError(ManageUserErrorType.RESPONSE_ERROR),\n      );\n    }\n  } catch (error) {\n    yield put(actions.manageUserDataError(ManageUserErrorType.RESPONSE_ERROR));\n  }\n}\n\nfunction* getUserDetail(action) {\n  const updateRequestUrl = `${BASE_URL_USER}/user/${action.payload.id}`;\n  //console.log(action.payload.data)\n\n  const idToken = GetIdToken();\n  const config = {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n    body: JSON.stringify(action.payload.data), // We send data in JSON format\n  };\n  ////console.log(config , action.payload.id)\n  try {\n    const response = yield call(request, updateRequestUrl, config);\n    //console.log(response);\n    // const response = yield   fetch(updateRequestUrl , config);\n    if (Object.keys(response).length !== 0) {\n      yield put(actions.updateUserDetailLoaded(response));\n      //     yield put(actions.updateToastMessage('userupdated'));\n      // console.log('data updated')\n    } else {\n      yield put(actions.updateUserDetailError('notupdated'));\n      //console.log('can not update');\n      // yield put(actions.updateToastMessage('usernotupdated'));\n    }\n  } catch (error) {\n    yield put(actions.updateUserDetailError('notupdated'));\n    // yield put(actions.updateToastMessage('usernotupdated'));\n    //console.log('failed to fetch');\n  }\n}\n\nfunction* deleteUserDetailWorker(action) {\n  // console.log(action.payload);\n  // yield delay(100);\n  const deleteRequestUrl = `${BASE_URL_USER}/user/${action.payload}`;\n  // const deleteRequestUrl = `/user/${action.payload}`;\n  const idToken = GetIdToken();\n  const config = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  try {\n    const responsedata = yield call(request, deleteRequestUrl, config);\n    //console.log(responsedata);\n    // console.log('user saga')\n    if (Object.keys(responsedata).length !== 0) {\n      yield put(actions.deleteUserDetailLoaded(responsedata));\n      // yield put(actions.updateToastMessage('userdeleted'));\n      // console.log('data delete updated')\n    } else {\n      yield put(actions.deleteUserDetailError('notdeleted'));\n      //     yield put(actions.updateToastMessage('usernotdeleted'));\n      // console.log('can not update');\n    }\n  } catch (error) {\n    yield put(actions.deleteUserDetailError('notdeleted'));\n    // yield put(actions.updateToastMessage('usernotdeleted'));\n    // console.log('can not update');\n  }\n}\n\nfunction* signupRequestWorker(action) {\n  // email is coming from handler\n\n  //  console.log(action.payload);\n\n  //yield delay(100);\n\n  const signViaInviteUrl = `${BASE_URL_USER}/invite`;\n\n  // const signViaInviteUrl = '/user/invite';\n  const idToken = GetIdToken();\n  const config = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n    body: JSON.stringify({ userEmail: action.payload }), // We send data in JSON format\n  };\n\n  try {\n    const response = yield fetch(signViaInviteUrl, config); //call(request, signViaInviteUrl, config);\n    const responsedata = yield response.json();\n\n    if (responsedata.hasOwnProperty('message')) {\n      if (responsedata.message === 'New user created') {\n        yield put(actions.signupRequestSended(responsedata));\n      } else {\n        yield put(actions.signupRequestError('notregister'));\n      }\n    } else {\n      yield put(actions.signupRequestError('notsend'));\n    }\n  } catch (error) {\n    yield put(actions.signupRequestError('notsend'));\n  }\n}\n\nexport function* manageUserSaga() {\n  yield takeLatest(actions.loadManageUserData.type, getManageUserData);\n  yield takeEvery(actions.updateUserDetail.type, getUserDetail);\n  yield takeEvery(actions.deleteUserDetail.type, deleteUserDetailWorker);\n  yield takeLatest(actions.signupRequest.type, signupRequestWorker);\n}\n","// @ts-nocheck\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\nimport { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';\nimport { manageUserSaga } from './saga';\nimport { manageUserState } from './types';\n//import { testSessionSaga } from './saga';\n//import { TestSessionState } from './types';\n\nexport const initialState: manageUserState = {\n  loading: false,\n  error: null,\n  manageUserData: [],\n  updateUserDetail: {},\n  deleteUserDetail: {},\n  isDeleteTriger: false,\n  isUpdateTriger: false,\n  updateUserError: null,\n  deletteUserError: null,\n  toastMessage: '',\n  sendInvite: false,\n  sentInviteResponse: '',\n  sendInviteError: '',\n};\n\nconst slice = createSlice({\n  name: 'manageUser',\n  initialState,\n  reducers: {\n    loadManageUserData: state => {\n      state.loading = true;\n    },\n    manageUserDataLoaded: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = null;\n      state.manageUserData = action.payload;\n    },\n    manageUserDataError: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n\n    updateUserDetail: (state, action: PayloadAction<any>) => {\n      state.isUpdateTriger = true;\n    },\n    updateUserDetailLoaded: (state, action: PayloadAction<any>) => {\n      state.updateUserDetail = action.payload;\n      console.log(action.payload);\n      state.isUpdateTriger = false;\n      //       state.toastMessage = 'userUpdated'\n    },\n    updateUserDetailError: (state, action: PayloadAction<any>) => {\n      state.isUpdateTriger = false;\n      state.updateUserError = action.payload;\n      // state.toastMessage = 'usernotUpdated'\n    },\n    deleteUserDetail: (state, action: PayloadAction<any>) => {\n      state.isDeleteTriger = true;\n    },\n\n    deleteUserDetailLoaded: (state, action: PayloadAction<any>) => {\n      state.deleteUserDetail = action.payload;\n      // console.log(action.payload)\n      state.isDeleteTriger = false;\n      // state.toastMessage = 'userdeleted'\n    },\n    deleteUserDetailError: (state, action: PayloadAction<any>) => {\n      state.isDeleteTriger = false;\n      state.deletteUserError = action.payload;\n    },\n    updateToastMessage: (state, action: PayloadAction<any>) => {\n      //state.toastMessage = action.payload;\n    },\n    signupRequest: state => {\n      state.sendInvite = true;\n    },\n    signupRequestSended: (state, action: PayloadAction<any>) => {\n      state.sendInvite = false;\n      state.sentInviteResponse = action.payload;\n    },\n    signupRequestError: (state, action: PayloadAction<any>) => {\n      state.sendInvite = false;\n      state.sendInviteError = action.payload;\n    },\n  },\n});\n\nexport const { actions: userManageActions } = slice;\n\nexport const useManageUserSlice = () => {\n  useInjectReducer({ key: slice.name, reducer: slice.reducer });\n  useInjectSaga({ key: slice.name, saga: manageUserSaga });\n  return { actions: slice.actions };\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\n// First select the relevant part from the state\nconst selectSlice = (state: RootState) => state.manageUser || initialState;\n\nexport const selectManageUserData = createSelector(\n  [selectSlice],\n  state => state.manageUserData,\n);\n\nexport const selectLoading = createSelector(\n  [selectSlice],\n  state => state.loading,\n);\nexport const selectManageUserDataError = createSelector(\n  [selectSlice],\n  state => state.error,\n);\n\nexport const selectUpdatedUser = createSelector(\n  [selectSlice],\n  state => state.updateUserDetail,\n);\nexport const selectDeletedUser = createSelector(\n  [selectSlice],\n  state => state.deleteUserDetail,\n);\nexport const selectDeletedUserError = createSelector(\n  [selectSlice],\n  state => state.deletteUserError,\n);\n\nexport const selectToastMessageUser = createSelector(\n  [selectSlice],\n  state => state.toastMessage,\n);\n\nexport const selectError = createSelector([selectSlice], state => state.error);\nexport const selectUpdateUserError = createSelector(\n  [selectSlice],\n  state => state.updateUserError,\n);\n\nexport const selectInvitedUser = createSelector(\n  [selectSlice],\n  state => state.sentInviteResponse,\n);\nexport const selectInviteLoading = createSelector(\n  [selectSlice],\n  state => state.sendInvite,\n);\nexport const selectInviteError = createSelector(\n  [selectSlice],\n  state => state.sendInviteError,\n);\n\nexport const selectLoadingDeleteUser = createSelector(\n  [selectSlice],\n  state => state.isDeleteTriger,\n);\nexport const selectLoadingUpdateUser = createSelector(\n  [selectSlice],\n  state => state.isUpdateTriger,\n);\n","// @ts-nocheck\nimport { Flex, HStack, Stack, Text, useToast } from '@chakra-ui/react';\nimport ButtonComp from 'app/components/ButtonComp';\n//import PopupComponent from 'app/components/PopupComponent';\nimport InputComponent from 'app/pages/Appium/components/InputComponent';\nimport SelectOption from 'app/pages/DebugReportGenerate/components/SelectOption';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useManageUserSlice } from '../slice';\nimport {\n  selectToastMessageUser,\n  selectUpdatedUser,\n  selectUpdateUserError,\n} from '../slice/selector';\n//import {updateUserDetailHandler} from './ManageUserTable'\n\nfunction EditUserPopup({ userData, onClose }) {\n  // const { isOpen, onOpen, onClose } = useDisclosure();\n\n  //   const [selectValue, setSelectValue] = useState('User');\n  //    const [userDetail ,setUserDetail] = useState();\n  const [selectUser, setSelectUser] = useState(userData.user_role || '');\n  const [userName, setUserName] = useState(userData.user_name || '');\n  const [userEmail, setUserEmail] = useState(userData.email || '');\n  const [userPassword, setUserPassword] = useState(userData.password || '');\n  const [userId, setUserId] = useState(userData.tenant_id || '');\n  const { actions } = useManageUserSlice();\n  const dispatch = useDispatch();\n  const updatedUserData = useSelector(selectUpdatedUser);\n  const updatedUserError = useSelector(selectUpdateUserError);\n  //console.log(updatedUserData)\n  const toast = useToast();\n  const optionListRole = ['TenantAdmin', 'TenantUser']; //'TenantCare'\n  //const toastMessage = useSelector(selectToastMessageUser);\n\n  useEffect(() => {\n    try {\n      if (Object.keys(updatedUserData) !== 0) {\n        if (\n          updatedUserData.hasOwnProperty('message') &&\n          updatedUserData.message === 'user updated'\n        ) {\n          // onClose();\n          toast({\n            title: updatedUserData.message,\n            status: 'success',\n            isClosable: true,\n            position: 'bottom-right',\n          });\n\n          dispatch(actions.updateUserDetailLoaded({}));\n          setUserName('');\n          setUserEmail('');\n          setUserPassword('');\n          setSelectUser('');\n        }\n\n        if (updatedUserError === 'notupdated') {\n          //console.log(updatedUserError);\n          toast({\n            title: 'Something went wrong',\n            status: 'error',\n            isClosable: true,\n            position: 'bottom-right',\n          });\n          dispatch(actions.updateUserDetailError(''));\n        }\n      }\n    } catch (e) {\n      // console.log(e);\n    }\n  }, [updatedUserData, updatedUserError]);\n\n  const updateHandlerUser = () => {\n    if (userName == '' || selectUser == '' || userEmail == '') {\n      toast({\n        title: 'Please enter details',\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n    } else {\n      dispatch(\n        actions.updateUserDetail({\n          data: {\n            userName: userName,\n            userRole: selectUser,\n            userEmail: userEmail,\n            // password: userPassword,\n            tenantId: userId,\n          },\n          id: userName,\n        }),\n      );\n      onClose();\n    }\n  };\n\n  return (\n    <Stack spacing=\"15px\" padding=\"10px 15px\" fontWeight=\"500\" width=\"100%\">\n      <HStack>\n        <Text width=\"100px\">Name</Text>\n\n        <InputComponent\n          inputValue={userName}\n          setInputValue={setUserName}\n          width=\"250px\"\n          title=\"Enter User Name\"\n          isDisabled={true}\n        ></InputComponent>\n      </HStack>\n\n      <HStack>\n        <Text width=\"100px\">Role</Text>\n\n        <SelectOption\n          setSelectValue={setSelectUser}\n          selectValue={selectUser}\n          optionList={optionListRole}\n          width=\"250px\"\n        ></SelectOption>\n      </HStack>\n      <HStack>\n        <Text width=\"100px\">Email Id</Text>\n\n        <InputComponent\n          disabled={true}\n          setInputValue={setUserEmail}\n          inputValue={userEmail}\n          width=\"250px\"\n          title=\"Enter Email\"\n        ></InputComponent>\n      </HStack>\n      <HStack>\n        <Text width=\"100px\">Password </Text>\n\n        <InputComponent\n          type=\"password\"\n          isDisabled={true}\n          setInputValue={setUserPassword}\n          inputValue=\"********\"\n          width=\"250px\"\n          title=\"Enter Password\"\n        ></InputComponent>\n      </HStack>\n      {/* <ButtonComp onClick={ updateHandlerUser } >update </ButtonComp> */}\n      <Flex\n        borderTop=\"1px solid\"\n        paddingTop=\"5px\"\n        borderColor=\"grey16\"\n        justify=\"end\"\n        width=\"100%\"\n      >\n        <ButtonComp\n          name=\"cancel-edit-user-button\"\n          borderColor=\"white3\"\n          color=\"grey1\"\n          width=\"95px\"\n          buttonHandler={onClose}\n          fontWeight=\"500\"\n        >\n          Cancel\n        </ButtonComp>\n        <ButtonComp\n          backgroundColor=\"blue1\"\n          name=\"update-edit-user-button\"\n          borderColor=\"blue1\"\n          color=\"white\"\n          width=\"95px\"\n          fontWeight=\"500\"\n          buttonHandler={updateHandlerUser}\n        >\n          Update\n        </ButtonComp>\n      </Flex>\n    </Stack>\n  );\n}\n\nexport default EditUserPopup;\n","// @ts-nocheck\nimport { Flex, Icon, useDisclosure, useToast } from '@chakra-ui/react';\nimport PopupComponent from 'app/components/PopupComponent';\n//import InputComponent from 'app/pages/Appium/components/InputComponent';\n//import SelectOption from 'app/pages/DebugReportGenerate/components/SelectOption';\nimport { PaginatedTable } from 'app/pages/TestAnalytics/components/Table';\nimport React, { useState, useLayoutEffect, useEffect } from 'react';\nimport { IoMdContact } from 'react-icons/io';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectDeletedUser,\n  selectManageUserData,\n  selectToastMessageUser,\n  selectDeletedUserError,\n  selectLoading,\n  selectManageUserDataError,\n} from '../slice/selector';\nimport EditUserPopup from './EditUserPopup';\nimport { useManageUserSlice } from '../slice';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport NoContent from 'app/components/NoContent';\n\nconst columns = [\n  {\n    Header: 'Name',\n    accessor: 'user_name',\n  },\n\n  {\n    Header: 'Role',\n    accessor: 'user_role',\n  },\n\n  {\n    Header: 'Email',\n    accessor: 'email',\n  },\n\n  {\n    Header: 'Password',\n    accessor: 'password',\n  },\n  {\n    Header: 'MFA',\n    accessor: 'isMFAEnabled',\n  },\n];\n\nfunction ManageUserTable({ deleteUserClickHandler }) {\n  const { actions } = useManageUserSlice();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [userInfo, setUserInfo] = useState({});\n  //const [data, setData] = useState([]);\n  //  const [updatedUserDetail, setUpdatedUserDetail] = useState({});\n  const toast = useToast();\n  const dispatch = useDispatch();\n\n  const manageData = useSelector(selectManageUserData);\n  const isLoading = useSelector(selectLoading);\n  const mangeDataError = useSelector(selectManageUserDataError);\n\n  const deletedUser = useSelector(selectDeletedUser);\n  const deletedUserError = useSelector(selectDeletedUserError);\n  // const toastMessage = useSelector(selectToastMessageUser);\n\n  useEffect(() => {\n    try {\n      if (deletedUser.hasOwnProperty('message')) {\n        toast({\n          title: deletedUser.message,\n          status: 'success',\n          isClosable: true,\n          position: 'bottom-right',\n        });\n        dispatch(actions.deleteUserDetailLoaded({}));\n      }\n      if (deletedUserError === 'notdeleted') {\n        toast({\n          title: 'Something went wrong',\n          status: 'error',\n          isClosable: true,\n          position: 'bottom-right',\n        });\n        dispatch(actions.deleteUserDetailError(''));\n      }\n    } catch (e) {\n      //console.log(e);\n    }\n  }, [deletedUser, deletedUserError]);\n\n  const editUserClickHandler = userDetail => {\n    setUserInfo(userDetail);\n    onOpen();\n    //console.log(userDetail);\n  };\n\n  // const deleteUserClickHandler = async id => {\n  //   dispatch(actions.deleteUserDetail(id));\n  // };\n\n  return (\n    <Flex width=\"100%\" marginTop=\"10px\" padding=\"10px\">\n      {isLoading ? (\n        <LoadingComponent></LoadingComponent>\n      ) : (\n        <>\n          {mangeDataError === 1 ? (\n            <NoContent height=\"60vh\" message=\"Something Went Wrong\"></NoContent>\n          ) : (\n            <>\n              {manageData.length !== 0 ? (\n                <PaginatedTable\n                  leftIcon={\n                    <Icon\n                      w=\"22px\"\n                      h=\"22px\"\n                      color=\"grey1\"\n                      as={IoMdContact}\n                    ></Icon>\n                  }\n                  type=\"manageUserTable\"\n                  editUserClickHandler={editUserClickHandler}\n                  deleteUserClickHandler={deleteUserClickHandler}\n                  rightHoverIcon={true}\n                  data={manageData}\n                  columns={columns}\n                ></PaginatedTable>\n              ) : (\n                <NoContent height=\"60vh\" message=\"NO Data Found\"></NoContent>\n              )}\n            </>\n          )}\n        </>\n      )}\n      <PopupComponent\n        title=\"Edit User\"\n        buttonHandler1={onClose}\n        width=\"500px\"\n        footer={true}\n        isOpen={isOpen}\n        onClose={onClose}\n      >\n        <EditUserPopup onClose={onClose} userData={userInfo}></EditUserPopup>\n      </PopupComponent>\n    </Flex>\n  );\n}\n\nexport default ManageUserTable;\n","// @ts-nocheck\nimport {\n  Flex,\n  HStack,\n  Stack,\n  Text,\n  Textarea,\n  useDisclosure,\n  useToast,\n} from '@chakra-ui/react';\nimport ButtonComp from 'app/components/ButtonComp';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport PopoverComponent from 'app/components/PopoverComponent';\nimport PopupComponent from 'app/components/PopupComponent';\nimport SubLayout from 'app/components/SubLayout';\n\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport InputComponent from '../Appium/components/InputComponent';\nimport SelectOption from '../DebugReportGenerate/components/SelectOption';\nimport SearchBar from '../TestAnalytics/components/SearchBar';\nimport InviteUserCard from './components/InviteUserCard';\nimport ManageUserTable from './components/ManageUserTable';\nimport { useManageUserSlice } from './slice';\nimport {\n  selectDeletedUser,\n  selectInvitedUser,\n  selectInviteError,\n  selectInviteLoading,\n  selectLoadingDeleteUser,\n  selectLoadingUpdateUser,\n  //selectToastMessageUser,\n  selectUpdatedUser,\n} from './slice/selector';\n//import { selectManageUserData } from './slice/selector';\n\nexport function SettingsManageUser() {\n  //const [updateManageUserTable, setupdateManageUserTable] = useState({});\n  const { actions } = useManageUserSlice();\n  const toast = useToast();\n  const dispatch = useDispatch();\n  const updatedUser = useSelector(selectUpdatedUser);\n  const deletedUser = useSelector(selectDeletedUser);\n  const invitedUser = useSelector(selectInvitedUser);\n  const inviteUserError = useSelector(selectInviteError);\n  const [userEmail, setUserEmail] = useState('');\n  const [getDeleteUserId, setDeleteUserId] = useState('');\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const loadingInviteUser = useSelector(selectInviteLoading);\n  const loadingDeleteUser = useSelector(selectLoadingDeleteUser);\n  const loadingUpdateUser = useSelector(selectLoadingUpdateUser);\n  useEffect(() => {\n    dispatch(actions.loadManageUserData());\n  }, [updatedUser, deletedUser, invitedUser]);\n\n  useEffect(() => {\n    if (invitedUser.hasOwnProperty('message')) {\n      dispatch(actions.signupRequestSended({}));\n      toast({\n        title: invitedUser.message,\n        status: 'success',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n      setUserEmail('');\n    }\n    if (inviteUserError === 'notsend') {\n      toast({\n        title: 'Something went wrong',\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n\n      dispatch(actions.signupRequestError(''));\n    }\n\n    if (inviteUserError === 'notregister') {\n      toast({\n        title: 'User already exists',\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n      dispatch(actions.signupRequestError(''));\n    }\n  }, [invitedUser, inviteUserError]);\n\n  const sendInviteUserHandler = () => {\n    if (userEmail === '') {\n      toast({\n        title: 'Please enter email ',\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n    } else {\n      dispatch(actions.signupRequest(userEmail));\n    }\n  };\n\n  const deleteUserClickHandler = async id => {\n    //  dispatch(actions.deleteUserDetail(id));\n    //   console.log(id)\n    setDeleteUserId(id);\n    onOpen();\n  };\n\n  const deleteUserButtonHandler = () => {\n    dispatch(actions.deleteUserDetail(getDeleteUserId));\n    // console.log(getDeleteUserId)\n    onClose();\n  };\n\n  return (\n    <Flex flexDirection=\"column\" position=\"relative\">\n      {(loadingInviteUser || loadingDeleteUser || loadingUpdateUser) && (\n        <LoadingComponent\n          height=\"105vh\"\n          //background=\"#3F425429\"\n          isOverLay={true}\n          position=\"absolute\"\n        ></LoadingComponent>\n      )}\n\n      <SubLayout>\n        <Flex\n          fontFamily=\"Montserrat\"\n          fontWeight=\"500\"\n          fontSize=\"14px\"\n          flexDirection=\"column\"\n          padding=\"20px\"\n          width=\"100%\"\n        >\n          <Flex justifyContent=\"space-between\">\n            <HStack>\n              <Text>Team</Text>\n              <SelectOption width=\"230px\" placeholder=\"default\"></SelectOption>\n            </HStack>\n            <HStack>\n              {/* <SearchBar width=\"320px\"></SearchBar> */}\n              {/* <ButtonComp padding=\"7px 15px\"   >ADD TEAM</ButtonComp> */}\n              <PopoverComponent\n                height=\"280px\"\n                width=\"280px\"\n                title=\"ADD TEAM\"\n                // button={\n                //   <ButtonComp padding=\"7px 15px\" focus={true}>\n                //     ADD TEAM\n                //   </ButtonComp>\n                // }\n              >\n                <Stack width=\"100%\" color=\"grey1\" marginTop=\"5px\">\n                  <HStack>\n                    <Text>Team Name</Text>\n                    <InputComponent width=\"160px\"></InputComponent>\n                  </HStack>\n                  <Text>Add Members</Text>\n                  <Textarea\n                    placeholder=\"Name or @mention\"\n                    minHeight=\"100px\"\n                    _focus={{ boxShadow: ' 0 0 0 white' }}\n                  ></Textarea>\n                  <Flex alignSelf=\"end\">\n                    {' '}\n                    <ButtonComp\n                      padding=\"7px 15px\"\n                      color=\"white\"\n                      backgroundColor=\"blue1\"\n                      fontWeight=\"500\"\n                    >\n                      ADD\n                    </ButtonComp>\n                  </Flex>\n                </Stack>\n              </PopoverComponent>\n              <PopoverComponent\n                height=\"180px\"\n                width=\"280px\"\n                title=\"ADD USER\"\n                button={\n                  <ButtonComp\n                    name=\"add-manage-user\"\n                    focus={true}\n                    padding=\"7px 15px\"\n                  >\n                    ADD user\n                  </ButtonComp>\n                }\n              >\n                <InviteUserCard\n                  setUserEmail={setUserEmail}\n                  userEmail={userEmail}\n                  sendInviteUserHandler={sendInviteUserHandler}\n                ></InviteUserCard>\n                {/* <Stack width=\"100%\" color=\"grey1\" marginTop=\"10px\">\n                <Flex flexDirection=\"column\">\n                  <InputComponent\n                    width=\"100%\"\n                    setInputValue={setUserEmail}\n                    inputValue={userEmail}\n                  ></InputComponent>\n                  <Text>Invite using email id</Text>\n                </Flex>\n\n                <Flex alignSelf=\"end\">\n                  {' '}\n                  <ButtonComp\n                    padding=\"7px 15px\"\n                    color=\"white\"\n                    backgroundColor=\"blue1\"\n                    fontWeight=\"500\"\n                    buttonHandler={sendInviteUserHandler}\n                  >\n                    Invite\n                  </ButtonComp>\n                </Flex>\n              </Stack> */}\n              </PopoverComponent>\n              {/* <ButtonComp padding=\"7px 15px\" >ADD user</ButtonComp> */}\n            </HStack>\n          </Flex>\n          <ManageUserTable\n            deleteUserClickHandler={deleteUserClickHandler}\n          ></ManageUserTable>\n          <PopupComponent\n            title=\"Delete User\"\n            buttonHandler1={onClose}\n            width=\"450px\"\n            //footer={true}\n            isOpen={isOpen}\n            onClose={onClose}\n            buttonTitle1=\"Cancel\"\n            buttonTitle2=\"Delete\"\n            buttonHandler1={onClose}\n            buttonHandler2={deleteUserButtonHandler}\n          >\n            <Flex\n              justify=\"center\"\n              width=\"100%\"\n              align=\"center\"\n              justifyItems=\"center\"\n            >\n              <Text textAlign=\"center\">Are you sure delete this User ? </Text>\n            </Flex>\n          </PopupComponent>\n        </Flex>\n      </SubLayout>\n    </Flex>\n  );\n}\n\nexport default SettingsManageUser;\n"],"sourceRoot":""}