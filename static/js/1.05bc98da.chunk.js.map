{"version":3,"sources":["../node_modules/react-table/index.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../../src/plugin-hooks/useGridLayout.js"],"names":["module","exports","require","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","_typeof","_regeneratorRuntime","e","__esModule","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","actions","init","defaultRenderer","emptyRenderer","React","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","props","style","className","makePropGetter","hooks","meta","userProps","handlePropGetter","prevProps","Array","isArray","reduceHooks","initial","allowUndefined","loopHooks","context","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","ref","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","column","Comp","console","info","flexRender","component","proto","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","String","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","row","error","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","key","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","undefined","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","from","Set","size","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValuesByColumnID","row1","row2","toString","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","alower","blower","replaceNonNumeric","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","options","window","addEventListener","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","w","columnIndex","elWidth","getElementById","offsetWidth","startingWidth","newWidth","columnWidthsCopy","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","reject","timeout","clearTimeout","setTimeout","userColumns","getStateReducer","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups"],"mappings":"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","file":"static/js/1.05bc98da.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}"],"sourceRoot":""}