{"version":3,"sources":["app/pages/TestAnalytics/components/Table/index.tsx","styles/Assets/Automation.svg","app/pages/Appium/components/CustomTabButton.tsx","app/pages/TestAnalytics/components/TestAnalyticsTableWrapper.tsx","app/pages/SyntheticMonitoring/components/TabTables/index.tsx","app/pages/SyntheticMonitoring/Features/JourneySummary/Features/EventTable/Features/EditEvent/index.tsx","app/pages/SyntheticMonitoring/Features/JourneySummary/Features/EventTable/index.tsx","app/pages/SyntheticMonitoring/Features/JourneySummary/Features/JourneyTable/Features/EditJourney/index.tsx","app/pages/SyntheticMonitoring/Features/JourneySummary/Features/JourneyTable/index.tsx","app/pages/SyntheticMonitoring/Features/JourneySummary/Features/KpiTable/Features/EditKpi/index.tsx","app/pages/SyntheticMonitoring/Features/JourneySummary/Features/KpiTable/index.tsx","app/pages/SyntheticMonitoring/Features/JourneySummary/index.tsx","app/pages/SyntheticMonitoring/index.tsx"],"names":["PaginatedTable","_ref","columns","data","leftIcon","rightHoverIcon","type","getTabIndex","editUserClickHandler","deleteUserClickHandler","history","useNavigate","GetLastAuthUser","last_auth","concat","UserPool","getClientId","reg","RegExp","document","cookie","match","email","getEmailId","getTabIndexKey","inputRef","useRef","homePageActions","useHomePageSlice","getPageIndexinit","useSelector","selectPageIndexInisialValue","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","state","pageIndex","pageSize","useDispatch","useTable","initialState","hasOwnProperty","key","value","autoResetPage","usePagination","_jsxs","Flex","flexDirection","paddingTop","width","backgroundColor","children","CustomTable","fontFamily","fontWeight","variant","_jsx","Thead","color","map","headerGroup","Tr","getHeaderGroupProps","Th","minWidth","paddingLeft","paddingRight","headers","column","textTransform","padding","getHeaderProps","render","Tbody","row","i","textDecoration","cursor","className","cells","original","uuid","onClick","id","_id","_hover","background","getRowProps","Td","testType","Icon","title","w","h","as","MdOutlineMonitor","RiDeviceLine","testId","AiOutlineSetting","MdOutlineTouchApp","cell","index","testStatus","getCellProps","dateTimeConverter","testStartTime","updatedAt","sessionId","Date","createdDate","toGMTString","slice","user_role","Text","bg","align","borderRadius","isMFAEnabled","AiOutlineCheckSquare","MdOutlineDisabledByDefault","status","Badge","sx","display","justify","alignItems","MdOutlineAnalytics","HStack","user_name","e","FaTrashAlt","MdEdit","GrShieldSecurity","createdBy","justifyContent","marginRight","boxShadow","marginTop","disabled","Box","paddingBottom","Input","size","_focus","textAlign","fontSize","borderBottom","borderBottomColor","ref","onFocus","target","select","onKeyUp","onChange","Number","length","CustomTabButton","Tab","marginLeft","border","_selected","TestAnalyticsTableWrapper","minH","TabTables","listofTabs","listofComponents","Tabs","isLazy","TabList","borderBottomWidth","tab","TabPanels","component","TabPanel","EditEvent","onClose","selectExistItem","setSelectExistItem","useState","eventEditPayloadState","selectSyntheticMonitoring","startEventName","setStartEventName","startEventDesc","setStartEventDesc","startEventType","setStartEventType","dispatch","actions","useSyntheticMonitoringSlice","useEffect","name","Stack","_Fragment","LabelFieldComponent","label","isRequired","InputComponent","setInputValue","inputValue","borderTop","borderColor","ButtonComp","buttonHandler","updateKpiHandler","payload","loadUpdateEvent","body","EventTable","isOpen","onOpen","useDisclosure","toast","useToast","eventListData","loadingEvent","updateEventResponse","loadEventListData","message","isClosable","position","updatedEvent","LoadingComponent","NoContent","BsFillFileTextFill","response","EventEditPayload","Header","accessor","PopupComponent","buttonHandler1","footer","getEvent","eventItems","event","filter","item","EditJourney","selectExistKpi","setSelectExistKpi","journeyName","setJourneyName","kpiMode","setKpiMode","kpiType","setKpiType","selectStartEvent","setSelectStartEvent","selectEndEvent","setSelectEndEvent","kpiName","setKpiName","endEventName","setEndEventName","operationType","setOperationType","journeyPayload","kpiListData","kpiPayload","editItemState","updateItemfetch","createEventError","createEventResponse","createKpiResponse","createKpiError","loadKpiListData","createEditItems","itemUpdatedFetch","insertEditItems","kpi","eventCreated","eventCraeteError","kpiCreated","kpiCraeteError","props","addEventHandler","eventType","eventObj","loadCreateEvent","RadioGroup","defaultValue","spacing","direction","Radio","colorScheme","CreateKpi","AddKpi","addKpiHandler","startEventId","endEventId","kpiObj","operation","eventId","sequenceId","loadCreateKpi","getItem","loadUpdateFetchItem","css","height","boreder","overflow","CardTitleComponent","isEdit","kpiData","updateJourneyHandler","kpiIds","_ref2","loadUpdateJourney","JourneyTable","getDeleteItemId","setDeleteItemId","journeyListData","loadingJourney","loadingDeleteJourney","updateJourneyResponse","loadJourneyListData","updatedJourney","selectKpiTypeOptions","selectOperationTypeOptions","EditKpi","kpiEditPayloadState","startEventProps","setEventName","eventName","selectEvent","setSelectEvent","endEventProps","SelectComponent","selectValue","setSelectValue","selectOptions","CreateEvent","loadUpdateKpi","KpiTable","loadingKpi","updateKpiResponse","updateKpiError","updatedKpi","JourneySummary","deleteJourneyResponse","loadingUpdateJourney","loadingUpdateKpi","loadingUpdateEvent","itemDeleted","LoaderOverlay","isloading","SubLayout","buttonTitle1","buttonTitle2","buttonHandler2","deleteButtonHandler","loadDeleteItem","justifyItems","SyntheticsMonitoring","listOfComponents","TabsComponent","isSubContainer"],"mappings":"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","file":"static/js/20.141f711c.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useEffect, useRef } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Table as CustomTable,\n  Thead,\n  Tr,\n  Img,\n  Text,\n  Box,\n  // Container,\n  Td,\n  Th,\n  Tbody,\n  Input,\n  Flex,\n  //  IconButton,\n  Icon,\n  Center,\n  HStack,\n  Badge,\n} from '@chakra-ui/react';\n\nimport { useTable, usePagination } from 'react-table';\n\nimport automationIcon from '../../../../../styles/Assets/Automation.svg';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { GrShieldSecurity } from 'react-icons/gr';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport {\n  MdEdit,\n  MdOutlineAnalytics,\n  MdOutlineDisabledByDefault,\n  MdOutlineMonitor,\n  MdOutlineTouchApp,\n} from 'react-icons/md';\n\nimport { useTestAnalyticsSlice } from '../../testAnalyticsSlice';\nimport { AiOutlineCheckSquare, AiOutlineSetting } from 'react-icons/ai';\nimport { dateTimeConverter } from 'utils/gernricfunction';\nimport UserPool from 'Authentication/configuration/UserPool';\nimport { FiTv } from 'react-icons/fi';\nimport { RiDeviceLine } from 'react-icons/ri';\n\nimport { HomePageActions, useHomePageSlice } from 'app/pages/HomePage/slice';\nimport { selectPageIndexInisialValue } from 'app/pages/HomePage/slice/selectors';\nimport { getEmailId } from 'Authentication/configuration/GetEmail';\nimport { BsCheckCircle } from 'react-icons/bs';\n\nconst AutomationIcon = () => {\n  return (\n    <Flex as=\"span\" padding=\"0px\">\n      {' '}\n      <Img\n        width=\"22px\"\n        marginLeft=\"5px\"\n        height=\"22px\"\n        src={automationIcon}\n        alt=\"debug\"\n      ></Img>\n    </Flex>\n  );\n};\n//\n\n// const actionBoxShow = e => {\n//   if (document.getElementById(`box${e}`)) {\n//     document.getElementById(`box${e}`).style.display = 'block';\n//   }\n// };\n// const actionBoxHide = e => {\n//   document.getElementById(`box${e}`).style.display = 'none';\n// };\n\nconst getTestIdHandler = id => {\n  // console.log(id)\n};\n\n// const getPageIndexForTable = (type, getTabIndex) => {\n//   if (type) {\n//     const getTabIndexKey = getTabIndex || getTabIndex === 0 ? getTabIndex : '';\n//     if (\n//       parseInt(localStorage.getItem(`pageIndexKey${type}${getTabIndexKey}`))\n//     ) {\n//       return parseInt(\n//         localStorage.getItem(`pageIndexKey${type}${getTabIndexKey}`),\n//       );\n//     } else {\n//       return 0;\n//     }\n//   }\n//   return 0;\n// };\n\nexport function PaginatedTable({\n  columns,\n  data,\n  leftIcon,\n  rightHoverIcon,\n  type,\n  getTabIndex,\n  editUserClickHandler,\n  deleteUserClickHandler,\n}) {\n  let history = useNavigate();\n  const getRowId = id => {\n    history(`/testsummary/${id}`);\n    //  console.log(id)\n  };\n\n  const GetLastAuthUser = () => {\n    const last_auth = `CognitoIdentityServiceProvider.${UserPool.getClientId()}.LastAuthUser`;\n    const reg = new RegExp(`(?<=${last_auth}=)[^;]*`);\n    try {\n      return document.cookie.match(reg)[0];\n    } catch {\n      return null;\n    }\n  };\n\n  const username = GetLastAuthUser();\n  const email = getEmailId();\n\n  const getTabIndexKey = getTabIndex || getTabIndex === 0 ? getTabIndex : '';\n  const inputRef = useRef();\n  //const { actions } = useManageUserSlice();\n  const { homePageActions } = useHomePageSlice();\n  const getPageIndexinit = useSelector(selectPageIndexInisialValue);\n  const dispatch = useDispatch();\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page, // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    // pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    //setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        pageIndex:\n          getPageIndexinit.hasOwnProperty('key') &&\n          getPageIndexinit.key === `pageIndexKey${type}${getTabIndexKey}`\n            ? getPageIndexinit.value\n            : 0,\n        //getPageIndexForTable(type, getTabIndex),\n        //getPageIndexForTable(type)\n        // parseInt(localStorage.getItem(`pageIndexKey${type}${getTabIndexKey}`)) === 'NAN' ?  0 :  parseInt(localStorage.getItem(`pageIndexKey${type}${getTabIndexKey}`)),\n        pageSize: 20,\n      },\n      autoResetPage: true,\n      // manualPagination: false,\n      //autoResetPageIndex : false,\n    },\n    usePagination,\n  );\n\n  // Render the UI for your table\n  return (\n    <Flex\n      flexDirection=\"column\"\n      paddingTop=\"5px\"\n      width=\"100%\"\n      backgroundColor=\"white\"\n    >\n      <CustomTable\n        fontFamily=\"Montserrat\"\n        fontWeight=\"500\"\n        variant=\"simple\"\n        {...getTableProps()}\n      >\n        <Thead fontWeight=\"500\" color=\"grey1\">\n          {headerGroups.map(headerGroup => (\n            <Tr {...headerGroup.getHeaderGroupProps()}>\n              {/* <Th\n                fontFamily=\"Montserrat\"\n                minWidth=\"0px\"\n                paddingLeft=\"0px\"\n                paddingRight=\"0px\"\n              ></Th> */}\n              {leftIcon && (\n                <Th\n                  fontFamily=\"Montserrat\"\n                  minWidth=\"0px\"\n                  paddingLeft=\"0px\"\n                  paddingRight=\"0px\"\n                ></Th>\n              )}\n              {headerGroup.headers.map(column => (\n                <Th\n                  fontFamily=\"Montserrat\"\n                  textTransform=\"capitalize\"\n                  padding=\"2px 5px\"\n                  color=\"grey1\"\n                  {...column.getHeaderProps()}\n                >\n                  {column.render('Header')}\n                </Th>\n              ))}\n              {rightHoverIcon && <Th></Th>}\n            </Tr>\n          ))}\n        </Thead>\n        <Tbody fontWeight=\"500\" color=\"grey13\" {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row);\n\n            return (\n              <Tr\n                textDecoration=\"none\"\n                cursor={type === 'testAnalyticsTable ' && 'pointer'}\n                className=\"testTr\"\n                data-scriptappbuild-id={\n                  (type === 'deleteappbuilds' || type === 'deletetestsuite') &&\n                  row.cells[0].row.original.uuid\n                }\n                data-manageproject-id={\n                  type === 'manangeProjectTable' &&\n                  row.cells[0].row.original.uuid\n                }\n                onClick={() => {\n                  if (type === 'testAnalyticsTable ') {\n                    getRowId(row.cells[0].row.original.uuid._id);\n                  }\n                }}\n                _hover={rightHoverIcon ? { background: 'grey14' } : ''}\n                {...row.getRowProps()}\n              >\n                {leftIcon && (\n                  <Td minWidth=\"10px\" paddingLeft=\"10px\" paddingRight=\"5px\">\n                    {type === 'testAnalyticsTable ' ? (\n                      row.cells[0].row.original.testType === 'lr-automation' ? (\n                        <Icon\n                          title=\"LR Automation\"\n                          w=\"22px\"\n                          h=\"22px\"\n                          color=\"grey1\"\n                          as={MdOutlineMonitor}\n                        ></Icon>\n                      ) : row.cells[0].row.original.testType ===\n                        'lr-interact' ? (\n                        <Icon\n                          w=\"22px\"\n                          title=\"LR Interact\"\n                          h=\"22px\"\n                          color=\"grey1\"\n                          as={RiDeviceLine}\n                        ></Icon>\n                      ) : row.cells[0].row.original.uuid.testId !== '' ? (\n                        <Icon\n                          w=\"22px\"\n                          h=\"22px\"\n                          title=\"App Automation\"\n                          color=\"grey1\"\n                          as={AiOutlineSetting}\n                        ></Icon>\n                      ) : (\n                        <Icon\n                          color=\"grey1\"\n                          w=\"22px\"\n                          h=\"22px\"\n                          title=\"Manual\"\n                          as={MdOutlineTouchApp}\n                        ></Icon>\n                      )\n                    ) : (\n                      leftIcon\n                    )}\n                  </Td>\n                )}\n\n                {row.cells.map((cell, index) => {\n                  // {console.log(cell.render('Cell').props.data[i].id)}\n                  return (\n                    <Td\n                      color={\n                        type === 'testAnalyticsTable '\n                          ? row.cells[0].row.original.testStatus === 'Started'\n                            ? '#0d5bb5'\n                            : row.cells[0].row.original.testStatus === 'Failed'\n                            ? '#EF4E90'\n                            : ''\n                          : ''\n                      }\n                      // color={\n                      //   type === 'testAnalyticsTable ' &&\n                      //   row.cells[0].row.original.testStatus === 'Completed'\n                      //     ? ' '\n                      //     : '#0d5bb5'\n                      // }\n                      textTransform=\"none\"\n                      minWidth={\n                        type === 'testAnalyticsTable ' ? '60px' : '70px'\n                      }\n                      // minWidth={index === 5 ? '100px' : '70px'}\n                      padding=\"5px 4px\"\n                      {...cell.getCellProps()}\n                      minWidth=\"75px\"\n                    >\n                      {/* get the data of particular cell */}\n                      {/* {console.log(row.cells[0].row.original.user_role)} */}\n\n                      {(index === 0 &&\n                        type === 'testAnalyticsTable ' &&\n                        ((row.cells[0].row.original.testStatus ===\n                          'Completed' &&\n                          'Success') ||\n                          (row.cells[0].row.original.testStatus === 'Aborted' &&\n                            'User Aborted'))) ||\n                        (index === 1 &&\n                          type === 'testAnalyticsTable ' &&\n                          dateTimeConverter(\n                            row.cells[0].row.original.testStartTime,\n                          )) ||\n                        (index === 2 &&\n                          type === 'journeyTable' &&\n                          dateTimeConverter(\n                            row.cells[0].row.original.updatedAt,\n                          )) ||\n                        (index === 2 &&\n                          type === 'testAnalyticsTable ' &&\n                          row.cells[0].row.original.uuid.sessionId &&\n                          row.cells[0].row.original.uuid.sessionId) ||\n                        (index == 1 &&\n                          type === 'appBuilds' &&\n                          new Date(\n                            //cell.render('Cell').props.data[i].createdDate,\n                            row.cells[0].row.original.createdDate,\n                          )\n                            .toGMTString()\n                            .slice(5, 16)) ||\n                        (index === 1 &&\n                          (type === 'manageUserTable' ||\n                            type === 'manageKeyTable') &&\n                          row.cells[0].row.original.user_role ===\n                            'SystemAdmin' && (\n                            <Text\n                              bg=\"blue1\"\n                              color=\"white\"\n                              align=\"center\"\n                              borderRadius=\"20px\"\n                              width=\"120px\"\n                            >\n                              {/* {cell.render('Cell').props.data[i].role} */}\n                              {row.cells[0].row.original.user_role}\n                            </Text>\n                          )) ||\n                        (index === 1 &&\n                          (type === 'manageUserTable' ||\n                            type === 'manageKeyTable') &&\n                          row.cells[0].row.original.user_role ===\n                            'TenantAdmin' && (\n                            <Text\n                              bg=\"blue1\"\n                              color=\"white\"\n                              align=\"center\"\n                              borderRadius=\"20px\"\n                              width=\"120px\"\n                            >\n                              {/* {cell.render('Cell').props.data[i].role} */}\n                              {row.cells[0].row.original.user_role}\n                            </Text>\n                          )) ||\n                        (index === 3 &&\n                          (type === 'manageUserTable' ||\n                            type === 'manageKeyTable') &&\n                          '*********') ||\n                        (index === 4 &&\n                          type === 'manageUserTable' &&\n                          (row.cells[0].row.original.isMFAEnabled ? (\n                            <Icon\n                              color=\"grey1\"\n                              w=\"25px\"\n                              h=\"25px\"\n                              as={AiOutlineCheckSquare}\n                            ></Icon>\n                          ) : (\n                            <Icon\n                              w=\"25px\"\n                              h=\"25px\"\n                              color=\"grey1\"\n                              as={MdOutlineDisabledByDefault}\n                            ></Icon>\n                          ))) ||\n                        ((type === 'manageUserTable' ||\n                          type === 'manageKeyTable') &&\n                          index === 2 &&\n                          row.cells[0].row.original.status ===\n                            'FORCE_CHANGE_PASSWORD' && (\n                            <Text>\n                              {row.cells[0].row.original.email}{' '}\n                              <Badge\n                                borderRadius=\"20px\"\n                                padding=\"0px 10px\"\n                                variant=\"outline\"\n                              >\n                                {' '}\n                                not verified{' '}\n                              </Badge>\n                            </Text>\n                          )) ||\n                        cell.render('Cell')}\n                    </Td>\n                  );\n                })}\n                {rightHoverIcon && (\n                  <Td\n                    // minWidth=\"10px\"\n                    minWidth=\"95px\"\n                    padding=\"0px 5px\"\n                    paddingLeft=\"4px\"\n                    paddingRight=\"0px\"\n                    minWidth={type === 'testAnalyticsTable ' ? '50px' : '95px'}\n                  >\n                    <Flex\n                      sx={{\n                        '.testTr:hover &': {\n                          display: 'block',\n                        },\n                      }}\n                      id={`box${i}`}\n                      display=\"none\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                    >\n                      {type === 'testAnalyticsTable ' && (\n                        <Icon\n                          as={MdOutlineAnalytics}\n                          w=\"25px\"\n                          color=\"grey1\"\n                          h=\"25px\"\n                        ></Icon>\n                      )}\n\n                      {type === 'appbuildstable' && rightHoverIcon}\n                      {type === 'manageUserTable' && (\n                        <HStack align=\"center\" h=\"30px\">\n                          <Flex\n                            w=\"30px\"\n                            data-icon-id={`delete-user-icon-button-${row.cells[0].row.original.user_name}`}\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            borderRadius=\"5px\"\n                            cursor=\"pointer\"\n                            onClick={e =>\n                              deleteUserClickHandler(\n                                row.cells[0].row.original.user_name,\n                              )\n                            }\n                            //   onClick={e => dispatch(actions.deleteUserDetail(row.cells[0].row.original.id)) }\n                          >\n                            <Icon color=\"grey1\" as={FaTrashAlt}></Icon>\n                          </Flex>\n                          <Flex\n                            //id = {row.cells[0].row.original.id}\n                            data-icon-id={`edit-user-icon-button-${row.cells[0].row.original.user_name}`}\n                            w=\"30px\"\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            cursor=\"pointer\"\n                            borderRadius=\"5px\"\n                            onClick={e =>\n                              editUserClickHandler(row.cells[0].row.original)\n                            }\n                          >\n                            <Icon color=\"grey1\" as={MdEdit}></Icon>\n                          </Flex>\n                        </HStack>\n                      )}\n                      {type === 'manageKeyTable' && (\n                        <HStack align=\"center\" h=\"30px\">\n                          <Flex\n                            //id = {row.cells[0].row.original.id}\n                            data-icon-id={`edit-user-icon-button-${row.cells[0].row.original.user_name}`}\n                            w=\"30px\"\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            cursor=\"pointer\"\n                            borderRadius=\"5px\"\n                            onClick={e =>\n                              editUserClickHandler(row.cells[0].row.original)\n                            }\n                          >\n                            <Icon color=\"grey\" as={GrShieldSecurity}></Icon>\n                          </Flex>\n                        </HStack>\n                      )}\n                      {type === 'journeyTable' &&\n                        row.cells[0].row.original.createdBy === email && (\n                          <HStack align=\"center\" h=\"30px\">\n                            <Flex\n                              w=\"30px\"\n                              data-icon-id={`delete-user-icon-button-${row.cells[0].row.original.id}`}\n                              h=\"30px\"\n                              bg=\"white\"\n                              align=\"center\"\n                              justify=\"center\"\n                              borderRadius=\"5px\"\n                              cursor=\"pointer\"\n                              onClick={e =>\n                                deleteUserClickHandler(\n                                  row.cells[0].row.original.uuid,\n                                )\n                              }\n                              //   onClick={e => dispatch(actions.deleteUserDetail(row.cells[0].row.original.id)) }\n                            >\n                              <Icon color=\"grey1\" as={FaTrashAlt}></Icon>\n                            </Flex>\n                            <Flex\n                              //id = {row.cells[0].row.original.id}\n                              data-icon-id={`edit-user-icon-button-${row.cells[0].row.original.id}`}\n                              w=\"30px\"\n                              h=\"30px\"\n                              bg=\"white\"\n                              align=\"center\"\n                              justify=\"center\"\n                              cursor=\"pointer\"\n                              borderRadius=\"5px\"\n                              onClick={e =>\n                                editUserClickHandler(row.cells[0].row.original)\n                              }\n                            >\n                              <Icon color=\"grey1\" as={MdEdit}></Icon>\n                            </Flex>\n                          </HStack>\n                        )}\n                      {type === 'manangeProjectTable' && (\n                        <HStack align=\"center\" h=\"30px\">\n                          <Flex\n                            w=\"30px\"\n                            h=\"30px\"\n                            data-icon-id={`delete-project-icon-button-${row.cells[0].row.original.uuid}`}\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            borderRadius=\"5px\"\n                            cursor=\"pointer\"\n                            onClick={e =>\n                              deleteUserClickHandler(\n                                row.cells[0].row.original.uuid,\n                              )\n                            }\n                            // data-delete-project-button-id={\n                            //   row.cells[0].row.original.uuid\n                            // }\n                            //   onClick={e => dispatch(actions.deleteUserDetail(row.cells[0].row.original.id)) }\n                          >\n                            <Icon color=\"grey1\" as={FaTrashAlt}></Icon>\n                          </Flex>\n                          <Flex\n                            //id = {row.cells[0].row.original.id}\n                            data-icon-id={`edit-project-icon-button-${row.cells[0].row.original.uuid}`}\n                            w=\"30px\"\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            cursor=\"pointer\"\n                            borderRadius=\"5px\"\n                            onClick={e =>\n                              editUserClickHandler(row.cells[0].row.original)\n                            }\n                          >\n                            <Icon color=\"grey1\" as={MdEdit}></Icon>\n                          </Flex>\n                        </HStack>\n                      )}\n                      {(type === 'deleteappbuilds' ||\n                        type === 'deletetestsuite') && (\n                        <HStack align=\"center\" h=\"30px\">\n                          <Flex\n                            w=\"30px\"\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            borderRadius=\"5px\"\n                            cursor=\"pointer\"\n                            data-delete-button-id={\n                              row.cells[0].row.original.uuid\n                            }\n                            onClick={e =>\n                              deleteUserClickHandler(\n                                row.cells[0].row.original.uuid,\n                              )\n                            }\n                            //   onClick={e => dispatch(actions.deleteUserDetail(row.cells[0].row.original.id)) }\n                          >\n                            <Icon color=\"grey1\" as={FaTrashAlt}></Icon>\n                          </Flex>{' '}\n                        </HStack>\n                      )}\n                    </Flex>\n                  </Td>\n                )}\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </CustomTable>\n      {/* \n        Pagination can be built however you'd like. \n        This is just a very basic UI implementation:\n      */}\n      <Flex\n        justifyContent=\"flex-end\"\n        padding=\"10px 0px\"\n        marginRight=\"10px\"\n        color=\"grey13\"\n      >\n        <Flex\n          fontFamily=\"Montserrat\"\n          fontWeight=\"500\"\n          className=\"pagination\"\n          boxShadow=\"0px 3px 6px #00000029\"\n          borderRadius=\"13\"\n          marginTop=\"10px\"\n          marginRight=\"5px \"\n          color=\"grey2\"\n          padding=\"5px 10px\"\n          display=\"inline-block\"\n        >\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n            <Box as=\"b\" fontWeight=\"500\" borderRadius=\"50%\">\n              {' '}\n              &lt;{' '}\n            </Box>{' '}\n            &nbsp;\n          </button>{' '}\n          <Box as=\"span\" color=\"black\" paddingRight=\"2px\" paddingBottom=\"3px\">\n            <Input\n              variant=\"flushed\"\n              size=\"18px\"\n              width=\"25px\"\n              _focus={{ color: 'none' }}\n              textAlign=\"right\"\n              fontSize=\"14px\"\n              borderBottom=\"1.5px solid\"\n              borderBottomColor=\"grey2\"\n              ref={inputRef}\n              type=\"number\"\n              value={pageIndex + 1}\n              onFocus={e => e.target.select()}\n              onKeyUp={e => {\n                if (e.key === 'Backspace') {\n                  e.target.select();\n                }\n              }}\n              onChange={e => {\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                gotoPage(page);\n              }}\n            />\n          </Box>{' '}\n          <Box textTransform=\"lowercase\" as=\"span\" color=\"black\">\n            <span>of {pageOptions.length}</span>{' '}\n          </Box>\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\n            &nbsp;\n            <Box as=\"b\" fontWeight=\"500\" borderRadius=\"50%\">\n              {' '}\n              {'  >'}\n            </Box>\n          </button>{' '}\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Automation.a7979bd9.svg\";","import { Tab, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nfunction CustomTabButton({ children }) {\n  return (\n    <Tab\n      fontFamily=\"Montserrat\"\n      borderRadius=\"5px\"\n      fontSize=\"14px\"\n      fontWeight=\"500\"\n      justifyContent=\"flex-start\"\n      display=\"flex\"\n      marginLeft=\"5px\"\n      padding=\"0px 10px\"\n      border=\"1px solid #C8C8C8\"\n      data-button-id={`${children}-tab-button`}\n      bg=\"white\"\n      color=\"grey13\"\n      _focus={{ boxShadow: ' 0 0 0 white' }}\n      w=\"145px\"\n      h=\"33px\"\n      _selected={{\n        border: '1px solid white',\n        boxShadow: ' 0px 0px 6px #008FE0',\n        color: '#008FE0',\n        background: '#F3F6F9',\n        fontWeight: '500',\n      }}\n    >\n      <Text marginLeft=\"5px\" textTransform=\"capitalize\">\n        {children}\n      </Text>\n    </Tab>\n  );\n}\n\nexport default CustomTabButton;\n","import { Flex } from '@chakra-ui/react';\nimport React from 'react';\n\nfunction TestAnalyticsTableWrapper({ children }) {\n  return (\n    <Flex width=\"100%\" bg=\"white\" minH=\"100vh\" marginTop=\"10px\">\n      {children}\n    </Flex>\n  );\n}\n\nexport default TestAnalyticsTableWrapper;\n","//@ts-nocheck\nimport { Flex, TabList, TabPanel, TabPanels, Tabs } from '@chakra-ui/react'\nimport CustomTabButton from 'app/pages/Appium/components/CustomTabButton'\nimport TestAnalyticsTableWrapper from 'app/pages/TestAnalytics/components/TestAnalyticsTableWrapper'\nimport React from 'react'\n\nfunction TabTables({listofTabs , listofComponents}) {\n  return (\n    <Flex\n    fontFamily=\"Montserrat\"\n    padding=\".8em\"\n    fontWeight=\"500\"\n    background=\"white\"\n    borderRadius=\"2\"\n    width=\"100%\"\n    flexDirection=\"column\"\n  >\n    {' '}\n    <Tabs\n      //defaultIndex={getTabIndexStatus}\n      isLazy\n    //  onChange={e => setTabStatus(e)}\n    >\n      <TabList borderBottomWidth=\"0px\">\n        <Flex>\n          { listofTabs.map( tab =>  <CustomTabButton>{tab}</CustomTabButton> )}\n        </Flex>\n      </TabList>\n      <TabPanels minH=\"100vh\">\n\n      { listofComponents.map( component =>  <TabPanel padding=\"0px\" bg=\"white\" color=\"black\">\n          <TestAnalyticsTableWrapper>\n             {component}\n          </TestAnalyticsTableWrapper>\n        </TabPanel> )}\n    \n      </TabPanels>\n    </Tabs>\n  </Flex>\n  )\n}\n\nexport default TabTables","import { Flex, Stack, Text } from '@chakra-ui/react'\nimport ButtonComp from 'app/components/ButtonComp'\nimport InputComponent from 'app/pages/Appium/components/InputComponent'\nimport SelectComponent from 'app/pages/Appium/components/SelectComponent'\nimport LabelFieldComponent from 'app/pages/AutomationTest/components/LabelFieldComponent'\nimport CardComponent from 'app/pages/SyntheticMonitoring/components/CardComponent'\nimport CardTitleComponent from 'app/pages/SyntheticMonitoring/components/CardTitleComponent'\nimport { useSyntheticMonitoringSlice } from 'app/pages/SyntheticMonitoring/slice'\nimport { selectSyntheticMonitoring } from 'app/pages/SyntheticMonitoring/slice/selectors'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst selectEventTypeOptions = [{ name: 'click' }, { name: 'swipe' }];\nfunction EditEvent({onClose}) {\nconst [selectExistItem, setSelectExistItem] = useState('')\nconst {\n    eventEditPayloadState \n  } = useSelector(selectSyntheticMonitoring);    \n  const [startEventName , setStartEventName] = useState('');\n  const [startEventDesc , setStartEventDesc] = useState('');\n  const [startEventType , setStartEventType] = useState('');\n  const dispatch = useDispatch();\n  const {actions} = useSyntheticMonitoringSlice();\n  // useEffect(() => {\n  //   dispatch(actions.loadEventListData())\n  // }, []);\n\n\nconst updateKpiHandler = ()=>{\nif(startEventName !== ''  ){\n  const payload ={name : startEventName }\n \n\n  if( eventEditPayloadState.uuid !==''){\n    dispatch(\n      actions.loadUpdateEvent({ id: eventEditPayloadState.uuid, body: payload }),\n    );\n    onClose();\n}\n    \n    }\n }\n\n\n\n\nuseEffect(()=>{\n\n    // setStartEventDesc(eventEditPayloadState.description);\n    setStartEventName(eventEditPayloadState.name);\n    // setStartEventType(eventEditPayloadState.type);\n},[eventEditPayloadState ])\n\nreturn (\n    \n    <Stack width=\"100%\" padding=\"20px\" >\n            {/* <LabelFieldComponent label=\"Kpi Name\">\n        <Text fontWeight=\"600\">{eventEditPayloadState.name}</Text>\n      </LabelFieldComponent> */}\n         <>\n              <LabelFieldComponent label=\"Start Event Name\" isRequired={true}>\n                <InputComponent\n\n                  setInputValue={setStartEventName}\n                  inputValue={startEventName}\n                  title=\"Enter  Event\"\n                ></InputComponent>\n\n              </LabelFieldComponent>\n              {/* <LabelFieldComponent label=\"Event Type\" isRequired={true}>\n                <SelectComponent\n                  name=\"xcui\"\n                  type=\"project\"\n                  selectValue={startEventType}\n                  setSelectValue={setStartEventType}\n                  selectOptions={selectEventTypeOptions}\n                  title=\"Select Type\"\n                ></SelectComponent>\n              </LabelFieldComponent>\n              <LabelFieldComponent label=\"Event Description\">\n                <InputComponent\n                  setInputValue={setStartEventDesc}\n                  inputValue={startEventDesc}\n                  title=\"Enter Event Descrisption\"\n                ></InputComponent>\n              </LabelFieldComponent> */}\n            </>\n      \n      <Flex\n        borderTop=\"1px solid\"\n        paddingTop=\"5px\"\n        borderColor=\"grey16\"\n        justify=\"end\"\n        width=\"100%\"\n      >\n        <ButtonComp\n          name=\"cancel-edit-user-button\"\n          borderColor=\"white3\"\n          color=\"grey1\"\n          width=\"95px\"\n          buttonHandler={onClose}\n          fontWeight=\"500\"\n        >\n          Cancel\n        </ButtonComp>\n        <ButtonComp\n          backgroundColor=\"blue1\"\n          name=\"update-edit-user-button\"\n          borderColor=\"blue1\"\n          color=\"white\"\n          width=\"95px\"\n          fontWeight=\"500\"\n          buttonHandler={updateKpiHandler}\n        >\n          Update\n        </ButtonComp>\n      </Flex>\n    </Stack>\n  )\n}\n\nexport default EditEvent","import { Icon, useDisclosure, useToast } from '@chakra-ui/react';\nimport NoContent from 'app/components/NoContent';\nimport PopupComponent from 'app/components/PopupComponent';\nimport LoadingWrapper from 'app/pages/SyntheticMonitoring/components/LoadingWrapper';\nimport { useSyntheticMonitoringSlice } from 'app/pages/SyntheticMonitoring/slice';\nimport { selectSyntheticMonitoring } from 'app/pages/SyntheticMonitoring/slice/selectors';\nimport { PaginatedTable } from 'app/pages/TestAnalytics/components/Table'\nimport React, { useEffect } from 'react'\nimport { BsFillFileTextFill } from 'react-icons/bs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport EditEvent from './Features/EditEvent';\nimport LoadingComponent from 'app/components/LoadingComponent';\nfunction EventTable({deleteUserClickHandler}) {\n    const {actions} = useSyntheticMonitoringSlice();\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const dispatch = useDispatch();\n    const toast = useToast()\n    const {eventListData , loadingEvent , updateEventResponse}  = useSelector(selectSyntheticMonitoring);\n    const columns = [\n        {\n          Header: 'Event Name',\n          accessor: 'name',\n        },\n        {\n          Header: '',\n          accessor: 'id',\n        },\n        {\n          Header: 'Date Modified',\n          accessor: 'updatedAt',\n        },\n        {\n          Header: 'Id',\n          accessor: 'uuid',\n        },\n        {\n          Header: 'Created By',\n          accessor: 'createdBy',\n        }\n      \n        \n      ];\n      useEffect(() => {\n        dispatch(actions.loadEventListData());\n  \n      }, []);\n      useEffect(() => {\n        if ((updateEventResponse).hasOwnProperty('status')) {\n          if (updateEventResponse.status === 200) {\n            toast({\n              title: updateEventResponse.body.message,\n              status: 'success',\n              isClosable: true,\n              position: 'bottom-right',\n            });   \n            dispatch(actions.loadEventListData())\n           dispatch(actions.updatedEvent({}))\n                \n          }else{\n            toast({\n              title: updateEventResponse.body.message,\n              status: 'error',\n              isClosable: true,\n              position: 'bottom-right',\n            });\n          }\n          dispatch(actions.updatedEvent({}));\n        }\n      }, [updateEventResponse]);\n\n      const editUserClickHandler  = (response)=>{\n        dispatch(actions.EventEditPayload(response));\n        onOpen();\n      }\n      // const deleteUserClickHandler = ()=>{\n        if(loadingEvent){\n          return (<LoadingComponent h=\"500px\"></LoadingComponent> )\n        }\n      if( eventListData.length === 0){\n        return <NoContent message='No Data Found'></NoContent>\n      }\n  return (\n   \n    <>\n    <PaginatedTable\n    leftIcon={\n        <Icon\n          w=\"22px\"\n          h=\"20px\"\n          color=\"grey1\"\n          as={BsFillFileTextFill}\n        ></Icon>\n      }\n    type=\"journeyTable\"\n    editUserClickHandler={editUserClickHandler}\n    deleteUserClickHandler={deleteUserClickHandler}\n    rightHoverIcon={true}\n    data={eventListData}\n    columns={columns}\n  ></PaginatedTable>\n    <PopupComponent\n  title=\"Edit Event\"\n  buttonHandler1={onClose}\n  width=\"800px\"\n  footer={true}\n  isOpen={isOpen}\n  onClose={onClose}\n>\n        <EditEvent onClose={onClose}></EditEvent>\n</PopupComponent>\n  </>\n \n  )\n}\n\nexport default EventTable","import { Flex, Radio, RadioGroup, Stack, Text, useToast } from '@chakra-ui/react'\nimport ButtonComp from 'app/components/ButtonComp'\nimport PopupFooterCutomBotton from 'app/components/PopupFooterCutomBotton'\nimport InputComponent from 'app/pages/Appium/components/InputComponent'\nimport SelectComponent from 'app/pages/Appium/components/SelectComponent'\nimport LabelFieldComponent from 'app/pages/AutomationTest/components/LabelFieldComponent'\nimport AddKpi from 'app/pages/SyntheticMonitoring/components/AddKpi'\nimport AddKpiList from 'app/pages/SyntheticMonitoring/components/AddKpiList'\nimport CardComponent from 'app/pages/SyntheticMonitoring/components/CardComponent'\nimport CardTitleComponent from 'app/pages/SyntheticMonitoring/components/CardTitleComponent'\nimport CreateKpi from 'app/pages/SyntheticMonitoring/components/CreateKpi'\nimport { useSyntheticMonitoringSlice } from 'app/pages/SyntheticMonitoring/slice'\nimport { selectSyntheticMonitoring } from 'app/pages/SyntheticMonitoring/slice/selectors'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst getEvent = (eventItems , event )=>{\n  if(eventItems.length > 0){\nconst eventObj =    eventItems.filter( item => item.name === event)\n   return eventObj[0].uuid\n  }\nreturn {}\n}\n\nfunction EditJourney({onClose}) {\nconst [selectExistKpi, setSelectExistKpi] = useState('');\nconst [journeyName, setJourneyName] = useState('');\nconst [kpiMode, setKpiMode] = useState('1');\nconst [kpiType, setKpiType] = useState('');\n  const [selectStartEvent, setSelectStartEvent] = useState('');\n  const [selectEndEvent, setSelectEndEvent] = useState('');\n  const [kpiName, setKpiName] = useState('');\n  const [startEventName, setStartEventName] = useState('');\n  const [endEventName, setEndEventName] = useState('');\n  const [operationType, setOperationType] = useState('');\n\nconst {\n    journeyPayload,\n    kpiListData,\n    kpiPayload,\n    editItemState ,\n    updateItemfetch,\n    eventListData,\n    createEventError,\n    createEventResponse,\n    createKpiResponse,\n    createKpiError,\n  } = useSelector(selectSyntheticMonitoring);    \n  const dispatch = useDispatch();\n  const { actions } = useSyntheticMonitoringSlice();\n  const toast = useToast();\n  useEffect(() => {\n    dispatch(actions.loadKpiListData());\n    dispatch(actions.loadEventListData());\n  }, []);\n  useEffect(() => {\n    if (updateItemfetch.hasOwnProperty('status')) {\n      if (updateItemfetch.status === 200) {\n        // toast({\n        //   title: 'Kpi added successfully',\n        //   status: 'success',\n        //   isClosable: true,\n        //   position: 'bottom-right',\n        // });\n        dispatch(actions.createEditItems(updateItemfetch.body));\n      }else{\n        toast({\n          title: \"Something went wrong\",\n          status: 'error',\n          isClosable: true,\n          position: 'bottom-right',\n        });\n      }\n      dispatch(actions.itemUpdatedFetch({}));\n    }\n  }, [updateItemfetch]);\n\n\nconst updateJourneyHandler = ()=>{\n\n    const payload = { ...journeyPayload };\n    const kpiIds = editItemState.map(({uuid}) => uuid)\n    payload.kpi = [...kpiIds];\n    payload.name = journeyName\n    if( journeyPayload.uuid !==''){\n    dispatch(actions.loadUpdateJourney({id: journeyPayload.uuid , body : payload})); \n    onClose();\n    }\n}\n\nuseEffect(()=>{\nif(journeyPayload.hasOwnProperty('kpi'))\n{\n  dispatch(actions.insertEditItems(journeyPayload.kpi));\n  setJourneyName(journeyPayload.name)\n}\n},[journeyPayload])\n\nuseEffect(() => {\n  if (createEventResponse.hasOwnProperty('status')) {\n    if (createEventResponse.status === 200) {\n      toast({\n        title: createEventResponse.body.message,\n        status: 'success',\n        isClosable: true,\n        position: 'bottom-right',\n      });   \n      setStartEventName('');\n      setEndEventName('');\n      dispatch(actions.loadEventListData());\n \n    }else{\n      toast({\n        title: createEventResponse.body.message,\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n    }\n    dispatch(actions.eventCreated({}));\n  }\n}, [createEventResponse]);\nuseEffect(() => {\n  if (createEventError !== null && createEventError === 3) {\n    toast({\n      title: 'Something went wrong',\n      status: 'error',\n      isClosable: true,\n      position: 'bottom-right',\n    });\n    dispatch(actions.eventCraeteError(null));\n  }\n}, [createEventError]);\nuseEffect(() => {\n  if (createKpiResponse.hasOwnProperty('status')) {\n    if (createKpiResponse.status === 200) {\n      toast({\n        title: createKpiResponse.body.message,\n        status: 'success',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n       //console.log(createKpiResponse)\n      dispatch(actions.createEditItems(createKpiResponse.body.response));\n      setKpiName('');\n      setKpiType('');\n      setSelectStartEvent('');\n      setSelectEndEvent('');\n      dispatch(actions.loadKpiListData());\n\n    }else{\n      toast({\n        title: createKpiResponse.body.message,\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n    }\n    dispatch(actions.kpiCreated({}));\n  }\n}, [createKpiResponse]);\n\nuseEffect(() => {\n  if (createKpiError !== null && createKpiError === 3) {\n    toast({\n      title: 'Something went wrong',\n      status: 'error',\n      isClosable: true,\n      position: 'bottom-right',\n    });\n    dispatch(actions.kpiCraeteError(null));\n  }\n}, [createKpiError]);\nconst addEventHandler = eventType => {\n  if(eventType === 'Start' ){\n    if (!startEventName) {\n      toast({\n      title: 'Please Enter Name',\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n    });\n      return;\n  }\n}\n  if(eventType === 'End' ){\n    if (!endEventName) {\n      toast({\n      title: 'Please Enter Name',\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n    });\n      return;\n  }\n}\n  if (startEventName && eventType === 'Start') {\n    const eventObj = {\n      name: startEventName\n    };\n    ////console.log(eventObj);\n    dispatch(actions.loadCreateEvent(eventObj));\n  }\n  if (endEventName && eventType === 'End') {\n    const eventObj = {\n      name: endEventName\n    };\n    ////console.log(eventObj);\n    dispatch(actions.loadCreateEvent(eventObj));\n  }\n};\n\nconst addKpiHandler = () => {\n  if (kpiMode === '1') {\n    if(!kpiName){\n      toast({\n        title: 'Please Enter Name',\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n      return \n    }\n    if(!kpiType){\n      toast({\n        title: 'Please Select Type',\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n      return \n    }\n    if (kpiName !== '' && kpiType !== '') {\n      if (kpiType === 'latency' || kpiType === 'streaming') {\n        if(!selectStartEvent ||!selectEndEvent ){\n          toast({\n            title: 'Please Select Event',\n            status: 'error',\n            isClosable: true,\n            position: 'bottom-right',\n          });\n          return \n        }\n        if (selectStartEvent && selectEndEvent) {\n        const startEventId = getEvent(eventListData , selectStartEvent)\n        const endEventId =  getEvent(eventListData , selectEndEvent)\n      if(kpiType === 'streaming'  ){\n        if(!operationType){\n          toast({\n            title: 'Please Select operation Type',\n            status: 'error',\n            isClosable: true,\n            position: 'bottom-right',\n          });\n          return \n        }\n        const kpiObj = {\n          name: kpiName,\n          type: kpiType,\n          operation : operationType,\n          event: [\n            { eventId : startEventId , sequenceId : 1},\n            { eventId : endEventId , sequenceId : 2}\n          ],\n         \n        };\n   \n        dispatch(actions.loadCreateKpi(kpiObj));\n      }else{\n        const kpiObj = {\n          name: kpiName,\n          type: kpiType,\n          event: [\n            { eventId : startEventId , sequenceId : 1},\n            { eventId : endEventId , sequenceId : 2}\n          ],\n        };\n   \n        dispatch(actions.loadCreateKpi(kpiObj));\n      }\n        \n          //dispatch(actions.createKpiObject(kpiObj));\n        }\n      } else if (kpiType === 'state') {\n        if(!selectStartEvent){\n          toast({\n            title: 'Please Select Event',\n            status: 'error',\n            isClosable: true,\n            position: 'bottom-right',\n          });\n          return \n        }\n        const startEventId = getEvent(eventListData, selectStartEvent);\n        if (selectStartEvent) {\n          const kpiObj = {\n            name: kpiName,\n            type: kpiType,\n            event: [\n              { eventId : startEventId , sequenceId : 1}\n            ],\n          };\n          dispatch(actions.loadCreateKpi(kpiObj));\n        }\n      } else if (kpiType === 'metric') {\n        const kpiObj = {\n          name: kpiName,\n          type: kpiType,\n          event: []\n        };\n        //console.log(kpiObj);\n        dispatch(actions.loadCreateKpi(kpiObj));\n        //dispatch(actions.createKpiObject(kpiObj));\n      } else {\n        //console.log('kpi not selected');\n      }\n    }\n  } else if (kpiMode === '2') {\n    if(!selectExistKpi){\n      toast({\n        title: 'Please Select Kpi',\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n      return \n    }\n    if (selectExistKpi && kpiListData.length > 0) {\n      // //console.log(selectExistKpi);\n        const getItem = kpiListData.filter(\n          item => item.name === selectExistKpi,\n        );\n     if(getItem.length > 0) {\n      dispatch(actions.loadUpdateFetchItem({id: getItem[0].uuid , name: 'kpi'}))   \n     }\n     \n      // //console.log(filetrKpi);\n    }\n  };\n}\n\nconst props = {\n  setKpiName,\n  kpiName,\n  kpiType,\n  setKpiType,\n  operationType,\n  setOperationType,\n  setStartEventName,\n  startEventName,\n  selectStartEvent,\n  setSelectStartEvent,\n  setSelectEndEvent,\n  endEventName,\n  eventListData,\n  addEventHandler,\n  setEndEventName,\n  selectEndEvent,\n};\n\n\nreturn (\n    \n    <Stack width=\"100%\" padding=\"20px\" >\n     \n            <LabelFieldComponent label=\" Journey Name\">\n        <InputComponent\n          setInputValue={setJourneyName}\n          inputValue={journeyName}\n          title=\"Enter Journey Name\"\n        ></InputComponent>\n      </LabelFieldComponent>\n         <LabelFieldComponent>\n        <RadioGroup defaultValue=\"1\" onChange={setKpiMode} value={kpiMode}>\n          <Stack spacing={5} direction=\"row\">\n            <Radio colorScheme=\"green\" value=\"1\">\n              Create New KPI\n            </Radio>\n                <Radio colorScheme=\"green\" value=\"2\">\n              Choose Existing KPI\n            </Radio>\n          \n          </Stack>\n        </RadioGroup>\n      </LabelFieldComponent>\n      { kpiMode === '1' && (\n        <>\n      <CreateKpi {...props}></CreateKpi>\n        </>\n   \n      )}\n      { kpiMode === '2' && (\n        <>\n           <AddKpi selectExistKpi={selectExistKpi}\n    setSelectExistKpi={setSelectExistKpi}\n    kpiListData={kpiListData} ></AddKpi>\n        </>\n      )}\n      <LabelFieldComponent>\n        <ButtonComp\n          buttonHandler={addKpiHandler}\n          padding=\"7px 12px\"\n          backgroundColor=\"blue1\"\n          color=\"white\"\n        >\n          Add KPI\n        </ButtonComp>\n      </LabelFieldComponent>\n      {/* <LabelFieldComponent> */}\n      <Flex alignItems=\"center\" width=\"700px\">\n        <Flex\n          alignItems=\"center\"\n          padding=\"2px\"\n          width=\"100%\"\n          css={{\n            '&::-webkit-scrollbar': {\n              height: '6px',\n              border: '5px solid #F3F6F9',\n            },\n            '&::-webkit-scrollbar-track': {\n              boxShadow: 'inset 0 0 6px white',\n            },\n            '&::-webkit-scrollbar-thumb': {\n              backgroundColor: '#C1C1C1',\n              borderRadius: '5px',\n              boreder: '2px solid',\n            },\n          }}\n          overflow=\"auto\"\n        >\n          {/* {kpiPayload.length > 0 && (\n            <>\n              {kpiPayload.map((item, index) => (\n                <CardComponent key={index} kpiData={item}></CardComponent>\n              ))}\n            </>\n          )} */}\n          {editItemState.length > 0 && (\n            <>\n              {editItemState.map((item, index) => (\n                <CardTitleComponent isEdit={true} type=\"KPI\" key={index} kpiData={item}></CardTitleComponent>\n              ))}\n            </>\n          )}\n        </Flex>\n      </Flex>\n      <Flex\n        borderTop=\"1px solid\"\n        paddingTop=\"5px\"\n        borderColor=\"grey16\"\n        justify=\"end\"\n        width=\"100%\"\n      >\n        <ButtonComp\n          name=\"cancel-edit-user-button\"\n          borderColor=\"white3\"\n          color=\"grey1\"\n          width=\"95px\"\n          buttonHandler={onClose}\n          fontWeight=\"500\"\n        >\n          Cancel\n        </ButtonComp>\n        <ButtonComp\n          backgroundColor=\"blue1\"\n          name=\"update-edit-user-button\"\n          borderColor=\"blue1\"\n          color=\"white\"\n          width=\"95px\"\n          fontWeight=\"500\"\n          buttonHandler={updateJourneyHandler}\n        >\n          Update\n        </ButtonComp>\n      </Flex>\n    </Stack>\n  )\n}\n\nexport default EditJourney","import { Flex, Icon, Text, useDisclosure, useToast } from '@chakra-ui/react';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport NoContent from 'app/components/NoContent';\nimport PopupComponent from 'app/components/PopupComponent';\nimport LoadingWrapper from 'app/pages/SyntheticMonitoring/components/LoadingWrapper';\nimport { useSyntheticMonitoringSlice } from 'app/pages/SyntheticMonitoring/slice';\nimport { selectSyntheticMonitoring } from 'app/pages/SyntheticMonitoring/slice/selectors';\nimport { PaginatedTable } from 'app/pages/TestAnalytics/components/Table'\nimport React, { useEffect, useState } from 'react'\nimport { BsFillFileTextFill } from 'react-icons/bs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport KpiConfiguration from '../../../KpiConfiguration';\nimport EditJourney from './Features/EditJourney';\n\nconst columns = [\n  {\n    Header: 'Journey Name',\n    accessor: 'name',\n  },\n  {\n    Header: '',\n    accessor: 'project',\n  },\n\n  {\n    Header: 'Date Modified',\n    accessor:'updatedAt'\n  },\n  {\n    Header: 'id',\n    accessor:'uuid'\n  },\n  {\n    Header: 'Created By',\n    accessor: 'createdBy',\n  },\n\n];\n\nfunction JourneyTable({deleteUserClickHandler}) {\n    const {actions} = useSyntheticMonitoringSlice();\n    const dispatch = useDispatch();\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const [getDeleteItemId, setDeleteItemId] = useState();\n    //const [getEditJourney, setEditJourney] = useState({});\n    const {journeyListData , loadingJourney ,loadingDeleteJourney , updateJourneyResponse}  = useSelector(selectSyntheticMonitoring);\n  const toast = useToast();\n    \n      useEffect(() => {\n        dispatch(actions.loadJourneyListData());\n        \n      }, []);\n    \nconst editUserClickHandler  = (response)=>{\n   // console.log(response)\n    dispatch(actions.loadUpdateFetchItem({id : response.uuid , name : \"journey\"}));\n  //  dispatch(actions.createJourneyPayload(response));\n\n  // dispatch(actions.insertEditItems(response.kpis));\n    onOpen();\n}\nuseEffect(() => {\n  if ((updateJourneyResponse).hasOwnProperty('status')) {\n    if (updateJourneyResponse.status === 200) {\n      toast({\n        title: updateJourneyResponse.body.message,\n        status: 'success',\n        isClosable: true,\n        position: 'bottom-right',\n      });   \n      dispatch(actions.loadJourneyListData())\n     dispatch(actions.updatedJourney({}))\n          \n    }else{\n      toast({\n        title: updateJourneyResponse.body.message,\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n    }\n    dispatch(actions.updatedJourney({}));\n  }\n}, [updateJourneyResponse]);\nif(loadingJourney){\n  return (<LoadingComponent h=\"500px\"></LoadingComponent> )\n}\n\nif( journeyListData.length === 0){\n  return <NoContent message='No Data Found'></NoContent>\n}\n\n  return (\n    \n  \n      <>\n\n    <PaginatedTable\n                  leftIcon={\n                    <Icon\n                      w=\"22px\"\n                      h=\"20px\"\n                      color=\"grey1\"\n                      as={BsFillFileTextFill}\n                    ></Icon>\n                  }\n                  type=\"journeyTable\"\n                  editUserClickHandler={editUserClickHandler}\n                  deleteUserClickHandler={deleteUserClickHandler}\n                  rightHoverIcon={true}\n                  data={journeyListData}\n                  columns={columns}\n                ></PaginatedTable>\n                 <PopupComponent\n        title=\"Edit Journey\"\n        buttonHandler1={onClose}\n        width=\"800px\"\n        footer={true}\n        isOpen={isOpen}\n        onClose={onClose}\n      >\n        {/* <EditUserPopup onClose={onClose} userData={userInfo}></EditUserPopup> */}\n        <EditJourney onClose={onClose} ></EditJourney>\n      </PopupComponent>\n      </>\n       \n  )\n}\n\nexport default JourneyTable","import { Flex, Stack, Text, useToast } from '@chakra-ui/react'\nimport ButtonComp from 'app/components/ButtonComp'\nimport InputComponent from 'app/pages/Appium/components/InputComponent'\nimport SelectComponent from 'app/pages/Appium/components/SelectComponent'\nimport LabelFieldComponent from 'app/pages/AutomationTest/components/LabelFieldComponent'\nimport CardComponent from 'app/pages/SyntheticMonitoring/components/CardComponent'\nimport CardTitleComponent from 'app/pages/SyntheticMonitoring/components/CardTitleComponent'\nimport CreateEvent from 'app/pages/SyntheticMonitoring/components/CreateEvent'\nimport { useSyntheticMonitoringSlice } from 'app/pages/SyntheticMonitoring/slice'\nimport { selectSyntheticMonitoring } from 'app/pages/SyntheticMonitoring/slice/selectors'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\n\nconst selectKpiTypeOptions = [\n  { name: 'state' },\n  { name: 'latency' },\n  { name: 'streaming' },\n  { name: 'metric' },\n];\nconst selectOperationTypeOptions = [{ name: 'SUM' }, { name: 'PERCENTAGE' },\n{ name: 'COUNT' }\n];\nconst getEvent = (eventItems , event )=>{\n  if(eventItems.length > 0 && event){\nconst eventObj =    eventItems.filter( item => item.name === event)\n   return eventObj[0].uuid\n  }\nreturn {}\n}\n\nfunction EditKpi({onClose}) {\nconst [selectExistItem, setSelectExistItem] = useState('')\nconst [startEventName, setStartEventName] = useState('');\nconst [endEventName, setEndEventName] = useState('');\nconst [selectStartEvent, setSelectStartEvent] = useState('');\nconst [selectEndEvent, setSelectEndEvent] = useState('');\nconst [kpiName, setKpiName] = useState('')\nconst [kpiType, setKpiType] = useState('');\nconst [operationType, setOperationType] = useState('');\nconst {\n  updateItemfetch,\n    journeyPayload,\n    eventListData,\n    editItemState ,\n    kpiEditPayloadState ,\n    createEventResponse ,\n    createEventError\n\n  } = useSelector(selectSyntheticMonitoring);    \n  const dispatch = useDispatch();\n  const toast = useToast();\n  const {actions} = useSyntheticMonitoringSlice();\n  useEffect(() => {\n    dispatch(actions.loadEventListData())\n  }, []);\n \n\nuseEffect(() => {\n  if (createEventResponse.hasOwnProperty('status')) {\n    if (createEventResponse.status === 200) {\n      toast({\n        title: createEventResponse.body.message,\n        status: 'success',\n        isClosable: true,\n        position: 'bottom-right',\n      });   \n      setStartEventName('');\n      setEndEventName('');\n      dispatch(actions.loadEventListData());\n \n    }else{\n      toast({\n        title: createEventResponse.body.message,\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n    }\n    dispatch(actions.eventCreated({}));\n  }\n}, [createEventResponse]);\nuseEffect(() => {\n  if (createEventError !== null && createEventError === 3) {\n    toast({\n      title: 'Something went wrong',\n      status: 'error',\n      isClosable: true,\n      position: 'bottom-right',\n    });\n    dispatch(actions.eventCraeteError(null));\n  }\n}, [createEventError]);\nuseEffect(()=>{\n  if(kpiEditPayloadState.hasOwnProperty('event'))\n  {\n\n    dispatch(actions.insertEditItems(kpiEditPayloadState.event));\n    setKpiName(kpiEditPayloadState.name)\n    setKpiType(kpiEditPayloadState.type);\n    if(kpiEditPayloadState.event.length > 1 && (kpiEditPayloadState.type === 'streaming' || kpiEditPayloadState.type === 'latency')){\n    \n      if(kpiEditPayloadState.event[0].sequenceId === 1){\n        setSelectStartEvent(kpiEditPayloadState.event[0].name)\n        setSelectEndEvent(kpiEditPayloadState.event[1].name)\n      }else{\n        setSelectStartEvent(kpiEditPayloadState.event[1].name)\n        setSelectEndEvent(kpiEditPayloadState.event[0].name)\n      }\n      setOperationType(kpiEditPayloadState.operation)\n     \n    }else if(kpiEditPayloadState.event.length === 1  && kpiEditPayloadState.type === 'state'){\n      setSelectStartEvent(kpiEditPayloadState.event[0].name)\n    }\n    \n    //dispatch(actions.KpiEditPayload(journeyPayload))\n  }\n  },[kpiEditPayloadState])\n\n  const updateKpiHandler = () => {\n    if (kpiName !== '' && kpiType !== '') {\n      if (kpiType === 'latency' || kpiType === 'streaming') {\n        if (selectStartEvent && selectEndEvent) {\n        const startEventId = getEvent(eventListData , selectStartEvent)\n        const endEventId =  getEvent(eventListData , selectEndEvent)\n      if(kpiType === 'streaming'  ){\n        if(operationType === ''){\n\n          return \n        }\n        const kpiObj = {\n          name: kpiName,\n          type: kpiType,\n          operation : operationType,\n          event: [\n            { eventId : startEventId , sequenceId : 1},\n            { eventId : endEventId , sequenceId : 2}\n          ],\n         \n        };\n        if( kpiEditPayloadState.uuid !==''){\n          dispatch(\n            actions.loadUpdateKpi({ id: kpiEditPayloadState.uuid, body: kpiObj }),\n          );\n          onClose();\n        }\n   \n        //dispatch(actions.loadCreateKpi(kpiObj));\n      }else{\n        const kpiObj = {\n          name: kpiName,\n              type: kpiType,\n          event: [\n            { eventId : startEventId , sequenceId : 1},\n            { eventId : endEventId , sequenceId : 2}\n          ],\n        };\n   \n       // dispatch(actions.loadCreateKpi(kpiObj));\n       if( kpiEditPayloadState.uuid !==''){\n        dispatch(\n          actions.loadUpdateKpi({ id: kpiEditPayloadState.uuid, body: kpiObj }),\n        );\n        onClose();\n      }\n      }\n        \n          //dispatch(actions.createKpiObject(kpiObj));\n        }\n      } else if (kpiType === 'state') {\n        const startEventId = getEvent(eventListData, selectStartEvent);\n        if (selectStartEvent) {\n          const kpiObj = {\n            name: kpiName,\n            type: kpiType,\n            event: [\n              { eventId : startEventId , sequenceId : 1}\n            ],\n          };\n          //dispatch(actions.loadCreateKpi(kpiObj));\n          if( kpiEditPayloadState.uuid !==''){\n            dispatch(\n              actions.loadUpdateKpi({ id: kpiEditPayloadState.uuid, body: kpiObj }),\n            );\n            onClose();\n          }\n        }\n      } else if (kpiType === 'metric') {\n        const kpiObj = {\n          name: kpiName,\n          type: kpiType,\n          event: []\n        };\n        //console.log(kpiObj);\n       // dispatch(actions.loadCreateKpi(kpiObj));\n        if( kpiEditPayloadState.uuid !==''){\n          dispatch(\n            actions.loadUpdateKpi({ id: kpiEditPayloadState.uuid, body: kpiObj }),\n          );\n          onClose();\n        }\n        //dispatch(actions.createKpiObject(kpiObj));\n      } else {\n      \n      }\n    }\n    // const payload = { ...kpiEditPayloadState };\n    // //const eventIds = editItemState.map(({uuid}) => uuid)\n    // payload.event = [...eventIds];\n    // payload.type = kpiType ;\n    // payload.name = kpiName ;\n\n\n}\n\nconst addEventHandler = eventType => {\n  if(eventType === 'Start' ){\n    if (!startEventName) {\n      toast({\n      title: 'Please Enter Name',\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n    });\n      return;\n  }\n}\n  if(eventType === 'End' ){\n    if (!endEventName) {\n      toast({\n      title: 'Please Enter Name',\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n    });\n      return;\n  }\n}\n  if (startEventName && eventType === 'Start') {\n    const eventObj = {\n      name: startEventName\n    };\n    ////console.log(eventObj);\n    dispatch(actions.loadCreateEvent(eventObj));\n  }\n  if (endEventName && eventType === 'End') {\n    const eventObj = {\n      name: endEventName\n    };\n    ////console.log(eventObj);\n    dispatch(actions.loadCreateEvent(eventObj));\n  }\n};\nconst startEventProps =  {type : 'Start' , eventListData ,addEventHandler   , setEventName : setStartEventName , eventName : startEventName , selectEvent : selectStartEvent ,setSelectEvent : setSelectStartEvent };\nconst endEventProps = {type : 'End' , eventListData , addEventHandler , setEventName : setEndEventName , eventName : endEventName , selectEvent : selectEndEvent ,setSelectEvent : setSelectEndEvent };\nreturn (\n    \n    <Stack width=\"100%\" padding=\"20px\" >\n           \n  <>\n          <LabelFieldComponent label=\"KPI Name\" isRequired={true}>\n            <InputComponent\n              setInputValue={setKpiName}\n              inputValue={kpiName}\n              title=\"Kpi Name\"\n            ></InputComponent>\n          </LabelFieldComponent>\n          <LabelFieldComponent label=\"KPI Type\" isRequired={true}>\n            <SelectComponent\n              name=\"xcui\"\n              type=\"project\"\n              selectValue={kpiType}\n              setSelectValue={setKpiType}\n              selectOptions={selectKpiTypeOptions}\n              title=\"Kpi Type\"\n            ></SelectComponent>\n          </LabelFieldComponent>\n          {kpiType === 'streaming' && <LabelFieldComponent isRequired={true} label=\"Operation\">\n          <SelectComponent\n                  name=\"xcui\"\n                  type=\"project\"\n                  selectValue={operationType}\n                  setSelectValue={setOperationType}\n                  selectOptions={selectOperationTypeOptions}\n                  title=\"Select Type\"\n                ></SelectComponent>\n          </LabelFieldComponent> }\n          {(kpiType === 'latency' ||\n            kpiType === 'streaming' ||\n            kpiType === 'state') && (\n            <>\n              {/* <LabelFieldComponent label=\"Start Event Name\" isRequired={true}>\n                <SelectComponent\n                  name=\"xcui\"\n                  type=\"project\"\n                  setSelectValue={setSelectStartEvent}\n                  selectValue={selectStartEvent}\n                  selectOptions={eventListData}\n                  title=\"Select Start Event\"\n                ></SelectComponent>\n              </LabelFieldComponent> */}\n             <CreateEvent {...startEventProps}></CreateEvent>\n             \n            </>\n          )}\n          {(kpiType === 'latency' || kpiType === 'streaming') && (\n            <>\n             <CreateEvent {...endEventProps}></CreateEvent>\n              {/* <LabelFieldComponent label=\"End Event Name\" isRequired={true}>\n              \n                <SelectComponent\n                  name=\"xcui\"\n                  type=\"project\"\n                  selectValue={selectEndEvent}\n                  setSelectValue={setSelectEndEvent}\n                  selectOptions={eventListData}\n                  title=\"Select Event Event\"\n                ></SelectComponent>\n              </LabelFieldComponent>\n             \n            */}\n            </>\n          )}\n        </>\n        \n      {/* <LabelFieldComponent> */}\n      <Flex alignItems=\"center\" width=\"700px\">\n        <Flex\n          alignItems=\"center\"\n          padding=\"2px\"\n          width=\"100%\"\n          css={{\n            '&::-webkit-scrollbar': {\n              height: '6px',\n              //height: '30px',\n              border: '5px solid #F3F6F9',\n            },\n            '&::-webkit-scrollbar-track': {\n              boxShadow: 'inset 0 0 6px white',\n            },\n            '&::-webkit-scrollbar-thumb': {\n              backgroundColor: '#C1C1C1',\n              borderRadius: '5px',\n              boreder: '2px solid',\n            },\n          }}\n          overflow=\"auto\"\n        >\n          {/* {editItemState.length > 0 && (\n            <>\n              {editItemState.map((item, index) => (\n                <CardTitleComponent type=\"Event\" key={index} kpiData={item}></CardTitleComponent>\n              ))}\n            </>\n          )} */}\n        </Flex>\n      </Flex>\n      <Flex\n        borderTop=\"1px solid\"\n        paddingTop=\"5px\"\n        borderColor=\"grey16\"\n        justify=\"end\"\n        width=\"100%\"\n      >\n        <ButtonComp\n          name=\"cancel-edit-user-button\"\n          borderColor=\"white3\"\n          color=\"grey1\"\n          width=\"95px\"\n          buttonHandler={onClose}\n          fontWeight=\"500\"\n        >\n          Cancel\n        </ButtonComp>\n        <ButtonComp\n          backgroundColor=\"blue1\"\n          name=\"update-edit-user-button\"\n          borderColor=\"blue1\"\n          color=\"white\"\n          width=\"95px\"\n          fontWeight=\"500\"\n          buttonHandler={updateKpiHandler}\n        >\n          Update\n        </ButtonComp>\n      </Flex>\n    </Stack>\n  )\n}\n\nexport default EditKpi","//@ts-nocheck\nimport { Icon, useDisclosure, useToast } from '@chakra-ui/react';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport NoContent from 'app/components/NoContent';\nimport PopupComponent from 'app/components/PopupComponent';\nimport LoadingWrapper from 'app/pages/SyntheticMonitoring/components/LoadingWrapper';\nimport { useSyntheticMonitoringSlice } from 'app/pages/SyntheticMonitoring/slice';\nimport { selectSyntheticMonitoring } from 'app/pages/SyntheticMonitoring/slice/selectors';\nimport { PaginatedTable } from 'app/pages/TestAnalytics/components/Table'\nimport React, { useEffect } from 'react'\nimport { BsFillFileTextFill } from 'react-icons/bs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport EditKpi from './Features/EditKpi';\n\nfunction KpiTable({deleteUserClickHandler}) {\n  const { actions } = useSyntheticMonitoringSlice();\n  const dispatch = useDispatch();\n  const toast = useToast();\n  const { kpiListData, loadingKpi , updateKpiResponse , updateKpiError , loadingDeleteJourney} = useSelector(selectSyntheticMonitoring);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const columns = [\n      {\n        Header: 'Kpi Name',\n        accessor: 'name',\n      },\n      {\n        Header: 'Type',\n        accessor: 'type',\n      },\n    \n      {\n        Header: 'Date Modified',\n        accessor: 'updatedAt',\n      },\n      {\n        Header: 'Id',\n        accessor: 'uuid',\n      },\n      {\n        Header: 'Created By',\n        accessor: 'createdBy',\n      }\n    ];\n    useEffect(() => {\n      dispatch(actions.loadKpiListData());\n    }, []);\n    const editUserClickHandler  = (response)=>{\n     dispatch(actions.loadUpdateFetchItem({id : response.uuid , name : \"kpi\"}));\n     onOpen();\n    }\n    useEffect(() => {\n      if ((updateKpiResponse).hasOwnProperty('status')) {\n        if (updateKpiResponse.status === 200) {\n          toast({\n            title: updateKpiResponse.body.message,\n            status: 'success',\n            isClosable: true,\n            position: 'bottom-right',\n          });   \n          dispatch(actions.loadKpiListData())\n         dispatch(actions.updatedKpi({}))\n              \n        }else{\n          toast({\n            title: updateKpiResponse.body.message,\n            status: 'error',\n            isClosable: true,\n            position: 'bottom-right',\n          });\n        }\n        dispatch(actions.updatedKpi({}));\n      }\n    }, [updateKpiResponse]);\n     useEffect(()=>{\n    if (updateKpiError !== null && updateKpiError === 3) {\n      toast({\n        title: \"Something went wrong\",\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n      dispatch(actions.updateKpiError(null));\n    }\n  }, [updateKpiError]);\n\n\n  if(loadingKpi){\n    return (<LoadingComponent h=\"500px\"></LoadingComponent> )\n  }\n\nif( kpiListData.length === 0){\n  return <NoContent message='No Data Found'></NoContent>\n}\n\n\n  return (\n \n      <>\n    \n <PaginatedTable\n leftIcon={\n  <Icon\n    w=\"22px\"\n    h=\"20px\"\n    color=\"grey1\"\n    as={BsFillFileTextFill}\n  ></Icon>\n}\n  type=\"journeyTable\"\n  editUserClickHandler={editUserClickHandler}\n  deleteUserClickHandler={deleteUserClickHandler}\n  rightHoverIcon={true}\n  data={kpiListData}\n  columns={columns}\n></PaginatedTable>\n  <PopupComponent\n  title=\"Edit Kpi\"\n  buttonHandler1={onClose}\n  width=\"800px\"\n  footer={true}\n  isOpen={isOpen}\n  onClose={onClose}\n>\n        <EditKpi onClose={onClose}></EditKpi>\n</PopupComponent>\n</>\n  )\n}\n\nexport default KpiTable","import { Flex, Text, useDisclosure, useToast } from '@chakra-ui/react'\nimport LoadingComponent from 'app/components/LoadingComponent'\nimport PopupComponent from 'app/components/PopupComponent'\nimport SubLayout from 'app/components/SubLayout'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport LoaderOverlay from '../../components/LoaderOverlay'\nimport TabTables from '../../components/TabTables'\nimport { useSyntheticMonitoringSlice } from '../../slice'\nimport { selectSyntheticMonitoring } from '../../slice/selectors'\nimport EventTable from './Features/EventTable'\nimport JourneyTable from './Features/JourneyTable'\nimport KpiTable from './Features/KpiTable'\n\nfunction JourneySummary({}) {\n  const {deleteJourneyResponse , loadingDeleteJourney ,  loadingUpdateJourney, loadingUpdateKpi , loadingUpdateEvent} = useSelector(\n    selectSyntheticMonitoring);\n    const toast = useToast();\n  const listofTabs = ['Journey' , 'KPI' ,'Event' ]\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [getDeleteItemId, setDeleteItemId] = useState({});\n  const dispatch = useDispatch()\n  const {actions} = useSyntheticMonitoringSlice();\n\n\n  useEffect(() => {\n    if ((deleteJourneyResponse).hasOwnProperty('status')) {\n      if (deleteJourneyResponse.status === 200) {\n        toast({\n          title: deleteJourneyResponse.body.message,\n          status: 'success',\n          isClosable: true,\n          position: 'bottom-right',\n        });   \n        dispatch(actions.loadJourneyListData())\n        dispatch(actions.loadKpiListData())\n        dispatch(actions.loadEventListData())\n            \n      }else{\n        toast({\n          title: deleteJourneyResponse.body.message,\n          status: 'error',\n          isClosable: true,\n          position: 'bottom-right',\n        });\n      }\n      dispatch(actions.itemDeleted({}));\n    }\n  }, [deleteJourneyResponse]);\n\n  const deleteUserClickHandlerJourney = (id)=>{\n    setDeleteItemId({id , name : 'journey'})\n  onOpen()\n  }\n  const deleteUserClickHandlerKpi = (id)=>{\n    setDeleteItemId({id , name : 'kpi'})\n  onOpen()\n  }\n  const deleteUserClickHandlerEvent = (id)=>{\n    setDeleteItemId({id , name: 'event'})\n  onOpen()\n  }\n  const deleteButtonHandler = () => {\n    //console.log(getDeleteItemId)\n    dispatch(actions.loadDeleteItem(getDeleteItemId));\n    onClose();\n  };\n\n\n  const listofComponents = [ <JourneyTable deleteUserClickHandler={deleteUserClickHandlerJourney} ></JourneyTable> ,\n   <KpiTable deleteUserClickHandler={deleteUserClickHandlerKpi} ></KpiTable> ,\n    <EventTable deleteUserClickHandler={deleteUserClickHandlerEvent}></EventTable> ]\n  return (\n    <LoaderOverlay isloading={ loadingDeleteJourney ||  loadingUpdateJourney || loadingUpdateKpi || loadingUpdateEvent}>\n  \n    <SubLayout>\n\n     <>\n      <TabTables listofTabs={listofTabs} listofComponents={listofComponents} ></TabTables> \n      <PopupComponent\n        title=\"Delete\"\n        buttonHandler1={onClose}\n        width=\"450px\"\n        //footer={true}\n        isOpen={isOpen}\n        onClose={onClose}\n        buttonTitle1=\"Cancel\"\n        buttonTitle2=\"Delete\"\n        buttonHandler1={onClose}\n        buttonHandler2={deleteButtonHandler}\n      >\n        <Flex\n          justify=\"center\"\n          width=\"100%\"\n          align=\"center\"\n          justifyItems=\"center\"\n        >\n          <Text textAlign=\"center\">Are you sure delete ? </Text>\n        </Flex>\n      </PopupComponent>\n       </>\n       </SubLayout>\n\n       </LoaderOverlay>\n  )\n}\n\nexport default JourneySummary","// @ts-nocheck\nimport TabsComponent from 'app/components/TabsComponent';\nimport React from 'react';\nimport JourneySummary from './Features/JourneySummary';\nimport KpiBuilder from './Features/KpiBuilder';\n\nexport function SyntheticsMonitoring() {\n  const listofTabs = ['Journey Summary'];\n  const listOfComponents = [\n    <JourneySummary></JourneySummary>,\n  ];\n  return (\n    <>\n      <TabsComponent\n        isLazy={true}\n        isSubContainer={true}\n        listofTabs={listofTabs}\n        listofComponents={listOfComponents}\n      ></TabsComponent>\n    </>\n  );\n}\n"],"sourceRoot":""}