{"version":3,"sources":["app/pages/AppProfiling/slice/types.ts","app/pages/AppProfiling/slice/saga.ts","app/pages/AppProfiling/slice/index.ts","app/pages/AppProfiling/slice/selectors.ts","app/pages/AppProfiling/components/DropdownComp.tsx","styles/Assets/Icon material-content-copy.svg","app/pages/AppProfiling/components/ListComp.tsx","app/pages/AppProfiling/components/ChartWrapper.tsx","app/pages/AppProfiling/components/Charts.tsx","app/pages/AppProfiling/components/EventPointer.tsx","app/pages/AppProfiling/components/SliderAxis.tsx","app/pages/AppProfiling/components/NoDataChart.tsx","app/pages/AppProfiling/index.tsx"],"names":["AppProfilingErrorType","BASE_URL","REACT_APP_TEST_ANALYTICS_BASE_URL","getAppProfilingData","params","idToken","GetIdToken","requestURL","concat","payload","testId","name","config","method","headers","Authorization","AppProfilingData","call","request","Object","keys","body","length","put","actions","AppProfilingDataLoaded","data","columns","id","i","AppProfilingDataError","RESPONSE_ERROR","err","AppProfilingSaga","takeEvery","loadAppProfilingData","type","initialState","loading","error","slice","createSlice","reducers","state","action","push","AppProfilingActions","useAppProfilingSlice","useInjectReducer","key","reducer","useInjectSaga","saga","selectSlice","AppProfiling","selectAppProfilingData","createSelector","selectLoading","selectError","DropdownComp","_ref","kpiData","selectKpi","setSelectKpi","_jsx","Flex","textTransform","fontFamily","fontWeight","position","alignItems","justifyContent","width","height","boxSizing","borderRadius","top","right","backgroundColor","boxShadow","color","zIndex","children","Select","fontSize","border","_focus","size","value","onChange","e","target","map","option","ListComp","kpiValue","copyIcon","setCopyIcon","useState","Accordion","borderTop","allowMultiple","padding","_jsxs","AccordionItem","paddingTop","AccordionButton","paddingRight","display","_hover","Box","textAlign","paddingLeft","CopyToClipboard","text","JSON","stringify","onCopy","setCopyIconHandler","setTimeout","Icon","cursor","as","MdContentCopy","TiTick","AccordionIcon","AccordionPanel","flexDirection","borderBottom","Text","avg","unit","max","min","ChartWrapper","shadow","title","_Fragment","flexWrap","borderColor","left","Charts","isLoading","dataValue","setDataValue","testSessionData","useSelector","selectTestSessionData","startTime","testStartTime","endTime","testEndTime","useEffect","chartLabel","chartData","kpi","datas","item","TimeStamp","makeChartData","options","responsive","maintainAspectRatio","drawBorder","elements","point","radius","pointStyle","line","plugins","datalabels","align","fullSize","bottom","font","family","weight","tooltip","enabled","callbacks","tooltipItems","index","dataIndex","timeStamp","dataset","labels","dateTimeConverter","legend","scales","x","time","displayFormats","ticks","beginAtZero","grid","borderWidth","y","mirror","callback","values","drawTicks","tickMarkLength","tickLength","lineWidth","drawOnChartArea","datasets","label","fill","pointBorder","pointBorderColor","justifyItems","Line","style","relativepos","arr","columnPos","draw","testcase","tipRef","eventRef","w","h","fillStyle","slide","current","beginPath","moveTo","lineTo","strokeStyle","stroke","start","tippos","drawArea","EventPointer","isLeft","useRef","tooltipRef","eventElement","getContext","getBoundingClientRect","window","innerWidth","innerHeight","handleResize","canvas","mouseHandler","val","clientX","filter","background","bgColor","save","clearRect","fillRect","fillText","eventName","testCase","restore","addEventListener","removeEventListener","ref","getTwoDigitFormat","SliderAxis","duration","setLabels","isEnableEvent","setEventEnable","summaryTableData","selectsummaryTableData","ticksize","Date","valueOf","interval","unit2","perfect","Math","floor","toFixed","makeLabels","margin","paddingBottom","HStack","alignContent","Switch","isFocusable","isChecked","checked","marginTop","whiteSpace","NoDataChart","flexdirection","justify","kpiList","useParams","dispatch","useDispatch","startTimeIST","endTimeIST","LoadingComponent","overflowY","css","boreder","bg","sort","a","b","NoContent","message","repoErrorText"],"mappings":"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","file":"static/js/28.d9740768.chunk.js","sourcesContent":["/* --- STATE --- */\n\nimport { AppProfilingData } from 'types/AppProfiling';\n\n/* --- STATE --- */\nexport interface AppProfilingState {\n  loading: boolean;\n  error?: AppProfilingErrorType | null;\n  AppProfilingData: AppProfilingData[];\n}\n\nexport enum AppProfilingErrorType {\n  RESPONSE_ERROR = 1,\n  TEST_NOT_FOUND = 2,\n}\n","// @ts-nocheck\nimport { call, put, takeLatest, delay, takeEvery } from 'redux-saga/effects';\nimport { request } from 'utils/request';\nimport { AppProfilingActions as actions } from '.';\nimport { AppProfilingData } from 'types/AppProfiling';\nimport { AppProfilingErrorType } from './types';\nimport GetIdToken from 'Authentication/configuration/GetIdToken';\nimport { REACT_APP_TEST_ANALYTICS_BASE_URL } from 'utils/enviroment';\n\nconst BASE_URL = REACT_APP_TEST_ANALYTICS_BASE_URL;\n\n/**\n * Github repos request/response handler\n */\nexport function* getAppProfilingData(params) {\n  const idToken = GetIdToken();\n  //console.log(params.payload);\n  // yield delay(1000);\n  //  const requestURL = `${BASE_URL}/test-session`;\n  const requestURL = `${BASE_URL}/tests/${params.payload.testId}/device/resource/${params.payload.name}`;\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n\n  try {\n    // Call our request helper (see 'utils/request')\n    const AppProfilingData = yield call(request, requestURL, config);\n    // console.log(AppProfilingData);\n    if (Object.keys(AppProfilingData.body).length !== 0) {\n      // console.log(AppProfilingData.body.columns);\n      yield put(\n        actions.AppProfilingDataLoaded({\n          data: AppProfilingData.body.columns,\n          name: params.payload.name,\n          id: params.payload.i,\n        }),\n      );\n    } else {\n      yield put(\n        actions.AppProfilingDataError(AppProfilingErrorType.RESPONSE_ERROR),\n      );\n    }\n  } catch (err) {\n    /*\n    if (err.response?.status === 404) {\n      yield put(actions.repoError(RepoErrorType.USER_NOT_FOUND));\n    } else if (err.message === 'Failed to fetch') {\n      yield put(actions.repoError(RepoErrorType.GITHUB_RATE_LIMIT));\n    } else {\n    */\n    yield put(\n      actions.AppProfilingDataError(AppProfilingErrorType.RESPONSE_ERROR),\n    );\n  }\n}\n\n/**\n * Root saga manages watcher lifecycle\n */\nexport function* AppProfilingSaga() {\n  // Watches for loadRepos actions and calls getRepos when one comes in.\n  // By using `takeLatest` only the result of the latest API call is applied.\n  // It returns task descriptor (just like fork) so we can continue execution\n  // It will be cancelled automatically on component unmount\n  yield takeEvery(actions.loadAppProfilingData.type, getAppProfilingData);\n}\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\nimport { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';\nimport { AppProfilingSaga } from './saga';\nimport { AppProfilingState } from './types';\n\nexport const initialState: AppProfilingState = {\n  loading: false,\n  error: null,\n  AppProfilingData: [],\n};\n\nconst slice = createSlice({\n  name: 'AppProfiling',\n  initialState,\n  reducers: {\n    loadAppProfilingData: state => {\n      state.loading = true;\n    },\n    AppProfilingDataLoaded: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = null;\n      // console.log(action.payload)\n      if (action.payload.length === 0) {\n        state.AppProfilingData = [];\n      } else {\n        state.AppProfilingData.push(action.payload);\n      }\n    },\n    AppProfilingDataError: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = action.payload;\n      //  state.AppProfilingData = [];\n    },\n  },\n});\n\nexport const { actions: AppProfilingActions } = slice;\n\nexport const useAppProfilingSlice = () => {\n  useInjectReducer({ key: slice.name, reducer: slice.reducer });\n  useInjectSaga({ key: slice.name, saga: AppProfilingSaga });\n  return { actions: slice.actions };\n};\n\n/**\n * Example Usage:\n *\n * export function MyComponentNeedingThisSlice() {\n *  const { actions } = useAppProfilingSlice();\n *\n *  const onButtonClick = (evt) => {\n *    dispatch(actions.someAction());\n *   };\n * }\n */\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\n// First select the relevant part from the state\nconst selectSlice = (state: RootState) => state.AppProfiling || initialState;\n\nexport const selectAppProfilingData = createSelector(\n  [selectSlice],\n  state => state.AppProfilingData,\n);\n\nexport const selectLoading = createSelector(\n  [selectSlice],\n  state => state.loading,\n);\n\nexport const selectError = createSelector([selectSlice], state => state.error);\n\n/*\nimport { createSelector } from '@reduxjs/toolkit';\n\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\nconst selectSlice = (state: RootState) => state.AppProfiling || initialState;\n\nexport const selectAppProfiling = createSelector(\n  [selectSlice],\n  state => state,\n);\n*/\n","import { Flex, Select } from '@chakra-ui/react';\nimport React from 'react';\nconst KpiList = ['Cpu', 'Battery', 'Performance', 'Network', 'Latency'];\nfunction DropdownComp({ kpiData, selectKpi, setSelectKpi }) {\n  return (\n    <Flex\n      textTransform=\"capitalize\"\n      fontFamily=\"Montserrat\"\n      fontWeight=\"500\"\n      position=\"absolute\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      width=\"198px\"\n      height=\"30px\"\n      boxSizing=\"border-box\"\n      borderRadius=\"2\"\n      top=\"2\"\n      right=\"1.5\"\n      backgroundColor=\"white1\"\n      boxShadow=\"0px 3px 6px #00000029 \"\n      color=\"black\"\n      zIndex=\"2\"\n    >\n      {/* <Select\n        boxSizing=\"border-box\"\n        fontSize=\"12px\"\n        fontFamily=\"Montserrat\"\n        fontWeight=\"500\"\n        width=\"100%\"\n        height=\"100%\"\n        variant=\"unstyled\"\n        placeholder=\"Select KPI  \"\n        paddingLeft=\"2\"\n        paddingRight=\"1\"\n        background=\"white\"\n        textTransform=\"capitalize\"\n      >\n        {KpiList.map(option => (\n          <option>{option}</option>\n        ))}\n      </Select> */}\n      <Select\n        fontSize=\"12px\"\n        fontFamily=\"Montserrat\"\n        fontWeight=\"500\"\n        //placeholder=\"Select Kpi\"\n        border=\"0px \"\n        _focus={{ boxShadow: ' 0 0 0 white' }}\n        size=\"sm\"\n        value={selectKpi}\n        onChange={e => setSelectKpi(e.target.value)}\n      >\n        {kpiData.map((option, i) => (\n          <option value={i}>{option.name}</option>\n        ))}\n      </Select>\n    </Flex>\n  );\n}\n\nexport default DropdownComp;\n","export default __webpack_public_path__ + \"static/media/Icon material-content-copy.b7c5002c.svg\";","import {\n  Flex,\n  List,\n  Text,\n  Accordion,\n  AccordionButton,\n  AccordionItem,\n  AccordionIcon,\n  Box,\n  AccordionPanel,\n  Icon,\n} from '@chakra-ui/react';\nimport copyIcon from '../../../../styles/Assets/Icon material-content-copy.svg';\nimport React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { MdContentCopy } from 'react-icons/md';\nimport { TiTick } from 'react-icons/ti';\nconst CopyIcon = () => {\n  return <img src={copyIcon} alt=\"copy\"></img>;\n};\n\nfunction ListComp({ kpiValue }) {\n  //  console.log(kpiValue);\n  const [copyIcon, setCopyIcon] = useState(true);\n  const setCopyIconHandler = () => {\n    setCopyIcon(false);\n    setTimeout(() => {\n      setCopyIcon(true);\n    }, 2000);\n  };\n\n  return (\n    <Flex\n      fontSize=\"12px\"\n      position=\"absolute\"\n      right=\"1.5\"\n      backgroundColor=\"white1\"\n      boxShadow=\"0px 3px 6px #00000029 \"\n      width=\"198px\"\n      top=\"46px\"\n      boxSizing=\"border-box\"\n      color=\"black\"\n      fontFamily=\"Montserrat\"\n      fontWeight=\"500\"\n      zIndex=\"2\"\n    >\n      <Flex\n        justifyContent=\"space-between\"\n        width=\"100%\"\n        alignItems=\"center\"\n        borderRadius=\"2\"\n      >\n        <Accordion\n          borderTop=\"0px white\"\n          allowMultiple\n          padding=\"0px 2px 0px 3px \"\n          backgroundColor=\"white\"\n          color=\"black\"\n          fontWeight=\"500\"\n          width=\"100%\"\n        >\n          <AccordionItem boxSizing=\"border-box\">\n            <Flex\n              width=\"100%\"\n              justifyContent=\"center\"\n              paddingTop=\"1\"\n              alignItems=\"center\"\n            >\n              <AccordionButton\n                padding=\"10px 8px\"\n                paddingRight=\"10px\"\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                width=\"100%\"\n                height=\"8\"\n                border=\"none\"\n                _focus={{\n                  boxShadow: ' 0 0 0 white',\n                }}\n                _hover={{ backgroundColor: '#ffffff' }}\n              >\n                <Box\n                  width=\"100%\"\n                  textAlign=\"left\"\n                  fontSize=\"12px\"\n                  display=\"flex\"\n                  color=\"black\"\n                  fontWeight=\"500\"\n                >\n                  {kpiValue.name}\n                  <Box paddingLeft=\"7px\">\n                    <CopyToClipboard\n                      text={JSON.stringify(kpiValue.value)}\n                      onCopy={setCopyIconHandler}\n                    >\n                      {copyIcon ? (\n                        <Icon cursor=\"pointer\" as={MdContentCopy}></Icon>\n                      ) : (\n                        <Icon cursor=\"pointer\" as={TiTick}></Icon>\n                      )}\n                    </CopyToClipboard>\n                  </Box>\n                </Box>\n\n                <AccordionIcon />\n              </AccordionButton>\n            </Flex>\n            <AccordionPanel\n              borderTop=\"1px solid #F3F6F9\"\n              padding=\"0px\"\n              height=\"105px\"\n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"flex-start\"\n            >\n              {/* {kpiData.map(item => ( */}\n              <Flex\n                fontSize=\"12px\"\n                textTransform=\"capitalize\"\n                borderBottom=\"1px solid #F3F6F9\"\n                padding=\"4px 8px\"\n                paddingRight=\"12px\"\n                backgroundColor=\"\"\n                flexDirection=\"row\"\n                justifyContent=\"space-between\"\n              >\n                <Text as=\"span\">Avg</Text>\n                <Text as=\"span\">{kpiValue.value.avg + kpiValue.unit}</Text>\n              </Flex>\n              <Flex\n                fontSize=\"12px\"\n                textTransform=\"capitalize\"\n                borderBottom=\"1px solid #F3F6F9\"\n                padding=\"4px 8px\"\n                paddingRight=\"12px\"\n                backgroundColor=\"\"\n                flexDirection=\"row\"\n                justifyContent=\"space-between\"\n              >\n                <Text as=\"span\">Max</Text>\n                <Text as=\"span\">{kpiValue.value.max + kpiValue.unit}</Text>\n              </Flex>\n              <Flex\n                fontSize=\"12px\"\n                textTransform=\"capitalize\"\n                borderBottom=\"1px solid #F3F6F9\"\n                padding=\"4px 8px\"\n                paddingRight=\"12px\"\n                backgroundColor=\"\"\n                flexDirection=\"row\"\n                justifyContent=\"space-between\"\n              >\n                <Text as=\"span\">Min</Text>\n                <Text as=\"span\">{kpiValue.value.min + kpiValue.unit}</Text>\n              </Flex>\n              {/* ))} */}\n            </AccordionPanel>\n          </AccordionItem>\n        </Accordion>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default ListComp;\n","// @ts-nocheck\nimport { Flex, Text } from '@chakra-ui/layout';\nimport React from 'react';\n\nfunction ChartWrapper({ children, shadow, title }) {\n  return (\n    <>\n      <Flex\n        fontFamily=\"Montserrat\"\n        flexWrap=\"nowrap\"\n        border=\"1px solid \"\n        borderColor=\"grey6\"\n        borderRadius=\"3px\"\n        position=\"relative\"\n        // boxShadow={shadow ? '0px 3px 6px #00000029 inset' : ' '}\n        border=\"1px solid #00000029\"\n        backgroundColor=\"white\" //\"white5\"\n      >\n        <Flex\n          position=\"absolute\"\n          left=\"2%\"\n          textTransform=\"uppercase\"\n          fontWeight=\"600\"\n          top=\"15px\"\n        >\n          {title}\n        </Flex>\n        {children}\n      </Flex>\n    </>\n  );\n}\n\nexport default ChartWrapper;\n","//@ts-nocheck\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Flex, Img } from '@chakra-ui/react';\n\nimport CheckBoxComp from './CheckBoxComp';\nimport DropdownComp from './DropdownComp';\nimport ListComp from './ListComp';\n//import \"chartjs-plugin-annotation\";\n//import { NONAME } from 'dns';\nimport momemt from 'moment';\nimport ChartWrapper from './ChartWrapper';\nimport AreaChartComponent from './AreaChartComponent';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart,\n  LineController,\n  LineElement,\n  PointElement,\n  LinearScale,\n  Title,\n} from 'chart.js';\nimport { useSelector } from 'react-redux';\nimport { selectTestSessionData } from 'app/pages/TestSession/slice/selectors';\nimport 'chartjs-adapter-moment';\nimport { selectAppProfilingData } from '../slice/selectors';\nimport { dateTimeConverter } from 'utils/gernricfunction';\n//import loadingImg from '../../styles/Assets/load-loading.gif';\n\n//Chart.register(LineController, LineElement, PointElement, LinearScale, Title);\n\nfunction makeChartData(kpiData, selectKpi) {\n  let chartLabel = [];\n  let chartData = [];\n  if (kpiData.length > 0) {\n    const kpi = kpiData[selectKpi].name;\n    try {\n      chartLabel = kpiData[selectKpi].datas.map(item => item.TimeStamp);\n      chartData = kpiData[selectKpi].datas.map(item => item[kpi]);\n    } catch (e) {\n      // console.log(e);\n    }\n  } else {\n    chartLabel = [];\n    chartData = [];\n  }\n\n  return { chartLabel, chartData };\n}\n\nlet data;\n\nfunction Charts({ kpiData, shadow, isLoading, title }) {\n  const [selectKpi, setSelectKpi] = useState(0);\n  const [dataValue, setDataValue] = useState({});\n  // const AppProfilingData = useSelector(selectAppProfilingData);\n  const testSessionData = useSelector(selectTestSessionData);\n  //console.log(testSessionData);\n\n  const startTime =\n    Object.keys(testSessionData).length !== 0 && testSessionData.testStartTime;\n\n  let endTime =\n    Object.keys(testSessionData).length !== 0 && testSessionData.testEndTime;\n\n  useEffect(() => {\n    const data = makeChartData(kpiData, selectKpi);\n\n    setDataValue(data);\n  }, [selectKpi, kpiData]);\n\n  let options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    drawBorder: true,\n    elements: {\n      point: {\n        radius: 0.1,\n        pointStyle: 'circle',\n      },\n      line: {},\n    },\n    plugins: {\n      datalabels: {\n        display: false,\n      },\n      title: {\n        text: '',\n        display: true,\n        align: 'start',\n        color: 'black',\n\n        fullSize: true,\n        padding: {\n          top: 15,\n          bottom: 65,\n        },\n        font: {\n          size: 12,\n          family: 'Montserrat',\n          weight: 500,\n        },\n      },\n\n      tooltip: {\n        enabled: true,\n\n        callbacks: {\n          title: function (tooltipItems, data) {\n            //   console.log(tooltipItems[0]);\n            const index = tooltipItems[0].dataIndex;\n            const timeStamp = tooltipItems[0].dataset.labels[index];\n\n            return 'time ' + dateTimeConverter(timeStamp);\n          },\n          // label: function(tooltipItem, data) {\n          //   return 'label';\n          // }\n        },\n      },\n      legend: {\n        display: false,\n        labels: {},\n      },\n    },\n\n    scales: {\n      x: {\n        display: true,\n        type: 'time',\n        min: startTime, //2022-03-15 00:00:10\n\n        max: endTime, // 2022-03-15 00:10:02\n        time: {\n          displayFormats: {\n            //minute: 'HH:mm',\n          },\n          unit: 'minute',\n          //   tooltipFormat : \"YYYY-MM-DD HH:MM:SS\"\n        },\n        backgroundColor: 'white',\n        padding: '20px',\n        ticks: {\n          beginAtZero: true,\n          display: false,\n          font: {\n            size: 8,\n            fontFamily: 'Montserrat',\n          },\n        },\n        grid: {\n          display: false,\n          borderColor: '#df4a8880', //'#F51C5E',\n          borderWidth: 0.6,\n          // zeroLineColor: 'red'\n        },\n      },\n      y: {\n        position: 'left',\n        ticks: {\n          mirror: true,\n          display: true,\n          //stepSize: 25,\n          // suggestedMin: 25,\n          min: 0,\n\n          callback: function (value, index, values) {\n            if (value == 0) {\n              return;\n            }\n            return value;\n          },\n          backgroundColor: 'white', // 'grey',\n          color: 'black',\n          font: {\n            size: 10,\n            family: 'Montserrat',\n            weight: 400,\n          },\n        },\n        grid: {\n          drawBorder: false,\n          drawTicks: true,\n          tickMarkLength: 1,\n          tickLength: 4,\n          lineWidth: 0.7,\n\n          backgroundColor: 'white', // 'rgb(248,248,248)',\n          color: 'black',\n          drawOnChartArea: false,\n        },\n\n        borderColor: '#F1150E',\n        backgroundColor: 'white', //  '#F8F8F8',\n      },\n    },\n  };\n\n  data = {\n    labels: dataValue.chartLabel,\n\n    datasets: [\n      {\n        data: dataValue.chartData,\n        labels: dataValue.chartLabel,\n        label: 'value',\n        fill: true,\n        pointBorder: false,\n        backgroundColor: '#f6cbddb3', //'#F6CBDD',\n        borderColor: '#df4a8880', //'#DF4A88',\n        borderWidth: 0.6,\n        pointBorderColor: '#F1150E',\n      },\n    ],\n  };\n\n  return (\n    <>\n      <ChartWrapper title={title} shadow={shadow}>\n        <Flex\n          position=\"relative\"\n          width=\"100%\"\n          paddingRight=\"30px\"\n          justifyItems=\"flex-end \"\n          height=\"218px\"\n        >\n          <Line\n            style={{ position: 'absolute', zIndex: '2' }}\n            data={data}\n            options={options}\n          ></Line>\n        </Flex>\n\n        {/* <CheckBoxComp kpiValue={kpiData[selectKpi]}></CheckBoxComp> */}\n\n        <DropdownComp\n          kpiData={kpiData}\n          selectKpi={selectKpi}\n          setSelectKpi={setSelectKpi}\n        ></DropdownComp>\n        <ListComp kpiValue={kpiData[selectKpi]}></ListComp>\n        {/* <Flex  \n          position=\"absolute\"\n          color=\"black\"\n          width=\"100%\"\n          bottom=\"8.5px\"\n          borderTop=\"1px solid \"\n          borderTopColor={shadow ? 'transparent' : 'blue7'}\n        ></Flex> */}\n      </ChartWrapper>\n    </>\n  );\n}\n\nexport default Charts;\n","// @ts-nocheck\nimport { Flex } from '@chakra-ui/react';\nimport React, { useEffect, useRef } from 'react';\nlet relativepos;\n// const data = [\n//     {value: 1, type: 'green', id: '1'},\n//  {value: 2, type: 'red', id: '2'},\n//  {value: 3, type: 'red', id: '3'},\n//  {value: 4.5, type: 'green', id: '4'},\n//  {value: 4.8, type: 'green', id: '5'},\n//  {value: 7, type: 'red', id: '6'},\n//  {value: 6, type: 'green', id: '7'},\n//  {value: 3.3, type: 'red', id: '8'}\n// ]\n\nlet arr = [];\nlet columnPos = [];\n\n// function drawLine(lineRef, left, start, pos) {\n//   const line = lineRef.current.getContext('2d');\n//   //lineRef.current.display = 'block';\n//   lineRef.current.style.position = 'absolute';\n//   line.beginPath();\n//   line.moveTo(start, 10);\n//   line.lineTo(start, 200);\n//   line.strokeStyle = 'red';\n//   line.fillStyle = 'red';\n//   line.fill();\n\n//   console.log(start);\n// }\n\nfunction drawArea(testcase, eventRef, width, height, item) {\n  let slide = width / 10;\n\n  //console.log(slide * item.value)\n  // console.log(slide)\n  // console.log(width+\"width\")\n  eventRef.current.style.position = 'absolute';\n  //eventRef.current.style.height = '450px';\n\n  testcase.beginPath();\n  testcase.moveTo(slide * item.value - 10, 5); // starting point (left ,top)\n  // testcase.lineTo(slide * item.value, 10 ); // bottom point (left ,top)\n  // testcase.lineTo(slide * item.value ,0)\n\n  testcase.lineTo(slide * item.value + 10, 5);\n  testcase.lineTo(slide * item.value, 20);\n  testcase.lineTo(slide * item.value - 10, 5);\n  testcase.fill();\n  testcase.lineTo(slide * item.value, 20);\n  testcase.lineTo(slide * item.value, height);\n\n  //   testcase.fill();\n  testcase.fillStyle = '#9999ff';\n  testcase.strokeStyle = '#ccccffe6';\n\n  //testcase.closePath();\n  //   testcase.current.position = 'absolute';\n  //testcase.lineTo(slide * item[1], height); // bottom starting point  (left,top)\n  // testcase.lineTo(slide * item[1], 0); //    last point (left , top)\n\n  //item.type === 'red' ? 'red' : 'green';\n\n  testcase.stroke();\n\n  let left = relativepos.left;\n  //drawLine(lineRef , left ,(relativepos.width / 10) * item.value + left , (relativepos.width / 10) * item.value,)\n  //console.log( relativepos.width/26);\n  //console.log(width/26);\n\n  arr.push({\n    left: left,\n    start: (relativepos.width / 10) * item.value + left,\n    //eventName: item.eventName,\n    tippos: (relativepos.width / 10) * item.value,\n    ...item,\n  });\n}\n\nfunction draw(testcase, tipRef, eventRef, w, h, data) {\n  //const canvas = testcase.canvas;\n  testcase.fillStyle = '#9999ff';\n  //let tipElement = tipRef.current;\n  // console.log(data);\n  //console.log(w,h);\n  // testcase.fillRect(0, 0, w, h);\n\n  arr = [];\n  columnPos = [];\n  //  testcase.fillStyle = '#CEF2FE';\n\n  data.map(item => {\n    drawArea(testcase, eventRef, w, h, item);\n  });\n}\nfunction hoverColumn(x) {\n  let hoveredCol = arr.filter(\n    item => item.start - 1 <= x && x <= item.start + 1,\n  )[0];\n  //console.log(hoveredCol);\n  return hoveredCol;\n}\n\nfunction EventPointer({ data, isLeft }) {\n  const eventRef = useRef();\n  const tooltipRef = useRef();\n  const lineRef = useRef();\n  useEffect(() => {\n    let eventElement = eventRef.current.getContext('2d');\n\n    if (eventRef.current) {\n      eventRef.current.position = 'absolute';\n      relativepos = eventRef.current.getBoundingClientRect();\n      draw(\n        eventElement,\n        tooltipRef,\n        eventRef,\n        window.innerWidth,\n        window.innerHeight,\n        data,\n      );\n      // eventElement.fillStyle = 'transparent';\n\n      //    data.map(item => {\n      //     drawArea(eventElement, window.innerWidth, 15, item);\n      // })\n      const handleResize = () => {\n        relativepos = eventRef.current.getBoundingClientRect();\n        //  //console.log(testcase);\n        eventElement.canvas.height = window.innerHeight;\n        eventElement.canvas.width = window.innerWidth;\n        draw(\n          eventElement,\n          tooltipRef,\n          eventRef,\n          window.innerWidth,\n          window.innerHeight,\n          data,\n        );\n      };\n      handleResize();\n      const mouseHandler = e => {\n        if (eventRef.current) {\n          const tooltip = tooltipRef.current.getContext('2d');\n          tooltip.fillStyle = '#ffffff'; //'#6CB2D8' ;// '#290b08cc';\n          //      tooltip.font = '12px montserrat';\n          tooltipRef.current.position = 'absolute';\n\n          const val = hoverColumn(e.clientX);\n\n          if (val && e.clientX < 1300) {\n            //   console.log('match');\n            tooltipRef.current.style.background = '#ffffff'; //'#6CB2D8';  // '#000000cc';\n            //  tooltipRef.current.style.color = 'black';              //'#ffffff';\n            tooltipRef.current.style.fontFamily = 'montserrat';\n            tooltipRef.current.style.fontWeight = 500;\n            tooltipRef.current.style.zIndex = 1000;\n            tooltipRef.current.style.borderRadius = '5px';\n            tooltipRef.current.style.bgColor = '#ffffff'; // '#6CB2D8'\n\n            tooltipRef.current.style.fontSize = '12px';\n            tooltipRef.current.style.display = 'block';\n            tooltipRef.current.style.right = '10px';\n            tooltipRef.current.style.top = '18px';\n            tooltipRef.current.style.zIndex = 2;\n\n            tooltipRef.current.style.left = val.tippos - 110 + 'px';\n\n            tooltip.save();\n            ////console.log(tooltip);\n            tooltip.clearRect(0, 0, 220, 110);\n            tooltip.fillRect(0, 0, 220, 110);\n            tooltip.fillStyle = 'black'; //'white';\n            tooltip.font = 'normal 12px ';\n            tooltip.fillText('event : ' + val.eventName, 5, 12);\n            tooltip.fillText(val.testCase, 5, 25);\n\n            //tooltip.font = '12px'\n            tooltip.restore();\n          } else {\n            tooltipRef.current.style.display = 'none';\n            // console.log('not match');\n          }\n        }\n      };\n      eventRef.current.addEventListener('mousemove', mouseHandler);\n\n      window.addEventListener('resize', handleResize);\n      return () => {\n        window.removeEventListener('mousemove', mouseHandler);\n        window.removeEventListener('resize', handleResize);\n      };\n    }\n  }, [isLeft]);\n\n  return (\n    <Flex height=\"10px\" position=\"relative\">\n      <Flex\n        position=\"absolute\"\n        top=\"-2px\"\n        h=\"35px\"\n        width=\"100%\"\n        zIndex=\"1\"\n        padding=\"0px 40px 0px 10px\"\n        paddingLeft={isLeft ? '215px' : '10px'}\n      >\n        <Flex position=\"relative\" width=\"100%\">\n          <canvas\n            ref={eventRef}\n            id=\"testcase\"\n            style={{\n              width: '100%',\n              height: '450px',\n              zIndex: 1,\n              top: '0px',\n              fontSize: '12px',\n              position: 'absolute',\n              // background : 'red'\n            }}\n          ></canvas>\n          <canvas\n            ref={tooltipRef}\n            height={32}\n            width={210}\n            style={{\n              position: 'absolute',\n              background: 'transparent',\n              display: 'none',\n              fontSize: '12px',\n              boxShadow: '0px 3px 6px #00000029',\n              color: 'black',\n              fontFamily: 'montserrat',\n              zIndex: 1000,\n            }}\n          ></canvas>\n          {/* <canvas ref={lineRef} style={{ position: 'absolute' , background: 'transparent', width: '100%', height: '200px',zIndex: '2' }} ></canvas> */}\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default EventPointer;\n","// @ts-nocheck\nimport { Box, Flex, HStack, Switch, Text } from '@chakra-ui/react';\nimport { selectsummaryTableData } from 'app/pages/SummaryTable/slice/selectors';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport EventPointer from './EventPointer';\n\nconst eventdata = [\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:18+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:19+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:20+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:21+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:22+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:23+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:24+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:25+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:25+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:26+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:27+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:28+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:29+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:27+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n  {\n    eventName: 'loaderAppear',\n    time: '2022-03-23T21:55:17+05:30',\n    testCase: 'Netflix User Journey For DRM Video',\n    kpiName: '',\n  },\n];\n\nconst getTwoDigitFormat = val => {\n  if (val <= 9) {\n    return '0' + val;\n  }\n  return val;\n};\nconst getThreeDigitFormat = val => {\n  // if (val <= 99) {\n  //   return '00' + val;\n  // }\n  // return val;\n  return (val / 1000).toFixed(0);\n};\n\nconst makeLabels = time => {\n  // console.log(time/10)\n  //time = 74000;\n  let label = [];\n  let unit = 'ms';\n  // let timeDuration = time\n  if (time > 1000) {\n    time = time / 1000;\n    unit = 's';\n    if (time > 60) {\n      time = time / 60;\n\n      unit = 'm';\n      if (time > 60) {\n        time = time / 60;\n        unit = 'h';\n      }\n    }\n  }\n  // console.log(time + unit);\n  let interval = time / 10;\n  //console.log(time+unit);\n\n  for (let i = 0; i <= 10; i++) {\n    let unit2 = 'ms';\n    const perfect = Math.floor(interval * i);\n\n    if (unit === 'm') {\n      //console.log( Math.floor(((interval*i)-perfect)*60));\n      unit2 = 's';\n      label.push(\n        getTwoDigitFormat(perfect) +\n          unit +\n          ':' +\n          getTwoDigitFormat(Math.floor((interval * i - perfect) * 60)) +\n          unit2,\n      );\n    } else if (unit === 'h') {\n      //   console.log( Math.floor(((interval*i)-perfect)*60));\n      unit2 = 's';\n      label.push(\n        getTwoDigitFormat(perfect) +\n          ':' +\n          unit +\n          getTwoDigitFormat(Math.floor((interval * i - perfect) * 60)) +\n          unit2,\n      );\n    } else if (unit === 's') {\n      unit2 = 'ms';\n      label.push(\n        getTwoDigitFormat(perfect) +\n          unit +\n          ':' +\n          getThreeDigitFormat(Math.floor((interval * i - perfect) * 1000)) +\n          unit2,\n      );\n    } else {\n      label.push((interval * i).toFixed(0) + unit);\n    }\n\n    // console.log(perfect);\n  }\n  //console.log(label)\n\n  return label;\n};\n\nfunction SliderAxis({ children, duration, startTime, endTime, isLeft }) {\n  const [labels, setLabels] = useState([]);\n  const [isEnableEvent, setEventEnable] = useState(false);\n  const summaryTableData = useSelector(selectsummaryTableData);\n  //  console.log(summaryTableData);\n  const ticksize = duration / 10000;\n  // console.log(new Date(startTime));\n  // console.log(new Date(endTime));\n  //   console.log(summaryTableData);\n  let data = [];\n  // eventdata.map((value, index) => {\n  summaryTableData.map((value, index) => {\n    //console.log(value);\n    data.push({\n      value:\n        (new Date(value.time).valueOf() - new Date(startTime).valueOf()) /\n        1000 /\n        ticksize,\n      id: index,\n      ...value,\n    });\n\n    // console.log(\n    //   (new Date(value.time).valueOf() - new Date(startTime).valueOf()) / 1000,\n    // );\n    // console.log(new Date(value.time))\n  });\n  // console.log(data);\n\n  useEffect(() => {\n    setLabels(makeLabels(duration));\n  }, [duration]);\n  // console.log(labels);\n  return (\n    <Flex\n      width=\"100%\"\n      flexDirection=\"column\"\n      padding=\"0px\"\n      margin=\"0px\"\n      fontFamily=\"Montserrat\"\n      fontWeight=\"500\"\n    >\n      {summaryTableData.length > 0 && (\n        <Flex padding=\"5px\" paddingBottom=\"0px\">\n          <HStack alignContent=\"center\">\n            <Text fontSize=\"12px\" textAlign=\"end\" as=\"span\">\n              Enable Events\n            </Text>\n            <Switch\n              isFocusable={false}\n              size=\"sm\"\n              height=\"16px\"\n              _focus={{ boxShadow: '0px 0px 0px white' }}\n              margin=\"0px\"\n              padding=\"0px\"\n              isChecked={isEnableEvent}\n              onChange={e => setEventEnable(e.target.checked)}\n              marginTop=\"5px\"\n            />\n          </HStack>\n        </Flex>\n      )}\n\n      <Flex\n        fontFamily=\"Montserrat\"\n        fontWeight=\"300\"\n        height=\"25px\"\n        marginTop=\"10px\"\n        backgroundColor=\"#DEDEDE\"\n        justifyContent=\"space-between\"\n        borderRadius=\"2px\"\n        width=\"100%\"\n        color=\"black\"\n        paddingLeft={isLeft ? '215px' : '10px'}\n        //paddingLeft=\"10px\"\n        alignContent=\"flex-end\"\n      >\n        {labels.map(item => (\n          <Flex\n            padding=\"1px\"\n            fontSize=\"8px\"\n            whiteSpace=\"nowrap\"\n            textAlign=\"start\"\n            as=\"span\"\n            width=\"45px\"\n          >\n            | {item}\n          </Flex>\n        ))}\n      </Flex>\n\n      {!isEnableEvent && <Flex h=\"10px\"></Flex>}\n      {isEnableEvent && (\n        <EventPointer isLeft={isLeft} data={data}></EventPointer>\n      )}\n      {children}\n    </Flex>\n  );\n}\n\nexport default SliderAxis;\n","// @ts-nocheck\nimport { Flex } from '@chakra-ui/react';\nimport React from 'react';\nimport ChartWrapper from './ChartWrapper';\n\nfunction NoDataChart({ title }) {\n  return (\n    <Flex flexdirection=\"column\" width=\"100%\" position=\"relative\">\n      <Flex\n        width=\"100%\"\n        fontFamily=\"Montserrat\"\n        flexWrap=\"nowrap\"\n        border=\"1px solid \"\n        borderColor=\"grey6\"\n        borderRadius=\"3px\"\n        // position=\"absolute\"\n        zIndex=\"1\"\n        // boxShadow=\"0px 3px 6px #00000029 inset\"\n        // backgroundColor=\"white5\"\n        border=\"1px solid #00000029\"\n        // backgroundColor=\"white\" //\"white5\"\n        justifyContent=\"center\"\n      >\n        <Flex\n          position=\"absolute\"\n          textTransform=\"uppercase\"\n          left=\"2%\"\n          fontWeight=\"600\"\n          top=\"15px\"\n        >\n          {title}\n        </Flex>\n        <Flex height=\"218px\" fontWeight=\"600\" align=\"center\" justify=\"center\">\n          No Content Available\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default NoDataChart;\n","// @ts-nocheck\nimport { Flex, Img } from '@chakra-ui/react';\nimport ChartLayout from 'app/components/ChartLayout';\n\nimport React, { useEffect } from 'react';\nimport MobileDisplay from '../DisplayScreen/components/MobileDisplay';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectAppProfilingData,\n  selectLoading,\n  selectError,\n} from './slice/selectors';\nimport { AppProfilingErrorType } from './slice/types';\nimport { useAppProfilingSlice } from './slice';\nimport AppProfilingData from '../../../types/AppProfiling';\nimport { selectSessionId } from '../TestAnalytics/testAnalyticsSlice/selectors';\nimport Charts from './components/Charts';\n\nimport { selectTestSessionData } from '../TestSession/slice/selectors';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport SliderAxis from './components/SliderAxis';\nimport NoDataChart from './components/NoDataChart';\nimport { useParams } from 'react-router-dom';\nimport ChartKpi from './Features/ChartKpi';\nimport NoContent from 'app/components/NoContent';\nconst kpiList = ['cpu', 'battery', 'memory', 'graphics'];\n\nexport function AppProfiling() {\n  //console.log(appProfilingKpiData);\n  //let AppProfilingData: AppProfilingData;\n  const { testId } = useParams();\n  const { actions } = useAppProfilingSlice();\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  const AppProfilingData = useSelector(selectAppProfilingData);\n  const testSessionData = useSelector(selectTestSessionData);\n\n  const startTime =\n    Object.keys(testSessionData).length !== 0 &&\n    new Date(testSessionData.testStartTime).valueOf();\n  const startTimeIST =\n    Object.keys(testSessionData).length !== 0 && testSessionData.testStartTime;\n  const endTimeIST =\n    Object.keys(testSessionData).length !== 0 && testSessionData.testEndTime;\n  const endTime =\n    Object.keys(testSessionData).length !== 0 &&\n    new Date(testSessionData.testEndTime).valueOf();\n  //console.log(endTime , startTime);\n  // const startTime =\n  //   Object.keys(AppProfilingData).length !== 0 &&\n  //   new Date(AppProfilingData[0].startTime).valueOf();\n  // const endTime =\n  //   Object.keys(AppProfilingData).length !== 0 &&\n  //   new Date(AppProfilingData[0].endTime).valueOf();\n  const duration = endTime - startTime;\n\n  useEffect(() => {\n    dispatch(actions.AppProfilingDataLoaded([]));\n    for (let i = 0; i < kpiList.length; i++) {\n      const name = kpiList[i];\n      const params = { testId, name, i };\n      dispatch(actions.loadAppProfilingData(params));\n    }\n  }, [testId]);\n\n  //  AppProfilingData.length !==0 && AppProfilingData.sort(function(a,b){\n\n  //   return(a.id - b.id)\n  // })\n\n  // const useEffectOnMount = (effect: React.EffectCallback) => {\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  //   useEffect(effect, [testId]);\n  // };\n\n  // useEffectOnMount(() => {\n  //   dispatch(\n  //     actions.loadAppProfilingData(testId)  );\n  // });\n\n  // const onSubmitForm = (evt?: React.FormEvent<HTMLFormElement>) => {\n  //   /* istanbul ignore next  */\n  //   if (evt !== undefined && evt.preventDefault) {\n  //     evt.preventDefault();\n  //   }\n  // };\n\n  return (\n    <Flex width=\"100%\">\n      <Flex width=\"100%\">\n        {isLoading ? (\n          <LoadingComponent></LoadingComponent>\n        ) : (\n          <SliderAxis\n            startTime={startTimeIST}\n            endTime={endTimeIST}\n            duration={duration}\n          >\n            <Flex\n              width=\"100%\"\n              overflowY=\"scroll\"\n              paddingTop=\"2px\"\n              //marginTop=\"10px\"\n              flexDirection=\"column\"\n              // background={height ? 'white5' : 'white'}\n              height=\"443px\"\n              css={{\n                '&::-webkit-scrollbar': {\n                  width: '8px',\n                  //height: '30px',\n                  border: '5px solid #F3F6F9',\n                },\n                '&::-webkit-scrollbar-track': {\n                  boxShadow: 'inset 0 0 6px white',\n                },\n                '&::-webkit-scrollbar-thumb': {\n                  backgroundColor: '#C1C1C1',\n                  borderRadius: '5px',\n                  boreder: '2px solid',\n                },\n              }}\n              bg=\"white\"\n            >\n              {AppProfilingData.length > 0 ? (\n                <>\n                  {AppProfilingData.slice()\n                    .sort((a, b) => a.id - b.id)\n                    .map(kpiData => {\n                      return (\n                        <>\n                          {' '}\n                          {kpiData.data.length > 0 ? (\n                            <Charts\n                              kpiData={kpiData.data}\n                              // isLoading={isLoading}\n                              shadow={true}\n                              title={kpiData.name}\n                            ></Charts>\n                          ) : (\n                            <NoDataChart title={kpiData.name}></NoDataChart>\n                          )}\n                        </>\n                      );\n                    })}\n                </>\n              ) : (\n                <NoContent message=\"No Content Available\"></NoContent>\n              )}\n            </Flex>\n          </SliderAxis>\n        )}\n\n        {/* <Flex\n              width=\"100%\"\n              overflow=\"scroll\"\n              paddingTop=\"2px\"\n              //marginTop=\"10px\"\n              flexDirection=\"column\"\n              // background={height ? 'white5' : 'white'}\n              height=\"467px\"\n              css={{\n                '&::-webkit-scrollbar': {\n                  width: '0px',\n                },\n              }}\n              bg=\"white\"\n            >\n           <ChartKpi  ></ChartKpi>\n        <ChartKpi name=\"cpu\"  ></ChartKpi>\n        <ChartKpi name=\"memory\"  ></ChartKpi>\n     \n      </Flex>  */}\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default AppProfiling;\n\nexport const repoErrorText = (error: AppProfilingErrorType) => {\n  switch (error) {\n    case AppProfilingErrorType.RESPONSE_ERROR:\n      return 'There is no such user 😞';\n    default:\n      return 'An error has occurred!';\n  }\n};\n"],"sourceRoot":""}