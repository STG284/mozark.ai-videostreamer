{"version":3,"sources":["app/pages/Xcui/slice/selector.ts","app/pages/Xcui/slice/types.ts","app/pages/Xcui/utils/index.ts","app/pages/Xcui/slice/saga.ts","app/pages/Xcui/slice/index.ts","app/pages/HomePage/usePlatformtypeHook.tsx","app/pages/TestAnalytics/components/Table/index.tsx","styles/Assets/Automation.svg","app/pages/SettingsManageProject/slice/types.ts","app/pages/SettingsManageProject/slice/saga.ts","app/pages/SettingsManageProject/slice/index.ts","app/pages/SettingsManageProject/components/BuildScriptFileComp.tsx","app/pages/SettingsManageProject/components/EditMangeProject.tsx","app/pages/SettingsManageProject/components/ManageProjectTable.tsx","app/pages/SettingsManageProject/slice/selector.ts","app/pages/SettingsManageProject/Features/ManageProject.tsx","app/pages/SettingsManageProject/Features/ManageProjectAppBuilds.tsx","app/pages/SettingsManageProject/Features/ManageProjectScriptBuilds.tsx","app/pages/SettingsManageProject/index.tsx"],"names":["selectSlice","state","XcuiTestExecution","initialState","selectProjectList","createSelector","TestExecutionSelectDevice","selectLoadingProjectList","loadingProjectList","selectProjectError","loadProjectListError","selectRemoveDeviceId","removeId","selectUploadApplicationUrl","applicationUploaded","selectUploadApplicationUrlAndroid","applicationUploadedAndroid","selectCreatedProject","creatProjectResponse","selectCreateProjectError","createProjectError","selectAppBuildListState","selectAppBuildList","selectAppBuildAndroidListState","selectAppBuildAndroidList","selectScriptState","selectScriptList","selectScriptAndroidState","selectScriptAndroidList","selectuploadApplicationUrlError","applicationUploadError","selectuploadApplicationUrlAndroidError","applicationUploadAndroidError","selectTestExecutionSelectedDevice","selectDeviceListLoading","loadingDeviceList","selectBusyDeviceLoading","loadingBusySlots","selectListingDevices","DeviceListData","selectDeviceListingError","DeviceListingError","selectScheduleTestResponse","XcuiData","selectScheduleTestResponseError","error","selectCreateProjectLoading","loadCreateProjectRequest","selectUploadingApplicationLoading","loadingUploadApplication","selectUploadingApplicationAndroidLoading","loadingUploadApplicationAndroid","selectScheduleExecuteTestLoading","loading","selectApplicationFileUploadLoading","loadingAppBuildFile","selectApplicationFileUploadResponse","appBuildFileUploaded","selectApplicationFileUploadError","appBuildFileError","selectEventConfigFileUploadLoading","loadingEventConfigFile","selectEventConfigFileUploadResponse","eventConfigFileUploaded","selectEventConfigFileUploadError","eventConfigFileError","selectUploadFileProgressValue","progressValue","selectBusyDeviceSlots","BusyDeviceSlotsData","selectgetOptionalKeyValue","addedOptionalKeyValue","selectAppBuildIosLoading","loadingAppBuildList","selectAppBuildAndroidLoading","loadingAppBuildAndroidList","selectScriptAndroidLoading","loadingScriptAndroidList","selectScriptIosLoading","loadingScriptList","selectScriptIosError","selectScriptListError","selectScriptAndroidError","selectScriptListAndroidError","selectAppbuildAndroidError","selectAppBuildListAndroidError","selectAppbuildIosError","selectAppBuildListError","selectTestExcutionState","TestExecutionErrorType","getProjectString","project","concat","BASE_URL","REACT_APP_AUTOMATION_TESTING_BASE_URL","BASE_URL_FILES","REACT_APP_AUTOMATION_TESTING_FILES_BASE_URL","BASE_URL_SCHEDULE","REACT_APP_AUTOMATION_TESTING_SCHEDULE_BASE_URL","username","GetLastAuthUser","last_auth","UserPool","getClientId","reg","RegExp","document","cookie","match","getTestExecutionProjectList","param","idToken","GetIdToken","config","method","headers","Authorization","queryString","payload","requestURL","selectProjectData","call","request","hasOwnProperty","put","actions","selectTestExecutionProjectListLoaded","data","list","selectTestExecutionProjectListError","RESPONSE_ERROR","err","createProjectSagaWatcher","projectInfo","name","description","testType","user","body","JSON","stringify","redirect","createProjectResponse","testExecutionProjectCreated","createTestExecutionProjectError","uploadFileSagaWatcher","fileInfo","payloadbody","fileName","filename","fileCategory","md5sum","md5","userName","projectName","fileuploadResponse","uploadApplicationResponse","type","applicationType","response","uploadApplicationError","uploadFileSagaWatcherAndroid","configdata","uploadApplicationAndroidResponse","uploadApplicationAndroidError","uploadAppBuildFileSagaWatcher","fileData","file","url","fileResponse","fetch","status","appBuildApplicationFileUploaded","appBuildFileUploadError","uploadEventConfigFileSagaWatcher","eventConfigFileUploadError","selectAppBuildSagaWatcher","paramstring","fileStringTestType","_paramstring$payload","selectAppBuildListLoaded","selectAppBuildAndroidSagaWatcher","_paramstring$payload2","selectAppBuildListAndroidLoaded","selectAppBuildAndroidError","selectScriptSagaWatcher","_paramstring$payload3","selectScriptListLoaded","selectVisualScriptSagaWatcher","_paramstring$payload4","selectVisualScriptListLoaded","selectVisualScriptListError","selectScriptAndroidSagaWatcher","_paramstring$payload5","selectScriptListAndroidLoaded","selectDeviceListingSagaWatcher","devicePlaform","platform","testTypeString","getDeviceList","DeviceListLoaded","deviceListLoadError","getTestExecutionDetail","testdetail","delay","getExecuteResponse","testExecutionDataLoaded","testExecutionDataError","getBusyDeviceSlotsSagaWatcher","deviceIds","join","deviceBusySlots","BusyDeviceSlotsListLoaded","BusyDeviceSlotsListError","xcuiTestExecutionSaga","takeLatest","loadTestExecutionData","createTestExecutionProject","loadUploadApplication","loadUploadApplicationAndroid","loadSelectTestExecutionProjectList","loadDeviceList","loadSelectAppBuildList","loadSelectAppBuildAndroidList","loadSelectScriptAndroidList","loadSelectScriptList","loadSelectVisualScriptList","loadUploadAppBuildFile","loadUploadEventConfigFile","loadindBusyDeviceSlots","selectVisualScriptList","loadingVisualScriptList","BusyDeviceSlotsError","slice","createSlice","reducers","action","removeSelectedDevices","removeSelectedDeviceHandler","arr","id","filter","item","resetTestDevices","addTestDevices","addUniqueDevices","index","i","length","count","splice","push","addSelectedDevices","deviceParameters","deviceStatus","uploadFileProgress","addOptionalKeyValue","xcuiTestExecutionActions","useTestExecutionSlice","useInjectReducer","key","reducer","useInjectSaga","saga","testExecutionActions","usePlatformtypeHook","location","useLocation","pathname","isMobileTesting","setMobileTesting","useState","hasStartingString","startsWith","useEffect","PaginatedTable","_ref","columns","leftIcon","rightHoverIcon","getTabIndex","editUserClickHandler","deleteUserClickHandler","history","useNavigate","email","getEmailId","getTabIndexKey","inputRef","useRef","homePageActions","useHomePageSlice","getPageIndexinit","useSelector","selectPageIndexInisialValue","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","pageIndex","pageSize","useDispatch","useTable","value","autoResetPage","usePagination","_jsxs","Flex","flexDirection","paddingTop","width","backgroundColor","children","CustomTable","fontFamily","fontWeight","variant","_jsx","Thead","color","map","headerGroup","Tr","getHeaderGroupProps","Th","minWidth","paddingLeft","paddingRight","column","textTransform","padding","getHeaderProps","render","Tbody","row","textDecoration","cursor","className","cells","original","uuid","onClick","_id","_hover","background","getRowProps","Td","Icon","title","w","h","as","MdOutlineMonitor","RiDeviceLine","testId","AiOutlineSetting","MdOutlineTouchApp","cell","testStatus","getCellProps","dateTimeConverter","testStartTime","updatedAt","sessionId","Date","createdDate","toGMTString","user_role","Text","bg","align","borderRadius","isMFAEnabled","AiOutlineCheckSquare","MdOutlineDisabledByDefault","Badge","sx","display","justify","alignItems","MdOutlineAnalytics","HStack","user_name","e","FaTrashAlt","MdEdit","GrShieldSecurity","createdBy","justifyContent","marginRight","boxShadow","marginTop","disabled","Box","paddingBottom","Input","size","_focus","textAlign","fontSize","borderBottom","borderBottomColor","ref","onFocus","target","select","onKeyUp","onChange","Number","ManageProjectErrorType","deleteProjectSagaWorker","requestUrl","deleteProjectDataLoaded","deleteProjectDataError","unlinkScriptAppbuildSagaWorker","buildId","unlinkScriptAppbuild","unlinklScriptAppbuildError","manageProjectSaga","loadDeleteProject","loadUnlinkScriptAppbuild","deleteProjectData","loadingScriptAppbuildUnlink","errorUnlink","loadingScript","errorDeleteScript","deleteScriptData","loadingAppbuild","errorDeleteAppbuild","deleteAppbuildData","projectManageActions","useManageProjectSlice","BuildScriptFileComp","dispatch","alignContent","overflow","CloseButton","unLinkScriptAppbuildHandler","EditMangeProject","onClose","projectdetails","getAppbuildListIos","getAppbuildListAndroid","getScriptListIos","getScriptListAndroid","Stack","spacing","Spacer","height","flex","overflowY","css","border","boreder","borderTop","borderColor","ButtonComp","buttonHandler","updateHandlerProject","ManageProjectTable","deleteProjectHandler","selectProjectOptionList","ProjectOptionListError","projectOptionListLoading","getProjectDetails","setProjectDetails","isOpen","onOpen","useDisclosure","LoadingComponent","_Fragment","NoContent","message","BsFillFileTextFill","Header","accessor","details","paramStringAppBuild","paramStringScript","paramStringAppBuildAndroid","paramStringScriptAndroid","PopupComponent","buttonHandler1","footer","manageProject","selectDeleteProjectData","selectDeleteProjectDataError","selectLoadingDeleteProject","selectUnlinkScriptAppBuild","selectUnlinkScriptAppBuildError","selectUnlinkScriptAppBuildLoading","ManageProject","getDeleteProjectId","setDeleteProjectId","loadingDeleteProject","position","isOverLay","SubLayout","buttonTitle1","buttonTitle2","buttonHandler2","justifyItems","ManageProjectAppBuilds","getDeleteAppbuildId","setDeleteAppbuildId","loadingAppbuildAndroid","loadingAppbuildIos","errorAppbuildIos","errorAppbuildAndroid","deleteAppbuildButtonHandler","loadingScriptAndroid","loadingScriptIos","errorScriptIos","errorScriptAndroid","paramStringVisualScript","deleteScriptButtonHandler","SettingsManageProject","activeTestSetupPageLink","setActiveTestSetupPageLink","deleteProjectresponse","deleteProjecterror","unlinkScriptAppbuildresponse","unlinkScriptAppbuilderror","loadingUnlinkScriptAppbuild","toast","useToast","isClosable","ManageProjectScriptBuilds"],"mappings":"oHAAA,68CAIA,MAAMA,EAAeC,GACnBA,EAAMC,mBAAqBC,IAMhBC,GAJ6BC,YACxC,CAACL,IACDC,GAASA,EAAMK,4BAEgBD,YAC/B,CAACL,IACDC,GAASA,EAAMG,qBAEJG,EAA2BF,YACtC,CAACL,IACDC,GAASA,EAAMO,qBAGJC,EAAqBJ,YAChC,CAACL,IACDC,GAASA,EAAMS,uBAGJC,EAAuBN,YAClC,CAACL,IACDC,GAASA,EAAMW,WAGJC,EAA6BR,YACxC,CAACL,IACDC,GAASA,EAAMa,sBAEJC,EAAoCV,YAC/C,CAACL,IACDC,GAASA,EAAMe,6BAGJC,EAAuBZ,YAClC,CAACL,IACDC,GAASA,EAAMiB,uBAEJC,EAA2Bd,YACtC,CAACL,IACDC,GAASA,EAAMmB,qBAGJC,EAA0BhB,YACrC,CAACL,IACDC,GAASA,EAAMqB,qBAGJC,EAAiClB,YAC5C,CAACL,IACDC,GAASA,EAAMuB,4BAEJC,EAAoBpB,YAC/B,CAACL,IACDC,GAASA,EAAMyB,mBAEJC,EAA2BtB,YACtC,CAACL,IACDC,GAASA,EAAM2B,0BAGJC,EAAkCxB,YAC7C,CAACL,IACDC,GAASA,EAAM6B,yBAEJC,EAAyC1B,YACpD,CAACL,IACDC,GAASA,EAAM+B,gCAEJC,EAAoC5B,YAC/C,CAACL,IACDC,GAASA,EAAMK,4BAEJ4B,EAA0B7B,YACrC,CAACL,IACDC,GAASA,EAAMkC,oBAEJC,EAA0B/B,YACrC,CAACL,IACDC,GAASA,EAAMoC,mBAEJC,EAAuBjC,YAClC,CAACL,IACDC,GAASA,EAAMsC,iBAGJC,EAA2BnC,YACtC,CAACL,IACDC,GAASA,EAAMwC,qBAGJC,EAA6BrC,YACxC,CAACL,IACDC,GAASA,EAAM0C,WAEJC,EAAkCvC,YAC7C,CAACL,IACDC,GAASA,EAAM4C,QAEJC,EAA6BzC,YACxC,CAACL,IACDC,GAASA,EAAM8C,2BAEJC,EAAoC3C,YAC/C,CAACL,IACDC,GAASA,EAAMgD,2BAEJC,EAA2C7C,YACtD,CAACL,IACDC,GAASA,EAAMkD,kCAGJC,EAAmC/C,YAC9C,CAACL,IACDC,GAASA,EAAMoD,UAGJC,EAAqCjD,YAChD,CAACL,IACDC,GAASA,EAAMsD,sBAGJC,EAAsCnD,YACjD,CAACL,IACDC,GAASA,EAAMwD,uBAGJC,EAAmCrD,YAC9C,CAACL,IACDC,GAASA,EAAM0D,oBAEJC,EAAqCvD,YAChD,CAACL,IACDC,GAASA,EAAM4D,yBAGJC,EAAsCzD,YACjD,CAACL,IACDC,GAASA,EAAM8D,0BAGJC,EAAmC3D,YAC9C,CAACL,IACDC,GAASA,EAAMgE,uBAGJC,EAAgC7D,YAC3C,CAACL,IACDC,GAASA,EAAMkE,gBAGJC,EAAwB/D,YACnC,CAACL,IACDC,GAASA,EAAMoE,sBAEJC,EAA4BjE,YACvC,CAACL,IACDC,GAASA,EAAMsE,wBAEJC,EAA2BnE,YACtC,CAACL,IACDC,GAASA,EAAMwE,sBAEJC,EAA+BrE,YAC1C,CAACL,IACDC,GAASA,EAAM0E,6BAEJC,EAA6BvE,YACxC,CAACL,IACDC,GAASA,EAAM4E,2BAEJC,EAAyBzE,YACpC,CAACL,IACDC,GAASA,EAAM8E,oBAEJC,EAAuB3E,YAClC,CAACL,IACDC,GAASA,EAAMgF,wBAEJC,EAA2B7E,YACtC,CAACL,IACDC,GAASA,EAAMkF,+BAEJC,EAA6B/E,YACxC,CAACL,IACDC,GAASA,EAAMoF,iCAEJC,EAAyBjF,YACpC,CAACL,IACDC,GAASA,EAAMsF,0BAGJC,EAA0BnF,YACrC,CAACL,IACDC,GAASA,G,6LC/IJ,IAAKwF,EAAsB,SAAtBA,GAAsB,OAAtBA,IAAsB,mCAAtBA,IAAsB,mCAAtBA,CAAsB,M,YCxDlC,MAAMC,EAAoBC,GACFA,EAAO,gBAAAC,OAAmBD,GAAY,GCgBxDE,EAAWC,IACXC,EAAiBC,IACjBC,EAAoBC,IAWpBC,EATkBC,MACtB,MAAMC,EAAS,kCAAAT,OAAqCU,IAASC,cAAa,iBACpEC,EAAM,IAAIC,OAAO,OAADb,OAAQS,EAAS,YACvC,IACE,OAAOK,SAASC,OAAOC,MAAMJ,GAAK,EACpC,CAAE,MACA,OAAO,IACT,GAEeJ,GAEjB,SAAUS,EAA4BC,GACpC,MAAMC,EAAUC,cACVC,EAAS,CACbC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADxB,OAAYmB,KAGvBM,EAAcP,EAAMQ,QAAO,aAAA1B,OAAgBkB,EAAMQ,SAAY,GACnE,IACE,MAAMC,EAAU,GAAA3B,OAAMC,EAAQ,aAAAD,OAAYyB,GACpCG,QAA+CC,YACnDC,IACAH,EACAN,GAGEO,EAAkBG,eAAe,cAC7BC,YACJC,EAAQC,qCACNN,EAAkBO,KAAKC,aAIrBJ,YACJC,EAAQI,oCACNxC,EAAuByC,gBAI/B,CAAE,MAAOC,SACDP,YACJC,EAAQI,oCACNxC,EAAuByC,gBAG7B,CACF,CAEA,SAAUE,EAAyBtB,GACjC,MAAMC,EAAUC,cACVqB,EAAc,CAClBC,KAAMxB,EAAMQ,QAAQgB,KACpBC,YAAazB,EAAMQ,QAAQgB,KAC3BE,SAAU1B,EAAMQ,QAAQkB,SACxBC,KAAMtC,GAEFc,EAAS,CACbC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADxB,OAAYmB,IAG3B2B,KAAMC,KAAKC,UAAUP,GACrBQ,SAAU,UAGZ,IACE,MAAMtB,EAAU,GAAA3B,OAAMC,EAAQ,aACxBiD,QAA8BrB,YAAKC,IAASH,EAAYN,GAE1D6B,EAAsBnB,eAAe,iBACjCC,YAAIC,EAAQkB,4BAA4BD,UAExClB,YACJC,EAAQmB,gCACNvD,EAAuByC,gBAI/B,CAAE,MAAOC,SACDP,YACJC,EAAQmB,gCACNvD,EAAuByC,gBAG7B,CACF,CAEA,SAAUe,EAAsBC,GAC9B,MAAMnC,EAAUC,cACVmC,EAAcR,KAAKC,UAAU,CACjCQ,SAAUF,EAAS5B,QAAQ+B,SAC3BC,aAAcJ,EAAS5B,QAAQgC,aAC/BC,OAAQL,EAAS5B,QAAQkC,IACzBC,SAAUtD,EACVuD,YAAaR,EAAS5B,QAAQ3B,QAC9B6C,SAAUU,EAAS5B,QAAQkB,WAEvBvB,EAAS,CACbC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADxB,OAAYmB,IAE3B2B,KAAMS,GAGR,IACE,MAAM5B,EAAU,GAAA3B,OAAMG,EAAc,UAC9B4D,QAA2BlC,YAAKC,IAASH,EAAYN,GACvD0C,EAAmBhC,eAAe,iBAC9BC,YACJC,EAAQ+B,0BAA0B,CAChCC,KAAMX,EAAS5B,QAAQwC,gBACvBC,SAAUJ,WAIR/B,YACJC,EAAQmC,uBAAuBvE,EAAuByC,gBAG5D,CAAE,MAAOC,SACDP,YACJC,EAAQmC,uBAAuBvE,EAAuByC,gBAE1D,CACF,CAEA,SAAU+B,EAA6Bf,GACrC,MAAMnC,EAAUC,cACVC,EAASiC,EAAS5B,QAAQK,eAAe,UAC3CuB,EAAS5B,QAAQL,OACjB,CAAC,EACCkC,EAAcR,KAAKC,UAAU,CACjCQ,SAAUF,EAAS5B,QAAQ+B,SAC3BC,aAAcJ,EAAS5B,QAAQgC,aAC/BC,OAAQL,EAAS5B,QAAQkC,IACzBC,SAAUtD,EACVuD,YAAaR,EAAS5B,QAAQ3B,QAC9B6C,SAAUU,EAAS5B,QAAQkB,SAC3BvB,WAGIiD,EAAa,CACjBhD,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADxB,OAAYmB,IAE3B2B,KAAMS,GAGR,IACE,MAAM5B,EAAU,GAAA3B,OAAMG,EAAc,UAE9B4D,QAA2BlC,YAAKC,IAASH,EAAY2C,GAEvDP,EAAmBhC,eAAe,iBAC9BC,YACJC,EAAQsC,iCAAiC,CACvCN,KAAMX,EAAS5B,QAAQwC,gBACvBC,SAAUJ,WAIR/B,YACJC,EAAQuC,8BACN3E,EAAuByC,gBAI/B,CAAE,MAAOC,SACDP,YACJC,EAAQuC,8BACN3E,EAAuByC,gBAG7B,CACF,CAEA,SAAUmC,EAA8BC,GACtC,MAAMrD,EAAS,CACbC,OAAQ,MACRC,QAAS,CACP,eAAgB,+BAElBuB,KAAM4B,EAAShD,QAAQiD,MAOzB,IACE,MAAMhD,EAAa+C,EAAShD,QAAQkD,IAC9BC,QAAqBhD,YAAKiD,MAAOnD,EAAYN,GAoBvB,MAAxBwD,EAAaE,aACT/C,YACJC,EAAQ+C,gCAAgC,CACtCf,KAAMS,EAAShD,QAAQuC,KACvBc,OAAQF,EAAaE,gBAInB/C,YACJC,EAAQgD,wBAAwBpF,EAAuByC,gBAG7D,CAAE,MAAOC,SACDP,YACJC,EAAQgD,wBAAwBpF,EAAuByC,gBAE3D,CACF,CACA,SAAU4C,EAAiCR,GACzC,MAAMrD,EAAS,CACbC,OAAQ,MACRC,QAAS,CACP,eAAgB,+BAElBuB,KAAM4B,EAAShD,QAAQiD,MAGzB,IACE,MAAMhD,EAAa+C,EAAShD,QAAQkD,IAC9BC,QAAqBhD,YAAKiD,MAAOnD,EAAYN,GAEvB,MAAxBwD,EAAaE,aACT/C,YACJC,EAAQ9D,wBAAwB,CAC9B8F,KAAMS,EAAShD,QAAQuC,KACvBc,OAAQF,EAAaE,gBAInB/C,YACJC,EAAQkD,2BACNtF,EAAuByC,gBAI/B,CAAE,MAAOC,SACDP,YACJC,EAAQkD,2BAA2BtF,EAAuByC,gBAE9D,CACF,CAEA,SAAU8C,EAA0BC,GAClC,MAAMlE,EAAUC,cACVC,EAAS,CACbC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADxB,OAAYmB,KAOvBmE,GAHmBD,EAAY3D,QAAQK,eAAe,cAGjCsD,EAAY3D,QAAQK,eAAe,YAAW,aAAA/B,OACxDqF,EAAY3D,QAAQkB,UACjC,IACJ,IAAK,IAAD2C,EACF,MAAM5D,EAAU,GAAA3B,OAAMG,EAAc,wBAAAH,OAClCqF,EAAY3D,QAAQgC,cAAY1D,OAC/BF,EACU,OAAXuF,QAAW,IAAXA,GAAoB,QAATE,EAAXF,EAAa3D,eAAO,IAAA6D,OAAT,EAAXA,EAAsBzB,cACvB9D,OAAGsF,GACE5J,QAA2BmG,YAAKC,IAASH,EAAYN,GACvD3F,EAAmBqG,eAAe,cAC9BC,YAAIC,EAAQuD,yBAAyB9J,EAAmByG,aAExDH,YACJC,EAAQtC,wBAAwBE,EAAuByC,gBAG7D,CAAE,MAAOC,SACDP,YACJC,EAAQtC,wBAAwBE,EAAuByC,gBAE3D,CACF,CACA,SAAUmD,EAAiCJ,GAAc,IAADK,EACtD,MAAMvE,EAAUC,cACVkE,EAAqBD,EAAY3D,QAAQK,eAAe,YAAW,aAAA/B,OACxDqF,EAAY3D,QAAQkB,UACjC,GACEjB,EAAU,GAAA3B,OAAMG,EAAc,wBAAAH,OAClCqF,EAAY3D,QAAQgC,cAAY1D,OAC/BF,EAA4B,OAAXuF,QAAW,IAAXA,GAAoB,QAATK,EAAXL,EAAa3D,eAAO,IAAAgE,OAAT,EAAXA,EAAsB5B,cAAY9D,OAAGsF,GACnDjE,EAAS,CACbC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADxB,OAAYmB,KAG7B,IACE,MAAMzF,QAA2BmG,YAAKC,IAASH,EAAYN,GACvD3F,EAAmBqG,eAAe,cAC9BC,YACJC,EAAQ0D,gCAAgCjK,EAAmByG,aAGvDH,YACJC,EAAQ2D,2BACN/F,EAAuByC,gBAI/B,CAAE,MAAOC,SACDP,YACJC,EAAQ2D,2BAA2B/F,EAAuByC,gBAE9D,CACF,CAEA,SAAUuD,EAAwBR,GAAc,IAADS,EAC7C,MAAM3E,EAAUC,cACVkE,EAAqBD,EAAY3D,QAAQK,eAAe,YAAW,aAAA/B,OACxDqF,EAAY3D,QAAQkB,UACjC,GACEjB,EAAU,GAAA3B,OAAMG,EAAc,wBAAAH,OAClCqF,EAAY3D,QAAQgC,cAAY1D,OAC/BF,EAA4B,OAAXuF,QAAW,IAAXA,GAAoB,QAATS,EAAXT,EAAa3D,eAAO,IAAAoE,OAAT,EAAXA,EAAsBhC,cAAY9D,OAAGsF,GACnDjE,EAAS,CACbC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADxB,OAAYmB,KAG7B,IACE,MAAMrF,QAAyB+F,YAAKC,IAASH,EAAYN,GACrDvF,EAAiBiG,eAAe,cAC5BC,YAAIC,EAAQ8D,uBAAuBjK,EAAiBqG,aAEpDH,YACJC,EAAQ5C,sBAAsBQ,EAAuByC,gBAG3D,CAAE,MAAOC,SACDP,YACJC,EAAQ5C,sBAAsBQ,EAAuByC,gBAEzD,CACF,CACA,SAAU0D,EAA8BX,GAAc,IAADY,EACnD,MAAM9E,EAAUC,cAMVkE,GAJJD,EAAY3D,QAAQK,eAAe,iBACnCsD,EAAY3D,QAAQgC,aAGK2B,EAAY3D,QAAQK,eAAe,YAAW,aAAA/B,OACxDqF,EAAY3D,QAAQkB,UACjC,IACEjB,EAAU,GAAA3B,OAAMG,EAAc,wBAAAH,OAClCqF,EAAY3D,QAAQgC,cAAY1D,OAC/BF,EAA4B,OAAXuF,QAAW,IAAXA,GAAoB,QAATY,EAAXZ,EAAa3D,eAAO,IAAAuE,OAAT,EAAXA,EAAsBnC,cAAY9D,OAAGsF,GACnDjE,EAAS,CACbC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADxB,OAAYmB,KAG7B,IACE,MAAMrF,QAAyB+F,YAAKC,IAASH,EAAYN,GACrDvF,EAAiBiG,eAAe,cAC5BC,YAAIC,EAAQiE,6BAA6BpK,EAAiBqG,aAE1DH,YACJC,EAAQkE,4BACNtG,EAAuByC,gBAI/B,CAAE,MAAOC,SACDP,YACJC,EAAQkE,4BACNtG,EAAuByC,gBAG7B,CACF,CACA,SAAU8D,EAA+Bf,GAAc,IAADgB,EACpD,MAAMlF,EAAUC,cACVkE,EAAqBD,EAAY3D,QAAQK,eAAe,YAAW,aAAA/B,OACxDqF,EAAY3D,QAAQkB,UACjC,GACEjB,EAAU,GAAA3B,OAAMG,EAAc,wBAAAH,OAClCqF,EAAY3D,QAAQgC,cAAY1D,OAC/BF,EAA4B,OAAXuF,QAAW,IAAXA,GAAoB,QAATgB,EAAXhB,EAAa3D,eAAO,IAAA2E,OAAT,EAAXA,EAAsBvC,cAAY9D,OAAGsF,GACnDjE,EAAS,CACbC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADxB,OAAYmB,KAG7B,IACE,MAAMrF,QAAyB+F,YAAKC,IAASH,EAAYN,GACrDvF,EAAiBiG,eAAe,cAC5BC,YAAIC,EAAQqE,8BAA8BxK,EAAiBqG,aAE3DH,YACJC,EAAQ1C,6BACNM,EAAuByC,gBAI/B,CAAE,MAAOC,SACDP,YACJC,EAAQ1C,6BACNM,EAAuByC,gBAG7B,CACF,CAEA,SAAUiE,EAA+BrF,GAEvC,MAAMC,EAAUC,cACVoF,EAAgBtF,EAAMQ,QAAQ+E,SAAQ,aAAAzG,OAC3BkB,EAAMQ,QAAQ+E,UAC3B,GACEC,EAAiBxF,EAAMQ,QAAQkB,SAAQ,aAAA5C,OAC5BkB,EAAMQ,QAAQkB,UAC3B,GACEA,EACJ4D,GAAiBE,EAAc,aAAA1G,OACdkB,EAAMQ,QAAQkB,UAC3B8D,EACA/E,EAAU,GAAA3B,OAAMK,EAAiB,YAAAL,OAAWwG,GAAaxG,OAAG4C,GAC5DvB,EAAS,CACbC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADxB,OAAYmB,KAG7B,IACE,MAAMwF,QAAsB9E,YAAKC,IAASH,EAAYN,GAClDsF,EAAc5E,eAAe,cACzBC,YAAIC,EAAQ2E,iBAAiBD,EAAcxE,KAAKC,aAEhDJ,YACJC,EAAQ4E,oBAAoBhH,EAAuByC,gBAGzD,CAAE,MAAOC,SACDP,YACJC,EAAQ4E,oBAAoBhH,EAAuByC,gBAEvD,CACF,CAEA,SAAUwE,EAAuBC,GAE/B,MAAM5F,EAAUC,oBACV4F,YAAM,KACZ,MAAM3F,EAAS,CACbC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADxB,OAAYmB,IAE3B2B,KAAMC,KAAKC,UAAU+D,EAAWrF,UAElC,IACE,MAAMC,EAAU,GAAA3B,OAAMK,EAAiB,cACjC4G,QAA2BpF,YAAKC,IAASH,EAAYN,GAEvD4F,EAAmBlF,eAAe,iBAC9BC,YAAIC,EAAQiF,wBAAwBD,UAEpCjF,YACJC,EAAQkF,uBAAuBtH,EAAuByC,gBAG5D,CAAE,MAAOC,SACDP,YACJC,EAAQkF,uBAAuBtH,EAAuByC,gBAE1D,CACF,CAEA,SAAU8E,EAA8BC,GACtC,MAAMlG,EAAUC,cAEVC,EAAS,CACbC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADxB,OAAYmB,KAGvBD,EAAQmG,EAAU3F,QAAQ4F,KAAK,KAC/B3F,EAAU,GAAA3B,OAAMC,EAAQ,uBAAAD,OAAsBkB,GAGpD,IACE,MAAMqG,QAAwB1F,YAAKC,IAASH,EAAYN,GAEpDkG,EAAgBxF,eAAe,cAC3BC,YAAIC,EAAQuF,0BAA0BD,EAAgBpF,KAAKC,aAE3DJ,YACJC,EAAQwF,yBAAyB5H,EAAuByC,gBAG9D,CAAE,MAAOC,SACDP,YACJC,EAAQwF,yBAAyB5H,EAAuByC,gBAE5D,CACF,CAEO,SAAUoF,UACTC,YAAW1F,EAAQ2F,sBAAsB3D,KAAM6C,SAE/Ca,YACJ1F,EAAQ4F,2BAA2B5D,KACnCzB,SAEImF,YAAW1F,EAAQ6F,sBAAsB7D,KAAMZ,SAC/CsE,YACJ1F,EAAQ8F,6BAA6B9D,KACrCI,SAGIsD,YACJ1F,EAAQ+F,mCAAmC/D,KAC3ChD,SAEI0G,YAAW1F,EAAQgG,eAAehE,KAAMsC,SACxCoB,YACJ1F,EAAQiG,uBAAuBjE,KAC/BmB,SAEIuC,YACJ1F,EAAQkG,8BAA8BlE,KACtCwB,SAEIkC,YACJ1F,EAAQmG,4BAA4BnE,KACpCmC,SAEIuB,YAAW1F,EAAQoG,qBAAqBpE,KAAM4B,SAC9C8B,YACJ1F,EAAQqG,2BAA2BrE,KACnC+B,SAEI2B,YACJ1F,EAAQsG,uBAAuBtE,KAC/BQ,SAEIkD,YACJ1F,EAAQuG,0BAA0BvE,KAClCiB,SAEIyC,YACJ1F,EAAQwG,uBAAuBxE,KAC/BmD,EAEJ,CC/lBO,MAAM7M,EAAuC,CAClDkD,SAAS,EACTR,MAAO,KACPF,SAAU,CAAC,EACXvC,kBAAmB,GACnBI,oBAAoB,EACpBE,qBAAsB,KAEtBY,mBAAoB,GACpBmD,qBAAqB,EACrBc,wBAAyB,KACzB7D,iBAAkB,GAClBqD,mBAAmB,EACnBE,sBAAuB,KACvBqJ,uBAAwB,GACxBC,yBAAyB,EACzBxC,4BAA6B,KAC7BvK,0BAA2B,GAC3BmD,4BAA4B,EAC5BU,+BAAgC,KAChCzD,wBAAyB,GACzBiD,0BAA0B,EAC1BM,6BAA8B,KAC9BhD,mBAAmB,EACnBI,eAAgB,GAChBE,mBAAoB,KAEpBnC,0BAA2B,GAC3ByC,0BAA0B,EAC1B7B,qBAAsB,CAAC,EACvBE,mBAAoB,KACpBR,SAAU,GAEVqC,0BAA0B,EAC1BnC,oBAAqB,CAAC,EACtBgB,uBAAwB,KAExBqB,iCAAiC,EACjCnC,2BAA4B,CAAC,EAC7BgB,8BAA+B,KAE/BuB,qBAAqB,EACrBE,qBAAsB,CAAC,EACvBE,kBAAmB,KACnBE,wBAAwB,EACxBE,wBAAyB,CAAC,EAC1BE,qBAAsB,KACtBE,cAAe,EACf9B,kBAAkB,EAClBgC,oBAAqB,GACrBmK,qBAAsB,KACtBjK,sBAAuB,IA0BZkK,EAAQC,YAAY,CAC/BpG,KAAM,oBACNnI,eACAwO,SAAU,CACRnB,sBAAuBvN,IACrBA,EAAMoD,SAAU,CAAI,EAEtByJ,wBAAyBA,CAAC7M,EAAO2O,KAC/B3O,EAAMoD,SAAU,EAChBpD,EAAM4C,MAAQ,KACd5C,EAAM0C,SAAWiM,EAAOtH,OAAO,EAEjCyF,uBAAwBA,CAAC9M,EAAO2O,KAC9B3O,EAAMoD,SAAU,EAChBpD,EAAM4C,MAAQ+L,EAAOtH,OAAO,EAE9BsG,mCAAoC3N,IAClCA,EAAMO,oBAAqB,CAAI,EAEjCsH,qCAAsCA,CACpC7H,EACA2O,KAEA3O,EAAMG,kBAAoBwO,EAAOtH,QACjCrH,EAAMO,oBAAqB,EAC3BP,EAAMS,qBAAuB,IAAI,EAEnCuH,oCAAqCA,CACnChI,EACA2O,KAEA3O,EAAMO,oBAAqB,EAC3BP,EAAMS,qBAAuBkO,EAAOtH,OAAO,EAE7CwG,uBAAwBA,CAAC7N,EAAQ2O,KAC/B3O,EAAMwE,qBAAsB,CAAI,EAElC2G,yBAA0BA,CAACnL,EAAO2O,KAChC3O,EAAMqB,mBAAqBsN,EAAOtH,QAAQU,KAC1C/H,EAAMsF,wBAA0B,KAChCtF,EAAMwE,qBAAsB,CAAK,EAEnCc,wBAAyBA,CAACtF,EAAO2O,KAC/B3O,EAAMwE,qBAAsB,EAC5BxE,EAAMsF,wBAA0BqJ,EAAOtH,OAAO,EAEhD2G,qBAAsBhO,IACpBA,EAAM8E,mBAAoB,CAAI,EAEhC4G,uBAAwBA,CAAC1L,EAAO2O,KAC9B3O,EAAMyB,iBAAmBkN,EAAOtH,QAAQU,KACxC/H,EAAMgF,sBAAwB,KAC9BhF,EAAM8E,mBAAoB,CAAK,EAEjCE,sBAAuBA,CAAChF,EAAO2O,KAC7B3O,EAAM8E,mBAAoB,EAC1B9E,EAAMgF,sBAAwB2J,EAAOtH,OAAO,EAE9C4G,2BAA4BjO,IAC1BA,EAAMsO,yBAA0B,CAAI,EAEtCzC,6BAA8BA,CAAC7L,EAAO2O,KACpC3O,EAAMqO,uBAAyBM,EAAOtH,QAAQU,KAC9C/H,EAAM8L,4BAA8B,KACpC9L,EAAMsO,yBAA0B,CAAK,EAEvCxC,4BAA6BA,CAAC9L,EAAO2O,KACnC3O,EAAMsO,yBAA0B,EAChCtO,EAAM8L,4BAA8B6C,EAAOtH,OAAO,EAEpD0G,4BAA6B/N,IAC3BA,EAAM4E,0BAA2B,CAAI,EAEvCqH,8BAA+BA,CAACjM,EAAO2O,KACrC3O,EAAM2B,wBAA0BgN,EAAOtH,QAAQU,KAC/C/H,EAAMkF,6BAA+B,KACrClF,EAAM4E,0BAA2B,CAAK,EAExCM,6BAA8BA,CAAClF,EAAO2O,KACpC3O,EAAM4E,0BAA2B,EACjC5E,EAAMkF,6BAA+ByJ,EAAOtH,OAAO,EAErDyG,8BAA+B9N,IAC7BA,EAAM0E,4BAA6B,CAAI,EAEzC4G,gCAAiCA,CAACtL,EAAO2O,KACvC3O,EAAMuB,0BAA4BoN,EAAOtH,QAAQU,KACjD/H,EAAMoF,+BAAiC,KACvCpF,EAAM0E,4BAA6B,CAAK,EAE1C6G,2BAA4BA,CAACvL,EAAO2O,KAClC3O,EAAM0E,4BAA6B,EACnC1E,EAAMoF,+BAAiCuJ,EAAOtH,OAAO,EAGvDmG,2BAA4BA,CAACxN,EAAO2O,KAClC3O,EAAM8C,0BAA2B,CAAI,EAEvCgG,4BAA6BA,CAAC9I,EAAO2O,KACnC3O,EAAM8C,0BAA2B,EACjC9C,EAAMiB,qBAAuB0N,EAAOtH,QACpCrH,EAAMmB,mBAAqB,IAAI,EAEjC4H,gCAAiCA,CAAC/I,EAAO2O,KACvC3O,EAAM8C,0BAA2B,EACjC9C,EAAMmB,mBAAqBwN,EAAOtH,OAAO,EAG3CuH,sBAAuBA,CAAC5O,EAAO2O,KAhHCE,IAACC,EAAKC,EAiHpC/O,EAAMK,2BAjHyByO,EAkH7B9O,EAAMK,0BAlH4B0O,EAmHlCJ,EAAOtH,QAlHAyH,EAAIE,QAAOC,GAAQA,EAAKF,KAAOA,KAoHxC/O,EAAMW,SAAWgO,EAAOtH,OAAO,EAGjC6H,iBAAkBlP,IAChBA,EAAMK,0BAA4B,EAAE,EAEtC8O,eAAgBA,CAACnP,EAAO2O,KA9IIS,EAACN,EAAKhH,KACpC,IAAIuH,GAAS,EACb,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAIS,OAAQD,IAC1BR,EAAIQ,GAAGP,KAAOjH,EAAKiH,KACrBM,EAAQC,GAGRD,GAAS,EACPvH,EAAK0H,MAAQ,EACfV,EAAIO,GAASvH,EAEbgH,EAAIW,OAAOJ,EAAO,IAEA,IAAXA,GAA+B,IAAfvH,EAAK0H,OAC9BV,EAAIY,KAAK5H,EAGD,EA8HNsH,CAAiBpP,EAAMK,0BAA2BsO,EAAOtH,QAAQ,EAEnEsI,mBAAoBA,CAAC3P,EAAO2O,KAC1B3O,EAAMK,0BAA4BsO,EAAOtH,OAAO,EAElDoG,sBAAsBA,CAACzN,EAAO2O,KAC5B3O,EAAMgD,0BAA2B,CAAI,EAEvC2G,0BAA2BA,CAAC3J,EAAO2O,KACjC3O,EAAMgD,0BAA2B,EACjChD,EAAMa,oBAAsB8N,EAAOtH,QACnCrH,EAAM6B,uBAAyB,IAAI,EAErCkI,uBAAwBA,CAAC/J,EAAO2O,KAC9B3O,EAAMgD,0BAA2B,EACjChD,EAAM6B,uBAAyB8M,EAAOtH,OAAO,EAE/CqG,6BAA8B1N,IAC5BA,EAAMkD,iCAAkC,CAAI,EAE9CgH,iCAAkCA,CAAClK,EAAO2O,KACxC3O,EAAMkD,iCAAkC,EACxClD,EAAMe,2BAA6B4N,EAAOtH,QAC1CrH,EAAM+B,8BAAgC,IAAI,EAE5CoI,8BAA+BA,CAACnK,EAAO2O,KACrC3O,EAAMkD,iCAAkC,EACxClD,EAAM+B,8BAAgC4M,EAAOtH,OAAO,EAGtD6G,uBAAwBlO,IACtBA,EAAMsD,qBAAsB,CAAI,EAElCqH,gCAAiCA,CAAC3K,EAAO2O,KACvC3O,EAAMsD,qBAAsB,EAC5BtD,EAAMwD,qBAAuBmL,EAAOtH,OAAO,EAE7CuD,wBAAyBA,CAAC5K,EAAO2O,KAC/B3O,EAAMsD,qBAAsB,EAC5BtD,EAAM0D,kBAAoBiL,EAAOtH,OAAO,EAE1C8G,0BAA2BnO,IACzBA,EAAM4D,wBAAyB,CAAI,EAErCE,wBAAyBA,CAAC9D,EAAO2O,KAC/B3O,EAAM4D,wBAAyB,EAC/B5D,EAAM8D,wBAA0B6K,EAAOtH,OAAO,EAEhDyD,2BAA4BA,CAAC9K,EAAO2O,KAClC3O,EAAM4D,wBAAyB,EAC/B5D,EAAMgE,qBAAuB2K,EAAOtH,OAAO,EAE7CuG,eAAgB5N,IACdA,EAAMkC,mBAAoB,CAAI,EAEhCqK,iBAAkBA,CAACvM,EAAO2O,KACxB3O,EAAMkC,mBAAoB,EAE1BlC,EAAMsC,eAAiBqM,EAAOtH,QAAQ2H,QACpCC,GAA8C,eAAtCA,EAAKW,iBAAiBC,eAEhC7P,EAAMwC,mBAAqB,IAAI,EAEjCgK,oBAAqBA,CAACxM,EAAO2O,KAC3B3O,EAAMkC,mBAAoB,EAC1BlC,EAAMwC,mBAAqBmM,EAAOtH,OAAO,EAE3CyI,mBAAoBA,CAAC9P,EAAO2O,KAC1B3O,EAAMkE,cAAgByK,EAAOtH,OAAO,EAEtC+G,uBAAwBpO,IACtBA,EAAMoC,kBAAmB,CAAI,EAE/B+K,0BAA2BA,CAACnN,EAAO2O,KACjC3O,EAAMoC,kBAAmB,EAEzBpC,EAAMoE,oBAAsBuK,EAAOtH,OAAO,EAE5C+F,yBAA0BA,CAACpN,EAAO2O,KAChC3O,EAAMoC,kBAAmB,EACzBpC,EAAMuO,qBAAuBI,EAAOtH,OAAO,EAE7C0I,oBAAqBA,CAAC/P,EAAO2O,KAEvBA,EAAOtH,QAAQK,eAAe,WAChC1H,EAAMsE,sBAAwB,IACzBtE,EAAMsE,sBACTqK,EAAOtH,SAGTrH,EAAMsE,sBAAwBqK,EAAOtH,OACvC,MAKSO,QAASoI,GAA6BxB,EAExCyB,EAAwBA,KACnCC,YAAiB,CAAEC,IAAK3B,EAAMnG,KAAM+H,QAAS5B,EAAM4B,UACnDC,YAAc,CAAEF,IAAK3B,EAAMnG,KAAMiI,KAAMjD,IAChC,CAAEkD,qBAAsB/B,EAAM5G,S,oCChTvC,mBAiBe4I,IAdaA,KAC1B,MAAMC,EAAWC,cACXC,EAAWF,EAASE,UACnBC,EAAkBC,GAAoBC,qBAEvCC,EAAoBJ,EAASK,WADhB,cAOnB,OAJAC,qBAAU,KACNJ,EAAiBE,EAAkB,GACpC,CAACN,IAEGM,CAAiB,C,oCCd1B,iQA+FO,SAASG,EAAcC,GAS1B,IAT2B,QAC7BC,EAAO,KACPtJ,EAAI,SACJuJ,EAAQ,eACRC,EAAc,KACd1H,EAAI,YACJ2H,EAAW,qBACXC,EAAoB,uBACpBC,GACDN,EACKO,EAAUC,cAMUxL,MACtB,MAAMC,EAAS,kCAAAT,OAAqCU,IAASC,cAAa,iBACpEC,EAAM,IAAIC,OAAO,OAADb,OAAQS,EAAS,YACvC,IACE,OAAOK,SAASC,OAAOC,MAAMJ,GAAK,EACpC,CAAE,MACA,OAAO,IACT,GAGeJ,GAfjB,MAgBMyL,EAAQC,cAERC,EAAiBP,GAA+B,IAAhBA,EAAoBA,EAAc,GAClEQ,EAAWC,oBAEX,gBAAEC,GAAoBC,cACtBC,EAAmBC,YAAYC,MAE/B,cACJC,EAAa,kBACbC,EAAiB,aACjBC,EAAY,WACZC,EAAU,KACVC,EAAI,gBAIJC,EAAe,YACfC,EAAW,YACXC,EAAW,SAEXC,EAAQ,SACRC,EAAQ,aACRC,EAEAhT,OAAO,UAAEiT,EAAS,SAAEC,KAlBLC,cAmBbC,mBACF,CACEhC,UACAtJ,OACA5H,aAAc,CACZ+S,UACEd,EAAiBzK,eAAe,QAChCyK,EAAiBhC,MAAG,eAAAxK,OAAoBiE,GAAIjE,OAAGmM,GAC3CK,EAAiBkB,MACjB,EAINH,SAAU,IAEZI,eAAe,GAIjBC,kBAIF,OACEC,eAACC,IAAI,CACHC,cAAc,SACdC,WAAW,MACXC,MAAM,OACNC,gBAAgB,QAAOC,SAAA,CAEvBN,eAACO,IAAW,CACVC,WAAW,aACXC,WAAW,MACXC,QAAQ,YACJ5B,IAAewB,SAAA,CAEnBK,cAACC,IAAK,CAACH,WAAW,MAAMI,MAAM,QAAOP,SAClCtB,EAAa8B,KAAIC,GAChBf,eAACgB,IAAE,IAAKD,EAAYE,sBAAqBX,SAAA,CAOtCzC,GACC8C,cAACO,IAAE,CACDV,WAAW,aACXW,SAAS,MACTC,YAAY,MACZC,aAAa,QAGhBN,EAAYrN,QAAQoN,KAAIQ,GACvBX,cAACO,IAAE,CACDV,WAAW,aACXe,cAAc,aACdC,QAAQ,UACRX,MAAM,WACFS,EAAOG,iBAAgBnB,SAE1BgB,EAAOI,OAAO,cAGlB5D,GAAkB6C,cAACO,IAAE,WAI5BP,cAACgB,IAAK,CAAClB,WAAW,MAAMI,MAAM,YAAa9B,IAAmBuB,SAC3DpB,EAAK4B,KAAI,CAACc,EAAK9F,KACdmD,EAAW2C,GAGT5B,eAACgB,IAAE,CACDa,eAAe,OACfC,OAAiB,wBAAT1L,GAAkC,UAC1C2L,UAAU,SACV,0BACY,oBAAT3L,GAAuC,oBAATA,IAC/BwL,EAAII,MAAM,GAAGJ,IAAIK,SAASC,KAE5B,wBACW,wBAAT9L,GACAwL,EAAII,MAAM,GAAGJ,IAAIK,SAASC,KAE5BC,QAASA,KA/HN5G,MAgIY,wBAATnF,IAhIHmF,EAiIUqG,EAAII,MAAM,GAAGJ,IAAIK,SAASC,KAAKE,IAhIxDlE,EAAQ,gBAAD/L,OAAiBoJ,IAiIV,EAEF8G,OAAQvE,EAAiB,CAAEwE,WAAY,UAAa,MAChDV,EAAIW,cAAajC,SAAA,CAEpBzC,GACC8C,cAAC6B,IAAE,CAACrB,SAAS,OAAOC,YAAY,OAAOC,aAAa,MAAKf,SAC7C,wBAATlK,EACwC,kBAAvCwL,EAAII,MAAM,GAAGJ,IAAIK,SAASlN,SACxB4L,cAAC8B,IAAI,CACHC,MAAM,gBACNC,EAAE,OACFC,EAAE,OACF/B,MAAM,QACNgC,GAAIC,MAGN,gBADElB,EAAII,MAAM,GAAGJ,IAAIK,SAASlN,SAE5B4L,cAAC8B,IAAI,CACHE,EAAE,OACFD,MAAM,cACNE,EAAE,OACF/B,MAAM,QACNgC,GAAIE,MAEsC,KAA1CnB,EAAII,MAAM,GAAGJ,IAAIK,SAASC,KAAKc,OACjCrC,cAAC8B,IAAI,CACHE,EAAE,OACFC,EAAE,OACFF,MAAM,iBACN7B,MAAM,QACNgC,GAAII,MAGNtC,cAAC8B,IAAI,CACH5B,MAAM,QACN8B,EAAE,OACFC,EAAE,OACFF,MAAM,SACNG,GAAIK,MAIRrF,IAKL+D,EAAII,MAAMlB,KAAI,CAACqC,EAAMtH,IAGlB8E,cAAC6B,IAAE,CACD3B,MACW,wBAATzK,EAC6C,YAAzCwL,EAAII,MAAM,GAAGJ,IAAIK,SAASmB,WACxB,UACyC,WAAzCxB,EAAII,MAAM,GAAGJ,IAAIK,SAASmB,WAC1B,UACA,GACF,GAQN7B,cAAc,OACdJ,SACW,wBAAT/K,EAAiC,OAAS,OAG5CoL,QAAQ,aACJ2B,EAAKE,eACTlC,SAAS,OAAMb,SAKH,IAAVzE,GACS,wBAATzF,IAEE,cADAwL,EAAII,MAAM,GAAGJ,IAAIK,SAASmB,WAE1B,UAC0C,YAAzCxB,EAAII,MAAM,GAAGJ,IAAIK,SAASmB,YACzB,iBACO,IAAVvH,GACU,wBAATzF,GACAkN,YACE1B,EAAII,MAAM,GAAGJ,IAAIK,SAASsB,gBAEnB,IAAV1H,GACU,iBAATzF,GACAkN,YACE1B,EAAII,MAAM,GAAGJ,IAAIK,SAASuB,YAEnB,IAAV3H,GACU,wBAATzF,GACAwL,EAAII,MAAM,GAAGJ,IAAIK,SAASC,KAAKuB,WAC/B7B,EAAII,MAAM,GAAGJ,IAAIK,SAASC,KAAKuB,WACvB,GAAT5H,GACU,cAATzF,GACA,IAAIsN,KAEF9B,EAAII,MAAM,GAAGJ,IAAIK,SAAS0B,aAEzBC,cACA5I,MAAM,EAAG,KACH,IAAVa,IACW,oBAATzF,GACU,mBAATA,IAEA,gBADFwL,EAAII,MAAM,GAAGJ,IAAIK,SAAS4B,WAExBlD,cAACmD,IAAI,CACHC,GAAG,QACHlD,MAAM,QACNmD,MAAM,SACNC,aAAa,OACb7D,MAAM,QAAOE,SAGZsB,EAAII,MAAM,GAAGJ,IAAIK,SAAS4B,aAGtB,IAAVhI,IACW,oBAATzF,GACU,mBAATA,IAEA,gBADFwL,EAAII,MAAM,GAAGJ,IAAIK,SAAS4B,WAExBlD,cAACmD,IAAI,CACHC,GAAG,QACHlD,MAAM,QACNmD,MAAM,SACNC,aAAa,OACb7D,MAAM,QAAOE,SAGZsB,EAAII,MAAM,GAAGJ,IAAIK,SAAS4B,aAGtB,IAAVhI,IACW,oBAATzF,GACU,mBAATA,IACF,aACS,IAAVyF,GACU,oBAATzF,IACCwL,EAAII,MAAM,GAAGJ,IAAIK,SAASiC,aACzBvD,cAAC8B,IAAI,CACH5B,MAAM,QACN8B,EAAE,OACFC,EAAE,OACFC,GAAIsB,MAGNxD,cAAC8B,IAAI,CACHE,EAAE,OACFC,EAAE,OACF/B,MAAM,QACNgC,GAAIuB,SAGC,oBAAThO,GACS,mBAATA,IACU,IAAVyF,GAEE,0BADF+F,EAAII,MAAM,GAAGJ,IAAIK,SAAS/K,QAExB8I,eAAC8D,IAAI,CAAAxD,SAAA,CACFsB,EAAII,MAAM,GAAGJ,IAAIK,SAAS7D,MAAO,IAClC4B,eAACqE,IAAK,CACJJ,aAAa,OACbzC,QAAQ,WACRd,QAAQ,UAASJ,SAAA,CAEhB,IAAI,eACQ,WAIrB6C,EAAKzB,OAAO,YAInB5D,GACC6C,cAAC6B,IACC,CACArB,SAAS,OACTK,QAAQ,UACRJ,YAAY,MACZC,aAAa,MACbF,SAAmB,wBAAT/K,EAAiC,OAAS,OAAOkK,SAE3DN,eAACC,IAAI,CACHqE,GAAI,CACF,kBAAmB,CACjBC,QAAS,UAGbhJ,GAAE,MAAApJ,OAAQ2J,GACVyI,QAAQ,OACRC,QAAQ,SACRC,WAAW,SAAQnE,SAAA,CAET,wBAATlK,GACCuK,cAAC8B,IAAI,CACHI,GAAI6B,IACJ/B,EAAE,OACF9B,MAAM,QACN+B,EAAE,SAII,mBAATxM,GAA6B0H,EACpB,oBAAT1H,GACC4J,eAAC2E,IAAM,CAACX,MAAM,SAASpB,EAAE,OAAMtC,SAAA,CAC7BK,cAACV,IAAI,CACH0C,EAAE,OACF,0CAAAxQ,OAAyCyP,EAAII,MAAM,GAAGJ,IAAIK,SAAS2C,WACnEhC,EAAE,OACFmB,GAAG,QACHC,MAAM,SACNQ,QAAQ,SACRP,aAAa,MACbnC,OAAO,UACPK,QAAS0C,GACP5G,EACE2D,EAAII,MAAM,GAAGJ,IAAIK,SAAS2C,WAG9BtE,SAEAK,cAAC8B,IAAI,CAAC5B,MAAM,QAAQgC,GAAIiC,QAE1BnE,cAACV,IACC,CACA,wCAAA9N,OAAuCyP,EAAII,MAAM,GAAGJ,IAAIK,SAAS2C,WACjEjC,EAAE,OACFC,EAAE,OACFmB,GAAG,QACHC,MAAM,SACNQ,QAAQ,SACR1C,OAAO,UACPmC,aAAa,MACb9B,QAAS0C,GACP7G,EAAqB4D,EAAII,MAAM,GAAGJ,IAAIK,UACvC3B,SAEDK,cAAC8B,IAAI,CAAC5B,MAAM,QAAQgC,GAAIkC,WAIpB,mBAAT3O,GACCuK,cAACgE,IAAM,CAACX,MAAM,SAASpB,EAAE,OAAMtC,SAC7BK,cAACV,IACC,CACA,wCAAA9N,OAAuCyP,EAAII,MAAM,GAAGJ,IAAIK,SAAS2C,WACjEjC,EAAE,OACFC,EAAE,OACFmB,GAAG,QACHC,MAAM,SACNQ,QAAQ,SACR1C,OAAO,UACPmC,aAAa,MACb9B,QAAS0C,GACP7G,EAAqB4D,EAAII,MAAM,GAAGJ,IAAIK,UACvC3B,SAEDK,cAAC8B,IAAI,CAAC5B,MAAM,OAAOgC,GAAImC,UAInB,iBAAT5O,GACCwL,EAAII,MAAM,GAAGJ,IAAIK,SAASgD,YAAc7G,GACtC4B,eAAC2E,IAAM,CAACX,MAAM,SAASpB,EAAE,OAAMtC,SAAA,CAC7BK,cAACV,IAAI,CACH0C,EAAE,OACF,0CAAAxQ,OAAyCyP,EAAII,MAAM,GAAGJ,IAAIK,SAAS1G,IACnEqH,EAAE,OACFmB,GAAG,QACHC,MAAM,SACNQ,QAAQ,SACRP,aAAa,MACbnC,OAAO,UACPK,QAAS0C,GACP5G,EACE2D,EAAII,MAAM,GAAGJ,IAAIK,SAASC,MAG9B5B,SAEAK,cAAC8B,IAAI,CAAC5B,MAAM,QAAQgC,GAAIiC,QAE1BnE,cAACV,IACC,CACA,wCAAA9N,OAAuCyP,EAAII,MAAM,GAAGJ,IAAIK,SAAS1G,IACjEoH,EAAE,OACFC,EAAE,OACFmB,GAAG,QACHC,MAAM,SACNQ,QAAQ,SACR1C,OAAO,UACPmC,aAAa,MACb9B,QAAS0C,GACP7G,EAAqB4D,EAAII,MAAM,GAAGJ,IAAIK,UACvC3B,SAEDK,cAAC8B,IAAI,CAAC5B,MAAM,QAAQgC,GAAIkC,WAItB,wBAAT3O,GACC4J,eAAC2E,IAAM,CAACX,MAAM,SAASpB,EAAE,OAAMtC,SAAA,CAC7BK,cAACV,IAAI,CACH0C,EAAE,OACFC,EAAE,OACF,6CAAAzQ,OAA4CyP,EAAII,MAAM,GAAGJ,IAAIK,SAASC,MACtE6B,GAAG,QACHC,MAAM,SACNQ,QAAQ,SACRP,aAAa,MACbnC,OAAO,UACPK,QAAS0C,GACP5G,EACE2D,EAAII,MAAM,GAAGJ,IAAIK,SAASC,MAM9B5B,SAEAK,cAAC8B,IAAI,CAAC5B,MAAM,QAAQgC,GAAIiC,QAE1BnE,cAACV,IACC,CACA,2CAAA9N,OAA0CyP,EAAII,MAAM,GAAGJ,IAAIK,SAASC,MACpES,EAAE,OACFC,EAAE,OACFmB,GAAG,QACHC,MAAM,SACNQ,QAAQ,SACR1C,OAAO,UACPmC,aAAa,MACb9B,QAAS0C,GACP7G,EAAqB4D,EAAII,MAAM,GAAGJ,IAAIK,UACvC3B,SAEDK,cAAC8B,IAAI,CAAC5B,MAAM,QAAQgC,GAAIkC,YAInB,oBAAT3O,GACS,oBAATA,IACA4J,eAAC2E,IAAM,CAACX,MAAM,SAASpB,EAAE,OAAMtC,SAAA,CAC7BK,cAACV,IAAI,CACH0C,EAAE,OACFC,EAAE,OACFmB,GAAG,QACHC,MAAM,SACNQ,QAAQ,SACRP,aAAa,MACbnC,OAAO,UACP,wBACEF,EAAII,MAAM,GAAGJ,IAAIK,SAASC,KAE5BC,QAAS0C,GACP5G,EACE2D,EAAII,MAAM,GAAGJ,IAAIK,SAASC,MAG9B5B,SAEAK,cAAC8B,IAAI,CAAC5B,MAAM,QAAQgC,GAAIiC,QAClB,uBAe5BnE,cAACV,IAAI,CACHiF,eAAe,WACf1D,QAAQ,WACR2D,YAAY,OACZtE,MAAM,SAAQP,SAEdN,eAACC,IAAI,CACHO,WAAW,aACXC,WAAW,MACXsB,UAAU,aACVqD,UAAU,wBACVnB,aAAa,KACboB,UAAU,OACVF,YAAY,OACZtE,MAAM,QACNW,QAAQ,WACR+C,QAAQ,eAAcjE,SAAA,CAEtBN,eAAA,UAAQmC,QAASA,IAAM3C,IAAgB8F,UAAWnG,EAAgBmB,SAAA,CAChEN,eAACuF,IAAG,CAAC1C,GAAG,IAAIpC,WAAW,MAAMwD,aAAa,MAAK3D,SAAA,CAC5C,IAAI,IACA,OACA,IAAI,UAEH,IACVK,cAAC4E,IAAG,CAAC1C,GAAG,OAAOhC,MAAM,QAAQQ,aAAa,MAAMmE,cAAc,MAAKlF,SACjEK,cAAC8E,IAAK,CACJ/E,QAAQ,UACRgF,KAAK,OACLtF,MAAM,OACNuF,OAAQ,CAAE9E,MAAO,QACjB+E,UAAU,QACVC,SAAS,OACTC,aAAa,cACbC,kBAAkB,QAClBC,IAAKzH,EACLnI,KAAK,SACLyJ,MAAOJ,EAAY,EACnBwG,QAASpB,GAAKA,EAAEqB,OAAOC,SACvBC,QAASvB,IACO,cAAVA,EAAElI,KACJkI,EAAEqB,OAAOC,QACX,EAEFE,SAAUxB,IACR,MAAM3F,EAAO2F,EAAEqB,OAAOrG,MAAQyG,OAAOzB,EAAEqB,OAAOrG,OAAS,EAAI,EAC3DP,EAASJ,EAAK,MAGb,IACPc,eAACuF,IAAG,CAAChE,cAAc,YAAYsB,GAAG,OAAOhC,MAAM,QAAOP,SAAA,CACpDN,eAAA,QAAAM,SAAA,CAAM,MAAIjB,EAAYtD,UAAe,OAEvCiE,eAAA,UAAQmC,QAASA,IAAM5C,IAAY+F,UAAWlG,EAAYkB,SAAA,CAAC,OAEzDN,eAACuF,IAAG,CAAC1C,GAAG,IAAIpC,WAAW,MAAMwD,aAAa,MAAK3D,SAAA,CAC5C,IACA,YAEK,WAKpB,C,oCC/qBe,QAA0B,sC,uTCyBlC,IAAKiG,EAAsB,SAAtBA,GAAsB,OAAtBA,IAAsB,mCAAtBA,IAAsB,mCAAtBA,CAAsB,MCjBlC,MAAMnU,E,MAAWC,EAEjB,SAAUmU,EAAwBnT,GAChC,MAAMC,EAAUC,cAEVkT,EAAU,GAAAtU,OAAMC,EAAQ,wBAAAD,OAAuBkB,EAAMQ,SAErDL,EAAS,CACbC,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADxB,OAAYmB,KAI7B,IACE,MAAMgD,QAAiBtC,YAAKC,IAASwS,EAAYjT,GAC7C8C,EAASpC,eAAe,iBACpBC,YAAIC,EAAQsS,wBAAwBpQ,UAEpCnC,YACJC,EAAQuS,uBAAuBJ,EAAuB9R,gBAK5D,CAAE,MAAOoQ,SACD1Q,YACJC,EAAQuS,uBAAuBJ,EAAuB9R,gBAE1D,CACF,CAEA,SAAUmS,EAA+BvT,GACvC,MAAMC,EAAUC,cAEVC,EAAS,CACbC,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADxB,OAAYmB,KAGvBmT,EAAU,GAAAtU,OAAMC,EAAQ,kBAAAD,OAAiBkB,EAAMQ,QAAQgT,QAAO,KAAA1U,OAAIkB,EAAMQ,QAAQuC,MACtF,IACE,MAAME,QAAiBtC,YAAKC,IAASwS,EAAYjT,GAC7C8C,EAASpC,eAAe,iBACpBC,YAAIC,EAAQ0S,qBAAqBxQ,UAEjCnC,YACJC,EAAQ2S,2BACNR,EAAuB9R,gBAK/B,CAAE,MAAOoQ,SACD1Q,YACJC,EAAQ2S,2BAA2BR,EAAuB9R,gBAE9D,CACF,CAEO,SAAUuS,UACTlN,YAAW1F,EAAQ6S,kBAAkB7Q,KAAMoQ,SAC3C1M,YACJ1F,EAAQ8S,yBACRN,EAEJ,CCpEO,MAAMla,EAAmC,CAC9CkD,SAAS,EACTR,MAAO,KACP+X,kBAAmB,CAAC,EACpBC,6BAA6B,EAC7BC,YAAa,KACbP,qBAAsB,CAAC,EACvBQ,eAAe,EACfC,kBAAmB,KACnBC,iBAAkB,CAAC,EACnBC,iBAAiB,EACjBC,oBAAqB,KACrBC,mBAAoB,CAAC,GAGjB3M,EAAQC,YAAY,CACxBpG,KAAM,gBACNnI,eACAwO,SAAU,CACR+L,kBAAmBza,IACjBA,EAAMoD,SAAU,CAAI,EAEtB8W,wBAAyBA,CAACla,EAAO2O,KAC/B3O,EAAMoD,SAAU,EAChBpD,EAAM4C,MAAQ,KACd5C,EAAM2a,kBAAoBhM,EAAOtH,OAAO,EAE1C8S,uBAAwBA,CAACna,EAAO2O,KAC9B3O,EAAMoD,SAAU,EAChBpD,EAAM4C,MAAQ+L,EAAOtH,OAAO,EAE9BqT,yBAA0B1a,IACxBA,EAAM4a,6BAA8B,CAAI,EAE1CN,qBAAsBA,CAACta,EAAO2O,KAC5B3O,EAAM4a,6BAA8B,EACpC5a,EAAMsa,qBAAuB3L,EAAOtH,QACpCrH,EAAM6a,YAAc,IAAI,EAE1BN,2BAA4BA,CAACva,EAAO2O,KAClC3O,EAAM4a,6BAA8B,EACpC5a,EAAM6a,YAAclM,EAAOtH,OAAO,MAKzBO,QAASwT,GAAyB5M,EAEpC6M,EAAwBA,KACnCnL,YAAiB,CAAEC,IAAK3B,EAAMnG,KAAM+H,QAAS5B,EAAM4B,UACnDC,YAAc,CAAEF,IAAK3B,EAAMnG,KAAMiI,KAAMkK,IAChC,CAAE5S,QAAS4G,EAAM5G,U,WCzBX0T,MA7Bf,SAA4BnK,GAAY,IAAX,KAAElC,GAAMkC,EACnC,MAAMoK,EAAWpI,eACX,QAAEvL,GAAYyT,IAQpB,OACE7H,eAACC,IAAI,CACH+H,aAAa,SACb,oBAAmBvM,EAAKyG,KACxBuC,WAAW,SACXS,eAAe,gBAAe5E,SAAA,CAE9BK,cAACmD,IAAI,CAAC,yBAAwBrI,EAAKyG,KAAM+F,SAAS,SAAQ3H,SACvD7E,EAAK9F,WAERgL,cAACuH,IAAW,CACVrH,MAAM,QACNsB,QAAS0C,IAAKsD,OAnBgB5M,EAmBYE,EAAKyG,UAhBnD6F,EAAS3T,EAAQ8S,yBAAyB,CAAEL,QAAStL,EAAInF,KAAM,YAH7BmF,KAmBuB,EACrD,iCAAgCE,EAAKyG,SAI7C,ECmHekG,MAxIf,SAAyBzK,GAA+B,IAA9B,QAAE0K,EAAO,eAAEC,GAAgB3K,EAEnD,MAAM4K,EAAqB3J,YAAYhR,KACjC4a,EAAyB5J,YAAY9Q,KACrC2a,EAAmB7J,YAAY5Q,KAC/B0a,EAAuB9J,YAAY1Q,KAWzC,OACE8R,eAAC2I,IAAK,CAACC,QAAQ,OAAOpH,QAAQ,YAAYf,WAAW,MAAML,MAAM,OAAME,SAAA,CAErEN,eAACC,IAAI,CAAC0C,EAAE,OAAOC,EAAE,QAAQ1C,cAAc,SAAQI,SAAA,CAC7CN,eAAC2E,IAAM,CAACvE,MAAM,OAAOoB,QAAQ,OAAMlB,SAAA,CACjCK,cAACmD,IAAI,CAACrD,WAAW,MAAKH,SAAC,iBACvBK,cAACkI,IAAM,IACPlI,cAACmD,IAAI,CAAAxD,SAAEgI,EAAezT,UAExBmL,eAAC2I,IAAK,CAACnH,QAAQ,OAAOsH,OAAO,QAAQ1D,UAAU,wBAAuB9E,SAAA,CACpEN,eAACC,IAAI,CAACG,MAAM,OAAME,SAAA,CAChBN,eAACC,IAAI,CAAC8I,KAAM,EAAEzI,SAAA,CACX,IACDK,cAACmD,IAAI,CAACrD,WAAW,MAAKH,SAAC,mBAEzBN,eAACC,IAAI,CAAC8I,KAAM,EAAEzI,SAAA,CACX,IACDK,cAACmD,IAAI,CAACrD,WAAW,MAAKH,SAAC,kBAG3BN,eAACC,IAAI,CAACG,MAAM,OAAME,SAAA,CAChBK,cAACV,IAAI,CAAC8I,KAAM,EAAG7I,cAAc,SAAS0C,EAAE,QAAOtC,SAC7CN,eAACC,IAAI,CACHC,cAAc,SACdE,MAAM,OACN4I,UAAU,OACVC,IAAK,CACH,uBAAwB,CACtB7I,MAAO,MAEP8I,OAAQ,qBAEV,6BAA8B,CAC5B9D,UAAW,uBAEb,6BAA8B,CAC5B/E,gBAAiB,UACjB4D,aAAc,MACdkF,QAAS,cAGb3H,QAAQ,MAAKlB,SAAA,CAEZiI,EAAmBxM,OAAS,GAC3BwM,EAAmBzH,KAAIrF,GACrBkF,cAACmH,EAAmB,CAACrM,KAAMA,MAE9B+M,EAAuBzM,OAAS,GAC/ByM,EAAuB1H,KAAIrF,GACzBkF,cAACmH,EAAmB,CAACrM,KAAMA,WAInCkF,cAACV,IAAI,CAAC8I,KAAM,EAAG7I,cAAc,SAAS0C,EAAE,QAAOtC,SAC7CN,eAACC,IAAI,CACHC,cAAc,SACd8I,UAAU,OACVC,IAAK,CACH,uBAAwB,CACtB7I,MAAO,MAEP8I,OAAQ,qBAEV,6BAA8B,CAC5B9D,UAAW,uBAEb,6BAA8B,CAC5B/E,gBAAiB,UACjB4D,aAAc,MACdkF,QAAS,cAGb3H,QAAQ,MACRpB,MAAM,OAAME,SAAA,CAEXmI,EAAiB1M,OAAS,GACzB0M,EAAiB3H,KAAIrF,GACnBkF,cAACmH,EAAmB,CAACrM,KAAMA,MAE9BiN,EAAqB3M,OAAS,GAC7B2M,EAAqB5H,KAAIrF,GACvBkF,cAACmH,EAAmB,CAACrM,KAAMA,oBAQzCuE,eAACC,IAAI,CACHmJ,UAAU,YACVjJ,WAAW,MACXkJ,YAAY,SACZ7E,QAAQ,MACRpE,MAAM,OAAME,SAAA,CAEZK,cAAC2I,IAAU,CACTD,YAAY,SACZxI,MAAM,QACNT,MAAM,OACNmJ,cAAelB,EACf5H,WAAW,MAAKH,SACjB,WAGDK,cAAC2I,IAAU,CACTjJ,gBAAgB,QAChBgJ,YAAY,QACZxI,MAAM,QACNT,MAAM,OACNK,WAAW,MACX8I,cAlHqBC,KAC3BnB,GAAS,EAiHiC/H,SACrC,gBAMT,ECdemJ,MAnHf,SAA2B9L,GAA4B,IAA3B,qBAAE+L,GAAsB/L,EAClD,MAAMgM,EAA0B/K,YAAYjS,KACtCid,EAAyBhL,YAAY5R,KACrC6c,EAA2BjL,YAAY9R,MACtCgd,EAAmBC,GAAqBzM,sBACzC,OAAE0M,EAAM,OAAEC,EAAM,QAAE5B,GAAY6B,eAC9B,qBAAEnN,GAAyBN,cAC3BsL,EAAWpI,cAyDjB,OACEK,eAACC,IAAI,CAACC,cAAc,SAASE,MAAM,OAAME,SAAA,CACtCuJ,EACClJ,cAACwJ,IAAgB,CAACrB,OAAO,UAEzBnI,cAAAyJ,WAAA,CAAA9J,SAC8B,IAA3BsJ,EACCjJ,cAAC0J,IAAS,CAACC,QAAQ,yBAEnB3J,cAAAyJ,WAAA,CAAA9J,SACGqJ,EAAwB5N,OAAS,EAChC4E,cAACjD,IAAc,CACbpJ,KAAMqV,EACN9L,SACE8C,cAAC8B,IAAI,CACHE,EAAE,OACFC,EAAE,OACF/B,MAAM,QACNgC,GAAI0H,MAGR3M,QA3EA,CACd,CACE4M,OAAQ,gBACRC,SAAU,QAEZ,CACED,OAAQ,aACRC,SAAU,QAGZ,CACED,OAAQ,wBACRC,SAAU,gBAgEE3M,gBAAgB,EAChBE,qBA7DW0M,IACzBX,EAAkBW,GAElB,MAAMC,EAAsB,CAC1B9U,aAAc,kBACdI,YAAayU,EAAQ7V,MAGvBkT,EAAShL,EAAqB1C,uBAAuBsQ,IACrD,MAAMC,EAAoB,CACxB/U,aAAc,uBACdI,YAAayU,EAAQ7V,MAEvBkT,EAAShL,EAAqBvC,qBAAqBoQ,IAEnD,MAAMC,EAA6B,CACjChV,aAAc,sBACdI,YAAayU,EAAQ7V,MAGvBkT,EACEhL,EAAqBzC,8BACnBuQ,IAGJ,MAAMC,EAA2B,CAC/BjV,aAAc,2BACdI,YAAayU,EAAQ7V,MAGvBkT,EACEhL,EAAqBxC,4BACnBuQ,IAGJb,GAAQ,EA2BMhM,uBAAwByL,EACxBtT,KAAK,wBAGPuK,cAAC0J,IAAS,CAACvB,OAAO,OAAOwB,QAAQ,sBAM3C3J,cAACoK,IAAc,CACbrI,MAAM,0BACNsI,eAAgB3C,EAChBjI,MAAM,QACN6K,QAAQ,EACRjB,OAAQA,EACR3B,QAASA,EAAQ/H,SAEjBK,cAACyH,EAAgB,CACfC,QAASA,EACTC,eAAgBwB,QAK1B,E,SC7HA,MAAMvd,EAAeC,GAAqBA,EAAM0e,eAAiBxe,EAEpDye,EAA0Bve,YACrC,CAACL,IACDC,GAASA,EAAM2a,oBAEJiE,EAA+Bxe,YAC1C,CAACL,IACDC,GAASA,EAAM4C,QAEJic,EAA6Bze,YACxC,CAACL,IACDC,GAASA,EAAMoD,UAGJ0b,EAA6B1e,YACxC,CAACL,IACDC,GAASA,EAAMsa,uBAEJyE,EAAkC3e,YAC7C,CAACL,IACDC,GAASA,EAAM6a,cAEJmE,EAAoC5e,YAC/C,CAACL,IACDC,GAASA,EAAM4a,8B,cC2DFqE,MA3Ef,WACE,MAAM,qBAAE1O,GAAyBN,eAC3B,OAAEuN,EAAM,OAAEC,EAAM,QAAE5B,GAAY6B,eAC7BwB,EAAoBC,GAAsBrO,sBAC3C,QAAElJ,GAAYyT,IACdE,EAAWpI,cACXvC,EAAkBJ,cAElB4O,EAAuBhN,YAAYyM,GAiBzC,OAfA5N,qBAAU,KACNsK,EAAShL,EAAqB5C,mCAAmCiD,EAAkB,iCAAiC,6BAA8B,GAChJ,CAACA,IAcL4C,eAACC,IAAI,CAACC,cAAc,SAAS2L,SAAS,WAAUvL,SAAA,CAC7CsL,GACCjL,cAACwJ,IAAgB,CACfrB,OAAO,QAEPgD,WAAW,EACXD,SAAS,aAIblL,cAACoL,IAAS,CAAAzL,SACRK,cAACV,IAAI,CACHO,WAAW,aACXC,WAAW,MACXoF,SAAS,OACT3F,cAAc,SACdsB,QAAQ,OACRpB,MAAM,OAAME,SAEZK,cAAC8I,EAAkB,CACjBC,qBA9BmBnO,IAC3BoQ,EAAmBpQ,GACnB0O,GAAQ,QAgCNtJ,cAACoK,IAAc,CACbrI,MAAM,iBACNsI,eAAgB3C,EAChBjI,MAAM,QAEN4J,OAAQA,EACR3B,QAASA,EACT2D,aAAa,SACbC,aAAa,SACbjB,eAAgB3C,EAChB6D,eAxC6B3Q,IAEjCwM,EAAS3T,EAAQ6S,kBAAkByE,IACnCrD,GAAS,EAqCsC/H,SAE3CK,cAACV,IAAI,CACHuE,QAAQ,SACRpE,MAAM,OACN4D,MAAM,SACNmI,aAAa,SAAQ7L,SAErBK,cAACmD,IAAI,CAAC8B,UAAU,SAAQtF,SAAC,8CAKnC,ECsEe8L,MAvIf,WACE,MAAMrE,EAAWpI,eACX,qBAAE5C,GAAyBN,cAC3B8L,EAAqB3J,YAAYhR,KACjC4a,EAAyB5J,YAAY9Q,MACrC,OAAEkc,EAAM,OAAEC,EAAM,QAAE5B,GAAY6B,eAC7BmC,EAAqBC,GAAuBhP,sBAC7C,QAAElJ,GAAYyT,IACd0E,EAAyB3N,YAAY3N,KACrCub,EAAqB5N,YAAY7N,KACjC0b,EAAmB7N,YAAY/M,KAC/B6a,EAAuB9N,YAAYjN,KACnCyL,EAAkBJ,cA0DxB,OAzCAS,qBAAU,KACR,MAAMkN,EAAsB,CAC1B9U,aAAc,kBAEdd,SAAUqI,EACN,iCACA,6BAGN2K,EAAShL,EAAqB1C,uBAAuBsQ,IACrD,MAAME,EAA6B,CACjChV,aAAc,sBAEdd,SAAUqI,EACN,iCACA,6BAGN2K,EACEhL,EAAqBzC,8BACnBuQ,GAEH,GACA,CAACzN,IAmBF4C,eAACC,IAAI,CAACC,cAAc,SAASsB,QAAQ,OAAOpB,MAAM,OAAME,SAAA,CACtDK,cAACmD,IAAI,CAACtC,QAAQ,GAAGf,WAAW,MAAKH,SAAC,WAGlCK,cAAAyJ,WAAA,CAAA9J,SACGiM,GAA0BC,EACzB7L,cAACwJ,IAAgB,CAACrB,OAAO,SAEzBnI,cAAAyJ,WAAA,CAAA9J,SACwB,IAArBmM,GAAmD,IAAzBC,EACzB/L,cAAC0J,IAAS,CAACC,QAAQ,yBAEnB3J,cAAAyJ,WAAA,CAAA9J,SACGiI,EAAmBxM,OAAS,GAC7ByM,EAAuBzM,OAAS,EAC9B4E,cAACjD,IAAc,CACbpJ,KAAM,IAAIiU,KAAuBC,GACjC3K,SACE8C,cAAC8B,IAAI,CACHE,EAAE,OACFC,EAAE,OACF/B,MAAM,QACNgC,GAAI0H,MAGR3M,QAnFF,CACd,CACE4M,OAAQ,cACRC,SAAU,YAEZ,CACED,OAAQ,WACRC,SAAU,QAGZ,CACED,OAAQ,gBACRC,SAAU,iBAwEI3M,gBAAgB,EAEhBG,uBAlCY1C,IAC5B+Q,EAAoB/Q,GACpB0O,GAAQ,EAiCQ7T,KAAK,oBAGPuK,cAAC0J,IAAS,CAACvB,OAAO,OAAOwB,QAAQ,wBAO7C3J,cAACoK,IAAc,CACbrI,MAAM,iBACNsI,eAAgB3C,EAChBjI,MAAM,QAEN4J,OAAQA,EACR3B,QAASA,EACT2D,aAAa,SACbC,aAAa,SACbjB,eAAgB3C,EAChB6D,eAnE8BS,KAClC5E,EACE3T,EAAQ8S,yBAAyB,CAC/BL,QAASwF,EACTjW,KAAM,MAGViS,GAAS,EA4DuC/H,SAE5CK,cAACV,IAAI,CACHuE,QAAQ,SACRpE,MAAM,OACN4D,MAAM,SACNmI,aAAa,SAAQ7L,SAErBK,cAACmD,IAAI,CAAC8B,UAAU,SAAQtF,SAAC,gDAKnC,EC2Be8L,MA7Jf,WACE,MAAMrE,EAAWpI,eACX,qBAAE5C,GAAyBN,cAC3BgM,EAAmB7J,YAAY5Q,KAC/B0a,EAAuB9J,YAAY1Q,MACnC,OAAE8b,EAAM,OAAEC,EAAM,QAAE5B,GAAY6B,eAC7BmC,EAAqBC,GAAuBhP,sBAC7C,QAAElJ,GAAYyT,IACd+E,EAAuBhO,YAAYzN,KACnC0b,EAAmBjO,YAAYvN,KAC/Byb,EAAiBlO,YAAYrN,KAC7Bwb,EAAqBnO,YAAYnN,KACjC2L,EAAkBJ,eAClB,uBAAEnC,EAAsB,wBAAEC,GAA4B8D,YAC1D7M,KAsEF,OAnDA0L,qBAAU,KACR,MAAMmN,EAAoB,CACxB/U,aACE,mFAEFd,SAAUqI,EACN,iCACA,6BAEN2K,EAAShL,EAAqBvC,qBAAqBoQ,IACnD,MAAME,EAA2B,CAC/BjV,aAAc,2BAEdd,SAAUqI,EACN,iCACA,6BAGN2K,EACEhL,EAAqBxC,4BACnBuQ,IAGJ,MAAMkC,EAA0B,CAC9BnX,aAAc,wBAEdd,SAAUqI,EACN,iCACA,6BAEN2K,EACEhL,EAAqBtC,2BAA2BuS,GACjD,GACA,CAAC5P,IAmBF4C,eAACC,IAAI,CAACC,cAAc,SAASsB,QAAQ,OAAOpB,MAAM,OAAME,SAAA,CACtDK,cAACmD,IAAI,CAACtC,QAAQ,GAAGf,WAAW,MAAKH,SAAC,gBAIlCK,cAAAyJ,WAAA,CAAA9J,SACGsM,GAAwBC,GAAoB/R,EAC3C6F,cAACwJ,IAAgB,CAACrB,OAAO,SAEzBnI,cAAAyJ,WAAA,CAAA9J,SACsB,IAAnBwM,GAA+C,IAAvBC,EACvBpM,cAAC0J,IAAS,CAACC,QAAQ,yBAEnB3J,cAAAyJ,WAAA,CAAA9J,SACGmI,EAAiB1M,OAAS,GAC3B2M,EAAqB3M,OAAS,GAC9BlB,EAAuBkB,OAAS,EAC9B4E,cAACjD,IAAc,CACbpJ,KAAM,IACDmU,KACAC,KACA7N,GAELgD,SACE8C,cAAC8B,IAAI,CACHE,EAAE,OACFC,EAAE,OACF/B,MAAM,QACNgC,GAAI0H,MAGR3M,QAnGF,CACd,CACE4M,OAAQ,eACRC,SAAU,YAEZ,CACED,OAAQ,YACRC,SAAU,QAGZ,CACED,OAAQ,gBACRC,SAAU,iBAwFI3M,gBAAgB,EAEhBG,uBAzCY1C,IAE5B+Q,EAAoB/Q,GACpB0O,GAAQ,EAuCQ7T,KAAK,oBAGPuK,cAAC0J,IAAS,CAACvB,OAAO,OAAOwB,QAAQ,wBAO7C3J,cAACoK,IAAc,CACbrI,MAAM,iBACNsI,eAAgB3C,EAChBjI,MAAM,QAEN4J,OAAQA,EACR3B,QAASA,EACT2D,aAAa,SACbC,aAAa,SACbjB,eAAgB3C,EAChB6D,eAxE4Be,KAChClF,EACE3T,EAAQ8S,yBAAyB,CAC/BL,QAASwF,EACTjW,KAAM,MAGViS,GAAS,EAiEqC/H,SAE1CK,cAACV,IAAI,CACHuE,QAAQ,SACRpE,MAAM,OACN4D,MAAM,SACNmI,aAAa,SAAQ7L,SAErBN,eAAC8D,IAAI,CAAC8B,UAAU,SAAQtF,SAAA,CAAC,0CACiB,aAMpD,EC7JO,SAAS4M,EAAqBvP,GAGjC,IAHkC,wBACpCwP,EAAuB,2BACvBC,GACDzP,EACC,MAAM,qBAAEZ,GAAyBN,eAC3B,OAAEuN,EAAM,OAAEC,EAAM,QAAE5B,GAAY6B,eAC7BwB,EAAoBC,GAAsBrO,qBAC3CyK,EAAWpI,eACX,QAAEvL,GAAYyT,IAEdwF,EAAwBzO,YAAYuM,GACpCmC,EAAqB1O,YAAYwM,GAEjCmC,GADuB3O,YAAYyM,GACJzM,YAAY0M,IAC3CkC,EAA4B5O,YAChC2M,GAEIkC,EAA8B7O,YAClC4M,GAEIkC,EAAQC,cACdlQ,qBAAU,KACJ4P,EAAsBnZ,eAAe,aACD,YAAlCmZ,EAAsB/C,SACxBoD,EAAM,CACJhL,MAAO,uBACPxL,OAAQ,UACR0W,YAAY,EACZ/B,SAAU,iBAEZ9D,EAAShL,EAAqB5C,uCAE9BuT,EAAM,CACJhL,MAAO2K,EAAsB/C,QAC7BpT,OAAQ,QACR0W,YAAY,EACZ/B,SAAU,iBAGd9D,EAAS3T,EAAQsS,wBAAwB,CAAC,KAEjB,IAAvB4G,IACFI,EAAM,CACJhL,MAAO,oBACPxL,OAAQ,QACR0W,YAAY,EACZ/B,SAAU,iBAEZ9D,EAAS3T,EAAQuS,uBAAuB,OAC1C,GACC,CAAC0G,EAAuBC,IAC3B7P,qBAAU,KACR,GAAI8P,EAA6BrZ,eAAe,WAAY,CAC1D,GAA6C,YAAzCqZ,EAA6BjD,QAAuB,CACtDoD,EAAM,CACJhL,MAAO,uBACPxL,OAAQ,UACR0W,YAAY,EACZ/B,SAAU,iBAEZ,MAAMlB,EAAsB,CAC1B9U,aAAc,mBAIhBkS,EACEhL,EAAqB1C,uBAAuBsQ,IAE9C,MAAME,EAA6B,CACjChV,aAAc,uBAIhBkS,EACEhL,EAAqBzC,8BACnBuQ,IAGJ,MAAMD,EAAoB,CACxB/U,aAAc,uDAGhBkS,EAAShL,EAAqBvC,qBAAqBoQ,IACnD,MAAME,EAA2B,CAC/BjV,aAAc,4BAIhBkS,EACEhL,EAAqBxC,4BACnBuQ,GAGN,MACE4C,EAAM,CACJhL,MAAO6K,EAA6BjD,QACpCpT,OAAQ,QACR0W,YAAY,EACZ/B,SAAU,iBAGd9D,EAAS3T,EAAQ0S,qBAAqB,CAAC,GACzC,CACkC,IAA9B0G,IACFE,EAAM,CACJhL,MAAO,oBACPxL,OAAQ,QACR0W,YAAY,EACZ/B,SAAU,iBAEZ9D,EAAS3T,EAAQ2S,2BAA2B,OAC9C,GACC,CAACwG,EAA8BC,IAUlC,OACExN,eAACC,IAAI,CAACC,cAAc,SAAS2L,SAAS,WAAUvL,SAAA,CAC7CmN,GACC9M,cAACwJ,IAAgB,CACfrB,OAAO,QAEPgD,WAAW,EACXD,SAAS,aAIblL,cAACoL,IAAS,CAAAzL,SACRN,eAACC,IAAI,CACHO,WAAW,aACXC,WAAW,MACXoF,SAAS,OACT3F,cAAc,SACdE,MAAM,OAAME,SAAA,CAEiB,cAA5B6M,GACCxM,cAAC8K,EAAa,IAEa,iBAA5B0B,GACCxM,cAACkN,EAAyB,IAEC,cAA5BV,GACCxM,cAACyL,EAAsB,WAMnC,CAEec,W","file":"static/js/17.10c7acc3.chunk.js","sourcesContent":["import { initialState } from '.';\nimport { createSelector } from '@reduxjs/toolkit';\nimport { RootState } from 'types';\n\nconst selectSlice = (state: RootState) =>\n  state.XcuiTestExecution || initialState;\n\nexport const selectTestExecutionDevices = createSelector(\n  [selectSlice],\n  state => state.TestExecutionSelectDevice,\n);\nexport const selectProjectList = createSelector(\n  [selectSlice],\n  state => state.selectProjectList,\n);\nexport const selectLoadingProjectList = createSelector(\n  [selectSlice],\n  state => state.loadingProjectList,\n);\n\nexport const selectProjectError = createSelector(\n  [selectSlice],\n  state => state.loadProjectListError,\n);\n\nexport const selectRemoveDeviceId = createSelector(\n  [selectSlice],\n  state => state.removeId,\n);\n\nexport const selectUploadApplicationUrl = createSelector(\n  [selectSlice],\n  state => state.applicationUploaded,\n);\nexport const selectUploadApplicationUrlAndroid = createSelector(\n  [selectSlice],\n  state => state.applicationUploadedAndroid,\n);\n\nexport const selectCreatedProject = createSelector(\n  [selectSlice],\n  state => state.creatProjectResponse,\n);\nexport const selectCreateProjectError = createSelector(\n  [selectSlice],\n  state => state.createProjectError,\n);\n\nexport const selectAppBuildListState = createSelector(\n  [selectSlice],\n  state => state.selectAppBuildList,\n);\n\nexport const selectAppBuildAndroidListState = createSelector(\n  [selectSlice],\n  state => state.selectAppBuildAndroidList,\n);\nexport const selectScriptState = createSelector(\n  [selectSlice],\n  state => state.selectScriptList,\n);\nexport const selectScriptAndroidState = createSelector(\n  [selectSlice],\n  state => state.selectScriptAndroidList,\n);\n\nexport const selectuploadApplicationUrlError = createSelector(\n  [selectSlice],\n  state => state.applicationUploadError,\n);\nexport const selectuploadApplicationUrlAndroidError = createSelector(\n  [selectSlice],\n  state => state.applicationUploadAndroidError,\n);\nexport const selectTestExecutionSelectedDevice = createSelector(\n  [selectSlice],\n  state => state.TestExecutionSelectDevice,\n);\nexport const selectDeviceListLoading = createSelector(\n  [selectSlice],\n  state => state.loadingDeviceList,\n);\nexport const selectBusyDeviceLoading = createSelector(\n  [selectSlice],\n  state => state.loadingBusySlots,\n);\nexport const selectListingDevices = createSelector(\n  [selectSlice],\n  state => state.DeviceListData,\n);\n\nexport const selectDeviceListingError = createSelector(\n  [selectSlice],\n  state => state.DeviceListingError,\n);\n\nexport const selectScheduleTestResponse = createSelector(\n  [selectSlice],\n  state => state.XcuiData,\n);\nexport const selectScheduleTestResponseError = createSelector(\n  [selectSlice],\n  state => state.error,\n);\nexport const selectCreateProjectLoading = createSelector(\n  [selectSlice],\n  state => state.loadCreateProjectRequest,\n);\nexport const selectUploadingApplicationLoading = createSelector(\n  [selectSlice],\n  state => state.loadingUploadApplication,\n);\nexport const selectUploadingApplicationAndroidLoading = createSelector(\n  [selectSlice],\n  state => state.loadingUploadApplicationAndroid,\n);\n\nexport const selectScheduleExecuteTestLoading = createSelector(\n  [selectSlice],\n  state => state.loading,\n);\n\nexport const selectApplicationFileUploadLoading = createSelector(\n  [selectSlice],\n  state => state.loadingAppBuildFile,\n);\n\nexport const selectApplicationFileUploadResponse = createSelector(\n  [selectSlice],\n  state => state.appBuildFileUploaded,\n);\n\nexport const selectApplicationFileUploadError = createSelector(\n  [selectSlice],\n  state => state.appBuildFileError,\n);\nexport const selectEventConfigFileUploadLoading = createSelector(\n  [selectSlice],\n  state => state.loadingEventConfigFile,\n);\n\nexport const selectEventConfigFileUploadResponse = createSelector(\n  [selectSlice],\n  state => state.eventConfigFileUploaded,\n);\n\nexport const selectEventConfigFileUploadError = createSelector(\n  [selectSlice],\n  state => state.eventConfigFileError,\n);\n\nexport const selectUploadFileProgressValue = createSelector(\n  [selectSlice],\n  state => state.progressValue,\n);\n\nexport const selectBusyDeviceSlots = createSelector(\n  [selectSlice],\n  state => state.BusyDeviceSlotsData,\n);\nexport const selectgetOptionalKeyValue = createSelector(\n  [selectSlice],\n  state => state.addedOptionalKeyValue,\n);\nexport const selectAppBuildIosLoading = createSelector(\n  [selectSlice],\n  state => state.loadingAppBuildList,\n);\nexport const selectAppBuildAndroidLoading = createSelector(\n  [selectSlice],\n  state => state.loadingAppBuildAndroidList,\n);\nexport const selectScriptAndroidLoading = createSelector(\n  [selectSlice],\n  state => state.loadingScriptAndroidList,\n);\nexport const selectScriptIosLoading = createSelector(\n  [selectSlice],\n  state => state.loadingScriptList,\n);\nexport const selectScriptIosError = createSelector(\n  [selectSlice],\n  state => state.selectScriptListError,\n);\nexport const selectScriptAndroidError = createSelector(\n  [selectSlice],\n  state => state.selectScriptListAndroidError,\n);\nexport const selectAppbuildAndroidError = createSelector(\n  [selectSlice],\n  state => state.selectAppBuildListAndroidError,\n);\nexport const selectAppbuildIosError = createSelector(\n  [selectSlice],\n  state => state.selectAppBuildListError,\n);\n\nexport const selectTestExcutionState = createSelector(\n  [selectSlice],\n  state => state,\n);\n","import { XcuiData } from 'types/XcuiTestExecution';\n\nexport interface XcuiTestExecutionState {\n  XcuiData: XcuiData;\n  loading: boolean;\n  error?: TestExecutionErrorType | null;\n  TestExecutionSelectDevice: testExecutionDevice[];\n  selectProjectList: SelectProjectList[];\n  loadingProjectList: boolean;\n  loadProjectListError: TestExecutionErrorType | null;\n  selectAppBuildList: SelectProjectList[];\n  loadingAppBuildList: boolean;\n  selectAppBuildListError: TestExecutionErrorType | null;\n  selectScriptList: SelectProjectList[];\n  loadingScriptList: boolean;\n  selectScriptListError: TestExecutionErrorType | null;\n  selectVisualScriptList: SelectProjectList[];\n  loadingVisualScriptList: boolean;\n  selectVisualScriptListError: TestExecutionErrorType | null;\n  loadCreateProjectRequest: boolean;\n  creatProjectResponse: CreateProjectResponse;\n  createProjectError: TestExecutionErrorType | null;\n  removeId: number | string;\n\n  loadingUploadApplication: boolean;\n  applicationUploaded: CreateProjectResponse;\n  applicationUploadError: null | TestExecutionErrorType;\n  loadingUploadApplicationAndroid: boolean;\n  applicationUploadedAndroid: CreateProjectResponse;\n  applicationUploadAndroidError: null | TestExecutionErrorType;\n\n  loadingAppBuildFile: boolean;\n  appBuildFileUploaded: CreateProjectResponse;\n  appBuildFileError: null | TestExecutionErrorType;\n  loadingEventConfigFile: boolean;\n  eventConfigFileUploaded: CreateProjectResponse;\n  eventConfigFileError: null | TestExecutionErrorType;\n\n  selectAppBuildAndroidList: SelectProjectList[];\n  loadingAppBuildAndroidList: boolean;\n  selectAppBuildListAndroidError: null | TestExecutionErrorType;\n  selectScriptAndroidList: SelectProjectList[];\n  loadingScriptAndroidList: boolean;\n  selectScriptListAndroidError: null | TestExecutionErrorType;\n  loadingDeviceList: boolean;\n  DeviceListData: SelectProjectList[];\n  DeviceListingError: null | TestExecutionErrorType;\n  progressValue: number | string;\n  loadingBusySlots: boolean;\n  BusyDeviceSlotsData: testExecutionDevice[];\n  BusyDeviceSlotsError: null | TestExecutionErrorType;\n  addedOptionalKeyValue: testExecutionDevice[];\n}\nexport interface SelectProjectList {}\ninterface testExecutionDevice {}\ninterface CreateProjectResponse {}\nexport enum TestExecutionErrorType {\n  RESPONSE_ERROR = 1,\n  TEST_NOT_FOUND = 2,\n}\n","const getProjectString = (project: Project) => {\n  const projectString = project ? `&projectName=${project}` : '';\n  return projectString;\n};\n\nexport { getProjectString };\n","// @ts-nocheck\nimport GetIdToken from 'Authentication/configuration/GetIdToken';\nimport UserPool from 'Authentication/configuration/UserPool';\nimport { takeLatest, call, put, delay } from 'redux-saga/effects';\n\nimport { request } from 'utils/request';\nimport { xcuiTestExecutionActions as actions } from './index';\n\nimport { SelectProjectList, TestExecutionErrorType } from './types';\nimport {\n  REACT_APP_AUTOMATION_TESTING_BASE_URL,\n  REACT_APP_AUTOMATION_TESTING_FILES_BASE_URL,\n  REACT_APP_AUTOMATION_TESTING_SCHEDULE_BASE_URL,\n} from 'utils/enviroment';\n\nimport { getProjectString } from '../utils';\n\nconst BASE_URL = REACT_APP_AUTOMATION_TESTING_BASE_URL;\nconst BASE_URL_FILES = REACT_APP_AUTOMATION_TESTING_FILES_BASE_URL;\nconst BASE_URL_SCHEDULE = REACT_APP_AUTOMATION_TESTING_SCHEDULE_BASE_URL;\n\nconst GetLastAuthUser = () => {\n  const last_auth = `CognitoIdentityServiceProvider.${UserPool.getClientId()}.LastAuthUser`;\n  const reg = new RegExp(`(?<=${last_auth}=)[^;]*`);\n  try {\n    return document.cookie.match(reg)[0];\n  } catch {\n    return null;\n  }\n};\nconst username = GetLastAuthUser();\n\nfunction* getTestExecutionProjectList(param) {\n  const idToken = GetIdToken();\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  const queryString = param.payload ? `?testType=${param.payload}` : '';\n  try {\n    const requestURL = `${BASE_URL}/projects${queryString}`;\n    const selectProjectData: SelectProjectList[] = yield call(\n      request,\n      requestURL,\n      config,\n    );\n\n    if (selectProjectData.hasOwnProperty('data')) {\n      yield put(\n        actions.selectTestExecutionProjectListLoaded(\n          selectProjectData.data.list,\n        ),\n      );\n    } else {\n      yield put(\n        actions.selectTestExecutionProjectListError(\n          TestExecutionErrorType.RESPONSE_ERROR,\n        ),\n      );\n    }\n  } catch (err) {\n    yield put(\n      actions.selectTestExecutionProjectListError(\n        TestExecutionErrorType.RESPONSE_ERROR,\n      ),\n    );\n  }\n}\n\nfunction* createProjectSagaWatcher(param) {\n  const idToken = GetIdToken();\n  const projectInfo = {\n    name: param.payload.name,\n    description: param.payload.name,\n    testType: param.payload.testType,\n    user: username,\n  };\n  const config = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n\n    body: JSON.stringify(projectInfo),\n    redirect: 'follow',\n  };\n\n  try {\n    const requestURL = `${BASE_URL}/projects`;\n    const createProjectResponse = yield call(request, requestURL, config);\n\n    if (createProjectResponse.hasOwnProperty('message')) {\n      yield put(actions.testExecutionProjectCreated(createProjectResponse));\n    } else {\n      yield put(\n        actions.createTestExecutionProjectError(\n          TestExecutionErrorType.RESPONSE_ERROR,\n        ),\n      );\n    }\n  } catch (err) {\n    yield put(\n      actions.createTestExecutionProjectError(\n        TestExecutionErrorType.RESPONSE_ERROR,\n      ),\n    );\n  }\n}\n\nfunction* uploadFileSagaWatcher(fileInfo) {\n  const idToken = GetIdToken();\n  const payloadbody = JSON.stringify({\n    fileName: fileInfo.payload.filename,\n    fileCategory: fileInfo.payload.fileCategory,\n    md5sum: fileInfo.payload.md5,\n    userName: username,\n    projectName: fileInfo.payload.project,\n    testType: fileInfo.payload.testType,\n  });\n  const config = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n    body: payloadbody,\n  };\n\n  try {\n    const requestURL = `${BASE_URL_FILES}/files`;\n    const fileuploadResponse = yield call(request, requestURL, config);\n    if (fileuploadResponse.hasOwnProperty('message')) {\n      yield put(\n        actions.uploadApplicationResponse({\n          type: fileInfo.payload.applicationType,\n          response: fileuploadResponse,\n        }),\n      );\n    } else {\n      yield put(\n        actions.uploadApplicationError(TestExecutionErrorType.RESPONSE_ERROR),\n      );\n    }\n  } catch (err) {\n    yield put(\n      actions.uploadApplicationError(TestExecutionErrorType.RESPONSE_ERROR),\n    );\n  }\n}\n\nfunction* uploadFileSagaWatcherAndroid(fileInfo) {\n  const idToken = GetIdToken();\n  const config = fileInfo.payload.hasOwnProperty('config')\n    ? fileInfo.payload.config\n    : {};\n  const payloadbody = JSON.stringify({\n    fileName: fileInfo.payload.filename,\n    fileCategory: fileInfo.payload.fileCategory,\n    md5sum: fileInfo.payload.md5,\n    userName: username,\n    projectName: fileInfo.payload.project,\n    testType: fileInfo.payload.testType,\n    config,\n  });\n\n  const configdata = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n    body: payloadbody,\n  };\n\n  try {\n    const requestURL = `${BASE_URL_FILES}/files`;\n\n    const fileuploadResponse = yield call(request, requestURL, configdata);\n    //console.log(fileuploadResponse);\n    if (fileuploadResponse.hasOwnProperty('message')) {\n      yield put(\n        actions.uploadApplicationAndroidResponse({\n          type: fileInfo.payload.applicationType,\n          response: fileuploadResponse,\n        }),\n      );\n    } else {\n      yield put(\n        actions.uploadApplicationAndroidError(\n          TestExecutionErrorType.RESPONSE_ERROR,\n        ),\n      );\n    }\n  } catch (err) {\n    yield put(\n      actions.uploadApplicationAndroidError(\n        TestExecutionErrorType.RESPONSE_ERROR,\n      ),\n    );\n  }\n}\n\nfunction* uploadAppBuildFileSagaWatcher(fileData) {\n  const config = {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/x-msdos-program',\n    },\n    body: fileData.payload.file,\n  };\n\n  // const formdata = new FormData();\n  // formdata.append('file', fileData.payload.file);\n  // getMd5SumFilesTest(fileData.payload.file)\n\n  try {\n    const requestURL = fileData.payload.url;\n    const fileResponse = yield call(fetch, requestURL, config);\n    // const fileResponse = yield call(\n    //   axios.put,\n    //   requestURL,\n    // config\n    //   // {\n    //   //   headers: {\n    //   //     'Content-type': 'application/form-data',\n    //   //   },\n    //   //   onUploadProgress: data => {\n    //   //     fileData.payload.dispatch(\n    //   //       actions.uploadFileProgress(\n    //   //         Math.round((100 * data.loaded) / data.total),\n    //   //       ),\n    //   //     );\n    //   //   },\n    //   // },\n    // );\n\n    //console.log(fileResponse);\n    if (fileResponse.status === 200) {\n      yield put(\n        actions.appBuildApplicationFileUploaded({\n          type: fileData.payload.type,\n          status: fileResponse.status,\n        }),\n      );\n    } else {\n      yield put(\n        actions.appBuildFileUploadError(TestExecutionErrorType.RESPONSE_ERROR),\n      );\n    }\n  } catch (err) {\n    yield put(\n      actions.appBuildFileUploadError(TestExecutionErrorType.RESPONSE_ERROR),\n    );\n  }\n}\nfunction* uploadEventConfigFileSagaWatcher(fileData) {\n  const config = {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/x-msdos-program',\n    },\n    body: fileData.payload.file,\n  };\n\n  try {\n    const requestURL = fileData.payload.url;\n    const fileResponse = yield call(fetch, requestURL, config);\n\n    if (fileResponse.status === 200) {\n      yield put(\n        actions.eventConfigFileUploaded({\n          type: fileData.payload.type,\n          status: fileResponse.status,\n        }),\n      );\n    } else {\n      yield put(\n        actions.eventConfigFileUploadError(\n          TestExecutionErrorType.RESPONSE_ERROR,\n        ),\n      );\n    }\n  } catch (err) {\n    yield put(\n      actions.eventConfigFileUploadError(TestExecutionErrorType.RESPONSE_ERROR),\n    );\n  }\n}\n\nfunction* selectAppBuildSagaWatcher(paramstring) {\n  const idToken = GetIdToken();\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n\n  const fileStatusString = paramstring.payload.hasOwnProperty('fileStatus')\n    ? ''\n    : 'fileStatus=processed&';\n  const fileStringTestType = paramstring.payload.hasOwnProperty('testType')\n    ? `&testType=${paramstring.payload.testType}`\n    : '';\n  try {\n    const requestURL = `${BASE_URL_FILES}/files?fileCategory=${\n      paramstring.payload.fileCategory\n    }${getProjectString(\n      paramstring?.payload?.projectName,\n    )}${fileStringTestType}`;\n    const selectAppBuildList = yield call(request, requestURL, config);\n    if (selectAppBuildList.hasOwnProperty('data')) {\n      yield put(actions.selectAppBuildListLoaded(selectAppBuildList.data));\n    } else {\n      yield put(\n        actions.selectAppBuildListError(TestExecutionErrorType.RESPONSE_ERROR),\n      );\n    }\n  } catch (err) {\n    yield put(\n      actions.selectAppBuildListError(TestExecutionErrorType.RESPONSE_ERROR),\n    );\n  }\n}\nfunction* selectAppBuildAndroidSagaWatcher(paramstring) {\n  const idToken = GetIdToken();\n  const fileStringTestType = paramstring.payload.hasOwnProperty('testType')\n    ? `&testType=${paramstring.payload.testType}`\n    : '';\n  const requestURL = `${BASE_URL_FILES}/files?fileCategory=${\n    paramstring.payload.fileCategory\n  }${getProjectString(paramstring?.payload?.projectName)}${fileStringTestType}`;\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  try {\n    const selectAppBuildList = yield call(request, requestURL, config);\n    if (selectAppBuildList.hasOwnProperty('data')) {\n      yield put(\n        actions.selectAppBuildListAndroidLoaded(selectAppBuildList.data),\n      );\n    } else {\n      yield put(\n        actions.selectAppBuildAndroidError(\n          TestExecutionErrorType.RESPONSE_ERROR,\n        ),\n      );\n    }\n  } catch (err) {\n    yield put(\n      actions.selectAppBuildAndroidError(TestExecutionErrorType.RESPONSE_ERROR),\n    );\n  }\n}\n\nfunction* selectScriptSagaWatcher(paramstring) {\n  const idToken = GetIdToken();\n  const fileStringTestType = paramstring.payload.hasOwnProperty('testType')\n    ? `&testType=${paramstring.payload.testType}`\n    : '';\n  const requestURL = `${BASE_URL_FILES}/files?fileCategory=${\n    paramstring.payload.fileCategory\n  }${getProjectString(paramstring?.payload?.projectName)}${fileStringTestType}`;\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  try {\n    const selectScriptList = yield call(request, requestURL, config);\n    if (selectScriptList.hasOwnProperty('data')) {\n      yield put(actions.selectScriptListLoaded(selectScriptList.data));\n    } else {\n      yield put(\n        actions.selectScriptListError(TestExecutionErrorType.RESPONSE_ERROR),\n      );\n    }\n  } catch (err) {\n    yield put(\n      actions.selectScriptListError(TestExecutionErrorType.RESPONSE_ERROR),\n    );\n  }\n}\nfunction* selectVisualScriptSagaWatcher(paramstring) {\n  const idToken = GetIdToken();\n  const fileStatus =\n    paramstring.payload.hasOwnProperty('fileCategory') &&\n    paramstring.payload.fileCategory === 'visual-journey-script'\n      ? 'unprocessed'\n      : 'processed';\n  const fileStringTestType = paramstring.payload.hasOwnProperty('testType')\n    ? `&testType=${paramstring.payload.testType}`\n    : '';\n  const requestURL = `${BASE_URL_FILES}/files?fileCategory=${\n    paramstring.payload.fileCategory\n  }${getProjectString(paramstring?.payload?.projectName)}${fileStringTestType}`;\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  try {\n    const selectScriptList = yield call(request, requestURL, config);\n    if (selectScriptList.hasOwnProperty('data')) {\n      yield put(actions.selectVisualScriptListLoaded(selectScriptList.data));\n    } else {\n      yield put(\n        actions.selectVisualScriptListError(\n          TestExecutionErrorType.RESPONSE_ERROR,\n        ),\n      );\n    }\n  } catch (err) {\n    yield put(\n      actions.selectVisualScriptListError(\n        TestExecutionErrorType.RESPONSE_ERROR,\n      ),\n    );\n  }\n}\nfunction* selectScriptAndroidSagaWatcher(paramstring) {\n  const idToken = GetIdToken();\n  const fileStringTestType = paramstring.payload.hasOwnProperty('testType')\n    ? `&testType=${paramstring.payload.testType}`\n    : '';\n  const requestURL = `${BASE_URL_FILES}/files?fileCategory=${\n    paramstring.payload.fileCategory\n  }${getProjectString(paramstring?.payload?.projectName)}${fileStringTestType}`;\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  try {\n    const selectScriptList = yield call(request, requestURL, config);\n    if (selectScriptList.hasOwnProperty('data')) {\n      yield put(actions.selectScriptListAndroidLoaded(selectScriptList.data));\n    } else {\n      yield put(\n        actions.selectScriptListAndroidError(\n          TestExecutionErrorType.RESPONSE_ERROR,\n        ),\n      );\n    }\n  } catch (err) {\n    yield put(\n      actions.selectScriptListAndroidError(\n        TestExecutionErrorType.RESPONSE_ERROR,\n      ),\n    );\n  }\n}\n\nfunction* selectDeviceListingSagaWatcher(param) {\n  // console.log(param.payload);\n  const idToken = GetIdToken();\n  const devicePlaform = param.payload.platform\n    ? `?platform=${param.payload.platform}`\n    : '';\n  const testTypeString = param.payload.testType\n    ? `?testType=${param.payload.testType}`\n    : '';\n  const testType =\n    devicePlaform && testTypeString\n      ? `&testType=${param.payload.testType}`\n      : testTypeString;\n  const requestURL = `${BASE_URL_SCHEDULE}/devices${devicePlaform}${testType}`;\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  try {\n    const getDeviceList = yield call(request, requestURL, config);\n    if (getDeviceList.hasOwnProperty('data')) {\n      yield put(actions.DeviceListLoaded(getDeviceList.data.list));\n    } else {\n      yield put(\n        actions.deviceListLoadError(TestExecutionErrorType.RESPONSE_ERROR),\n      );\n    }\n  } catch (err) {\n    yield put(\n      actions.deviceListLoadError(TestExecutionErrorType.RESPONSE_ERROR),\n    );\n  }\n}\n\nfunction* getTestExecutionDetail(testdetail) {\n  // console.log(testdetail.payload);\n  const idToken = GetIdToken();\n  yield delay(1000);\n  const config = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n    body: JSON.stringify(testdetail.payload),\n  };\n  try {\n    const requestURL = `${BASE_URL_SCHEDULE}/schedules`;\n    const getExecuteResponse = yield call(request, requestURL, config);\n    //console.log(getExecuteResponse);\n    if (getExecuteResponse.hasOwnProperty('message')) {\n      yield put(actions.testExecutionDataLoaded(getExecuteResponse));\n    } else {\n      yield put(\n        actions.testExecutionDataError(TestExecutionErrorType.RESPONSE_ERROR),\n      );\n    }\n  } catch (err) {\n    yield put(\n      actions.testExecutionDataError(TestExecutionErrorType.RESPONSE_ERROR),\n    );\n  }\n}\n\nfunction* getBusyDeviceSlotsSagaWatcher(deviceIds) {\n  const idToken = GetIdToken();\n  // delay(500);\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  const param = deviceIds.payload.join(',');\n  const requestURL = `${BASE_URL}/busyslots?devices=${param}`;\n  //const requestURL = `https://development-api.mozark.ai/testexecute/busyslots?devices=${param}`;\n\n  try {\n    const deviceBusySlots = yield call(request, requestURL, config);\n    //console.log(deviceBusySlots);\n    if (deviceBusySlots.hasOwnProperty('data')) {\n      yield put(actions.BusyDeviceSlotsListLoaded(deviceBusySlots.data.list));\n    } else {\n      yield put(\n        actions.BusyDeviceSlotsListError(TestExecutionErrorType.RESPONSE_ERROR),\n      );\n    }\n  } catch (err) {\n    yield put(\n      actions.BusyDeviceSlotsListError(TestExecutionErrorType.RESPONSE_ERROR),\n    );\n  }\n}\n\nexport function* xcuiTestExecutionSaga() {\n  yield takeLatest(actions.loadTestExecutionData.type, getTestExecutionDetail);\n\n  yield takeLatest(\n    actions.createTestExecutionProject.type,\n    createProjectSagaWatcher,\n  );\n  yield takeLatest(actions.loadUploadApplication.type, uploadFileSagaWatcher);\n  yield takeLatest(\n    actions.loadUploadApplicationAndroid.type,\n    uploadFileSagaWatcherAndroid,\n  );\n\n  yield takeLatest(\n    actions.loadSelectTestExecutionProjectList.type,\n    getTestExecutionProjectList,\n  );\n  yield takeLatest(actions.loadDeviceList.type, selectDeviceListingSagaWatcher);\n  yield takeLatest(\n    actions.loadSelectAppBuildList.type,\n    selectAppBuildSagaWatcher,\n  );\n  yield takeLatest(\n    actions.loadSelectAppBuildAndroidList.type,\n    selectAppBuildAndroidSagaWatcher,\n  );\n  yield takeLatest(\n    actions.loadSelectScriptAndroidList.type,\n    selectScriptAndroidSagaWatcher,\n  );\n  yield takeLatest(actions.loadSelectScriptList.type, selectScriptSagaWatcher);\n  yield takeLatest(\n    actions.loadSelectVisualScriptList.type,\n    selectVisualScriptSagaWatcher,\n  );\n  yield takeLatest(\n    actions.loadUploadAppBuildFile.type,\n    uploadAppBuildFileSagaWatcher,\n  );\n  yield takeLatest(\n    actions.loadUploadEventConfigFile.type,\n    uploadEventConfigFileSagaWatcher,\n  );\n  yield takeLatest(\n    actions.loadindBusyDeviceSlots.type,\n    getBusyDeviceSlotsSagaWatcher,\n  );\n}\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\nimport { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';\nimport { xcuiTestExecutionSaga } from './saga';\nimport { XcuiTestExecutionState } from './types';\n\nexport const initialState: XcuiTestExecutionState = {\n  loading: false,\n  error: null,\n  XcuiData: {},\n  selectProjectList: [],\n  loadingProjectList: false,\n  loadProjectListError: null,\n\n  selectAppBuildList: [],\n  loadingAppBuildList: false,\n  selectAppBuildListError: null,\n  selectScriptList: [],\n  loadingScriptList: false,\n  selectScriptListError: null,\n  selectVisualScriptList: [],\n  loadingVisualScriptList: false,\n  selectVisualScriptListError: null,\n  selectAppBuildAndroidList: [],\n  loadingAppBuildAndroidList: false,\n  selectAppBuildListAndroidError: null,\n  selectScriptAndroidList: [],\n  loadingScriptAndroidList: false,\n  selectScriptListAndroidError: null,\n  loadingDeviceList: false,\n  DeviceListData: [],\n  DeviceListingError: null,\n\n  TestExecutionSelectDevice: [],\n  loadCreateProjectRequest: false,\n  creatProjectResponse: {},\n  createProjectError: null,\n  removeId: '',\n\n  loadingUploadApplication: false,\n  applicationUploaded: {},\n  applicationUploadError: null,\n\n  loadingUploadApplicationAndroid: false,\n  applicationUploadedAndroid: {},\n  applicationUploadAndroidError: null,\n\n  loadingAppBuildFile: false,\n  appBuildFileUploaded: {},\n  appBuildFileError: null,\n  loadingEventConfigFile: false,\n  eventConfigFileUploaded: {},\n  eventConfigFileError: null,\n  progressValue: 0,\n  loadingBusySlots: false,\n  BusyDeviceSlotsData: [],\n  BusyDeviceSlotsError: null,\n  addedOptionalKeyValue: [],\n};\n\nexport const addUniqueDevices = (arr, data) => {\n  let index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].id === data.id) {\n      index = i;\n    }\n  }\n  if (index > -1) {\n    if (data.count > 0) {\n      arr[index] = data;\n    } else {\n      arr.splice(index, 1);\n    }\n  } else if (index === -1 && data.count !== 0) {\n    arr.push(data);\n  }\n\n  return arr;\n};\nconst removeSelectedDeviceHandler = (arr, id) => {\n  const data = arr.filter(item => item.id !== id);\n  return data;\n};\nexport const slice = createSlice({\n  name: 'XcuiTestExecution',\n  initialState,\n  reducers: {\n    loadTestExecutionData: state => {\n      state.loading = true;\n    },\n    testExecutionDataLoaded: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = null;\n      state.XcuiData = action.payload;\n    },\n    testExecutionDataError: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    loadSelectTestExecutionProjectList: state => {\n      state.loadingProjectList = true;\n    },\n    selectTestExecutionProjectListLoaded: (\n      state,\n      action: PayloadAction<any>,\n    ) => {\n      state.selectProjectList = action.payload;\n      state.loadingProjectList = false;\n      state.loadProjectListError = null;\n    },\n    selectTestExecutionProjectListError: (\n      state,\n      action: PayloadAction<any>,\n    ) => {\n      state.loadingProjectList = false;\n      state.loadProjectListError = action.payload;\n    },\n    loadSelectAppBuildList: (state , action: PayloadAction<any>) => {\n      state.loadingAppBuildList = true;\n    },\n    selectAppBuildListLoaded: (state, action: PayloadAction<any>) => {\n      state.selectAppBuildList = action.payload.list;\n      state.selectAppBuildListError = null;\n      state.loadingAppBuildList = false;\n    },\n    selectAppBuildListError: (state, action: PayloadAction<any>) => {\n      state.loadingAppBuildList = false;\n      state.selectAppBuildListError = action.payload;\n    },\n    loadSelectScriptList: state => {\n      state.loadingScriptList = true;\n    },\n    selectScriptListLoaded: (state, action: PayloadAction<any>) => {\n      state.selectScriptList = action.payload.list;\n      state.selectScriptListError = null;\n      state.loadingScriptList = false;\n    },\n    selectScriptListError: (state, action: PayloadAction<any>) => {\n      state.loadingScriptList = false;\n      state.selectScriptListError = action.payload;\n    },\n    loadSelectVisualScriptList: state => {\n      state.loadingVisualScriptList = true;\n    },\n    selectVisualScriptListLoaded: (state, action: PayloadAction<any>) => {\n      state.selectVisualScriptList = action.payload.list;\n      state.selectVisualScriptListError = null;\n      state.loadingVisualScriptList = false;\n    },\n    selectVisualScriptListError: (state, action: PayloadAction<any>) => {\n      state.loadingVisualScriptList = false;\n      state.selectVisualScriptListError = action.payload;\n    },\n    loadSelectScriptAndroidList: state => {\n      state.loadingScriptAndroidList = true;\n    },\n    selectScriptListAndroidLoaded: (state, action: PayloadAction<any>) => {\n      state.selectScriptAndroidList = action.payload.list;\n      state.selectScriptListAndroidError = null;\n      state.loadingScriptAndroidList = false;\n    },\n    selectScriptListAndroidError: (state, action: PayloadAction<any>) => {\n      state.loadingScriptAndroidList = false;\n      state.selectScriptListAndroidError = action.payload;\n    },\n    loadSelectAppBuildAndroidList: state => {\n      state.loadingAppBuildAndroidList = true;\n    },\n    selectAppBuildListAndroidLoaded: (state, action: PayloadAction<any>) => {\n      state.selectAppBuildAndroidList = action.payload.list;\n      state.selectAppBuildListAndroidError = null;\n      state.loadingAppBuildAndroidList = false;\n    },\n    selectAppBuildAndroidError: (state, action: PayloadAction<any>) => {\n      state.loadingAppBuildAndroidList = false;\n      state.selectAppBuildListAndroidError = action.payload;\n    },\n\n    createTestExecutionProject: (state ,action: PayloadAction<any>  ) => {\n      state.loadCreateProjectRequest = true;\n    },\n    testExecutionProjectCreated: (state, action: PayloadAction<any>) => {\n      state.loadCreateProjectRequest = false;\n      state.creatProjectResponse = action.payload;\n      state.createProjectError = null;\n    },\n    createTestExecutionProjectError: (state, action: PayloadAction<any>) => {\n      state.loadCreateProjectRequest = false;\n      state.createProjectError = action.payload;\n    },\n\n    removeSelectedDevices: (state, action: PayloadAction<any>) => {\n      state.TestExecutionSelectDevice = removeSelectedDeviceHandler(\n        state.TestExecutionSelectDevice,\n        action.payload,\n      );\n      state.removeId = action.payload;\n    },\n\n    resetTestDevices: state => {\n      state.TestExecutionSelectDevice = [];\n    },\n    addTestDevices: (state, action: PayloadAction<any>) => {\n      addUniqueDevices(state.TestExecutionSelectDevice, action.payload);\n    },\n    addSelectedDevices: (state, action: PayloadAction<any>) => {\n      state.TestExecutionSelectDevice = action.payload;\n    },\n    loadUploadApplication:(state ,action: PayloadAction<any>)=> {\n      state.loadingUploadApplication = true;\n    },\n    uploadApplicationResponse: (state, action: PayloadAction<any>) => {\n      state.loadingUploadApplication = false;\n      state.applicationUploaded = action.payload;\n      state.applicationUploadError = null;\n    },\n    uploadApplicationError: (state, action: PayloadAction<any>) => {\n      state.loadingUploadApplication = false;\n      state.applicationUploadError = action.payload;\n    },\n    loadUploadApplicationAndroid: state => {\n      state.loadingUploadApplicationAndroid = true;\n    },\n    uploadApplicationAndroidResponse: (state, action: PayloadAction<any>) => {\n      state.loadingUploadApplicationAndroid = false;\n      state.applicationUploadedAndroid = action.payload;\n      state.applicationUploadAndroidError = null;\n    },\n    uploadApplicationAndroidError: (state, action: PayloadAction<any>) => {\n      state.loadingUploadApplicationAndroid = false;\n      state.applicationUploadAndroidError = action.payload;\n    },\n\n    loadUploadAppBuildFile: state => {\n      state.loadingAppBuildFile = true;\n    },\n    appBuildApplicationFileUploaded: (state, action: PayloadAction<any>) => {\n      state.loadingAppBuildFile = false;\n      state.appBuildFileUploaded = action.payload;\n    },\n    appBuildFileUploadError: (state, action: PayloadAction<any>) => {\n      state.loadingAppBuildFile = false;\n      state.appBuildFileError = action.payload;\n    },\n    loadUploadEventConfigFile: state => {\n      state.loadingEventConfigFile = true;\n    },\n    eventConfigFileUploaded: (state, action: PayloadAction<any>) => {\n      state.loadingEventConfigFile = false;\n      state.eventConfigFileUploaded = action.payload;\n    },\n    eventConfigFileUploadError: (state, action: PayloadAction<any>) => {\n      state.loadingEventConfigFile = false;\n      state.eventConfigFileError = action.payload;\n    },\n    loadDeviceList: state => {\n      state.loadingDeviceList = true;\n    },\n    DeviceListLoaded: (state, action: PayloadAction<any>) => {\n      state.loadingDeviceList = false;\n      //console.log(action.payload)\n      state.DeviceListData = action.payload.filter(\n        item => item.deviceParameters.deviceStatus != 'unavailable',\n      );\n      state.DeviceListingError = null;\n    },\n    deviceListLoadError: (state, action: PayloadAction<any>) => {\n      state.loadingDeviceList = false;\n      state.DeviceListingError = action.payload;\n    },\n    uploadFileProgress: (state, action: PayloadAction<any>) => {\n      state.progressValue = action.payload;\n    },\n    loadindBusyDeviceSlots: state => {\n      state.loadingBusySlots = true;\n    },\n    BusyDeviceSlotsListLoaded: (state, action: PayloadAction<any>) => {\n      state.loadingBusySlots = false;\n\n      state.BusyDeviceSlotsData = action.payload;\n    },\n    BusyDeviceSlotsListError: (state, action: PayloadAction<any>) => {\n      state.loadingBusySlots = false;\n      state.BusyDeviceSlotsError = action.payload;\n    },\n    addOptionalKeyValue: (state, action: PayloadAction<any>) => {\n      //console.log(action.payload);\n      if (action.payload.hasOwnProperty('keyName')) {\n        state.addedOptionalKeyValue = [\n          ...state.addedOptionalKeyValue,\n          action.payload,\n        ];\n      } else {\n        state.addedOptionalKeyValue = action.payload;\n      }\n    },\n  },\n});\n\nexport const { actions: xcuiTestExecutionActions } = slice;\n\nexport const useTestExecutionSlice = () => {\n  useInjectReducer({ key: slice.name, reducer: slice.reducer });\n  useInjectSaga({ key: slice.name, saga: xcuiTestExecutionSaga });\n  return { testExecutionActions: slice.actions };\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst usePlatformtypeHook = () => {\n  const location = useLocation();\n  const pathname = location.pathname;\n  const [isMobileTesting , setMobileTesting] = useState()\n  const searchTerm = '/motesting';\n  const hasStartingString = pathname.startsWith(searchTerm);\n\n  useEffect(() => {\n      setMobileTesting(hasStartingString)\n  }, [location]);\n\n  return hasStartingString;\n};\n\nexport default usePlatformtypeHook;\n","// @ts-nocheck\nimport React, { useEffect, useRef } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Table as CustomTable,\n  Thead,\n  Tr,\n  Img,\n  Text,\n  Box,\n  // Container,\n  Td,\n  Th,\n  Tbody,\n  Input,\n  Flex,\n  //  IconButton,\n  Icon,\n  Center,\n  HStack,\n  Badge,\n} from '@chakra-ui/react';\n\nimport { useTable, usePagination } from 'react-table';\n\nimport automationIcon from '../../../../../styles/Assets/Automation.svg';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { GrShieldSecurity } from 'react-icons/gr';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport {\n  MdEdit,\n  MdOutlineAnalytics,\n  MdOutlineDisabledByDefault,\n  MdOutlineMonitor,\n  MdOutlineTouchApp,\n} from 'react-icons/md';\n\nimport { useTestAnalyticsSlice } from '../../testAnalyticsSlice';\nimport { AiOutlineCheckSquare, AiOutlineSetting } from 'react-icons/ai';\nimport { dateTimeConverter } from 'utils/gernricfunction';\nimport UserPool from 'Authentication/configuration/UserPool';\nimport { FiTv } from 'react-icons/fi';\nimport { RiDeviceLine } from 'react-icons/ri';\n\nimport { HomePageActions, useHomePageSlice } from 'app/pages/HomePage/slice';\nimport { selectPageIndexInisialValue } from 'app/pages/HomePage/slice/selectors';\nimport { getEmailId } from 'Authentication/configuration/GetEmail';\nimport { BsCheckCircle } from 'react-icons/bs';\n\nconst AutomationIcon = () => {\n  return (\n    <Flex as=\"span\" padding=\"0px\">\n      {' '}\n      <Img\n        width=\"22px\"\n        marginLeft=\"5px\"\n        height=\"22px\"\n        src={automationIcon}\n        alt=\"debug\"\n      ></Img>\n    </Flex>\n  );\n};\n//\n\n// const actionBoxShow = e => {\n//   if (document.getElementById(`box${e}`)) {\n//     document.getElementById(`box${e}`).style.display = 'block';\n//   }\n// };\n// const actionBoxHide = e => {\n//   document.getElementById(`box${e}`).style.display = 'none';\n// };\n\nconst getTestIdHandler = id => {\n  // console.log(id)\n};\n\n// const getPageIndexForTable = (type, getTabIndex) => {\n//   if (type) {\n//     const getTabIndexKey = getTabIndex || getTabIndex === 0 ? getTabIndex : '';\n//     if (\n//       parseInt(localStorage.getItem(`pageIndexKey${type}${getTabIndexKey}`))\n//     ) {\n//       return parseInt(\n//         localStorage.getItem(`pageIndexKey${type}${getTabIndexKey}`),\n//       );\n//     } else {\n//       return 0;\n//     }\n//   }\n//   return 0;\n// };\n\nexport function PaginatedTable({\n  columns,\n  data,\n  leftIcon,\n  rightHoverIcon,\n  type,\n  getTabIndex,\n  editUserClickHandler,\n  deleteUserClickHandler,\n}) {\n  let history = useNavigate();\n  const getRowId = id => {\n    history(`/testsummary/${id}`);\n    //  console.log(id)\n  };\n\n  const GetLastAuthUser = () => {\n    const last_auth = `CognitoIdentityServiceProvider.${UserPool.getClientId()}.LastAuthUser`;\n    const reg = new RegExp(`(?<=${last_auth}=)[^;]*`);\n    try {\n      return document.cookie.match(reg)[0];\n    } catch {\n      return null;\n    }\n  };\n\n  const username = GetLastAuthUser();\n  const email = getEmailId();\n\n  const getTabIndexKey = getTabIndex || getTabIndex === 0 ? getTabIndex : '';\n  const inputRef = useRef();\n  //const { actions } = useManageUserSlice();\n  const { homePageActions } = useHomePageSlice();\n  const getPageIndexinit = useSelector(selectPageIndexInisialValue);\n  const dispatch = useDispatch();\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page, // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    // pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    //setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        pageIndex:\n          getPageIndexinit.hasOwnProperty('key') &&\n          getPageIndexinit.key === `pageIndexKey${type}${getTabIndexKey}`\n            ? getPageIndexinit.value\n            : 0,\n        //getPageIndexForTable(type, getTabIndex),\n        //getPageIndexForTable(type)\n        // parseInt(localStorage.getItem(`pageIndexKey${type}${getTabIndexKey}`)) === 'NAN' ?  0 :  parseInt(localStorage.getItem(`pageIndexKey${type}${getTabIndexKey}`)),\n        pageSize: 20,\n      },\n      autoResetPage: true,\n      // manualPagination: false,\n      //autoResetPageIndex : false,\n    },\n    usePagination,\n  );\n\n  // Render the UI for your table\n  return (\n    <Flex\n      flexDirection=\"column\"\n      paddingTop=\"5px\"\n      width=\"100%\"\n      backgroundColor=\"white\"\n    >\n      <CustomTable\n        fontFamily=\"Montserrat\"\n        fontWeight=\"500\"\n        variant=\"simple\"\n        {...getTableProps()}\n      >\n        <Thead fontWeight=\"500\" color=\"grey1\">\n          {headerGroups.map(headerGroup => (\n            <Tr {...headerGroup.getHeaderGroupProps()}>\n              {/* <Th\n                fontFamily=\"Montserrat\"\n                minWidth=\"0px\"\n                paddingLeft=\"0px\"\n                paddingRight=\"0px\"\n              ></Th> */}\n              {leftIcon && (\n                <Th\n                  fontFamily=\"Montserrat\"\n                  minWidth=\"0px\"\n                  paddingLeft=\"0px\"\n                  paddingRight=\"0px\"\n                ></Th>\n              )}\n              {headerGroup.headers.map(column => (\n                <Th\n                  fontFamily=\"Montserrat\"\n                  textTransform=\"capitalize\"\n                  padding=\"2px 5px\"\n                  color=\"grey1\"\n                  {...column.getHeaderProps()}\n                >\n                  {column.render('Header')}\n                </Th>\n              ))}\n              {rightHoverIcon && <Th></Th>}\n            </Tr>\n          ))}\n        </Thead>\n        <Tbody fontWeight=\"500\" color=\"grey13\" {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row);\n\n            return (\n              <Tr\n                textDecoration=\"none\"\n                cursor={type === 'testAnalyticsTable ' && 'pointer'}\n                className=\"testTr\"\n                data-scriptappbuild-id={\n                  (type === 'deleteappbuilds' || type === 'deletetestsuite') &&\n                  row.cells[0].row.original.uuid\n                }\n                data-manageproject-id={\n                  type === 'manangeProjectTable' &&\n                  row.cells[0].row.original.uuid\n                }\n                onClick={() => {\n                  if (type === 'testAnalyticsTable ') {\n                    getRowId(row.cells[0].row.original.uuid._id);\n                  }\n                }}\n                _hover={rightHoverIcon ? { background: 'grey14' } : ''}\n                {...row.getRowProps()}\n              >\n                {leftIcon && (\n                  <Td minWidth=\"10px\" paddingLeft=\"10px\" paddingRight=\"5px\">\n                    {type === 'testAnalyticsTable ' ? (\n                      row.cells[0].row.original.testType === 'lr-automation' ? (\n                        <Icon\n                          title=\"LR Automation\"\n                          w=\"22px\"\n                          h=\"22px\"\n                          color=\"grey1\"\n                          as={MdOutlineMonitor}\n                        ></Icon>\n                      ) : row.cells[0].row.original.testType ===\n                        'lr-interact' ? (\n                        <Icon\n                          w=\"22px\"\n                          title=\"LR Interact\"\n                          h=\"22px\"\n                          color=\"grey1\"\n                          as={RiDeviceLine}\n                        ></Icon>\n                      ) : row.cells[0].row.original.uuid.testId !== '' ? (\n                        <Icon\n                          w=\"22px\"\n                          h=\"22px\"\n                          title=\"App Automation\"\n                          color=\"grey1\"\n                          as={AiOutlineSetting}\n                        ></Icon>\n                      ) : (\n                        <Icon\n                          color=\"grey1\"\n                          w=\"22px\"\n                          h=\"22px\"\n                          title=\"Manual\"\n                          as={MdOutlineTouchApp}\n                        ></Icon>\n                      )\n                    ) : (\n                      leftIcon\n                    )}\n                  </Td>\n                )}\n\n                {row.cells.map((cell, index) => {\n                  // {console.log(cell.render('Cell').props.data[i].id)}\n                  return (\n                    <Td\n                      color={\n                        type === 'testAnalyticsTable '\n                          ? row.cells[0].row.original.testStatus === 'Started'\n                            ? '#0d5bb5'\n                            : row.cells[0].row.original.testStatus === 'Failed'\n                            ? '#EF4E90'\n                            : ''\n                          : ''\n                      }\n                      // color={\n                      //   type === 'testAnalyticsTable ' &&\n                      //   row.cells[0].row.original.testStatus === 'Completed'\n                      //     ? ' '\n                      //     : '#0d5bb5'\n                      // }\n                      textTransform=\"none\"\n                      minWidth={\n                        type === 'testAnalyticsTable ' ? '60px' : '70px'\n                      }\n                      // minWidth={index === 5 ? '100px' : '70px'}\n                      padding=\"5px 4px\"\n                      {...cell.getCellProps()}\n                      minWidth=\"75px\"\n                    >\n                      {/* get the data of particular cell */}\n                      {/* {console.log(row.cells[0].row.original.user_role)} */}\n\n                      {(index === 0 &&\n                        type === 'testAnalyticsTable ' &&\n                        ((row.cells[0].row.original.testStatus ===\n                          'Completed' &&\n                          'Success') ||\n                          (row.cells[0].row.original.testStatus === 'Aborted' &&\n                            'User Aborted'))) ||\n                        (index === 1 &&\n                          type === 'testAnalyticsTable ' &&\n                          dateTimeConverter(\n                            row.cells[0].row.original.testStartTime,\n                          )) ||\n                        (index === 2 &&\n                          type === 'journeyTable' &&\n                          dateTimeConverter(\n                            row.cells[0].row.original.updatedAt,\n                          )) ||\n                        (index === 2 &&\n                          type === 'testAnalyticsTable ' &&\n                          row.cells[0].row.original.uuid.sessionId &&\n                          row.cells[0].row.original.uuid.sessionId) ||\n                        (index == 1 &&\n                          type === 'appBuilds' &&\n                          new Date(\n                            //cell.render('Cell').props.data[i].createdDate,\n                            row.cells[0].row.original.createdDate,\n                          )\n                            .toGMTString()\n                            .slice(5, 16)) ||\n                        (index === 1 &&\n                          (type === 'manageUserTable' ||\n                            type === 'manageKeyTable') &&\n                          row.cells[0].row.original.user_role ===\n                            'SystemAdmin' && (\n                            <Text\n                              bg=\"blue1\"\n                              color=\"white\"\n                              align=\"center\"\n                              borderRadius=\"20px\"\n                              width=\"120px\"\n                            >\n                              {/* {cell.render('Cell').props.data[i].role} */}\n                              {row.cells[0].row.original.user_role}\n                            </Text>\n                          )) ||\n                        (index === 1 &&\n                          (type === 'manageUserTable' ||\n                            type === 'manageKeyTable') &&\n                          row.cells[0].row.original.user_role ===\n                            'TenantAdmin' && (\n                            <Text\n                              bg=\"blue1\"\n                              color=\"white\"\n                              align=\"center\"\n                              borderRadius=\"20px\"\n                              width=\"120px\"\n                            >\n                              {/* {cell.render('Cell').props.data[i].role} */}\n                              {row.cells[0].row.original.user_role}\n                            </Text>\n                          )) ||\n                        (index === 3 &&\n                          (type === 'manageUserTable' ||\n                            type === 'manageKeyTable') &&\n                          '*********') ||\n                        (index === 4 &&\n                          type === 'manageUserTable' &&\n                          (row.cells[0].row.original.isMFAEnabled ? (\n                            <Icon\n                              color=\"grey1\"\n                              w=\"25px\"\n                              h=\"25px\"\n                              as={AiOutlineCheckSquare}\n                            ></Icon>\n                          ) : (\n                            <Icon\n                              w=\"25px\"\n                              h=\"25px\"\n                              color=\"grey1\"\n                              as={MdOutlineDisabledByDefault}\n                            ></Icon>\n                          ))) ||\n                        ((type === 'manageUserTable' ||\n                          type === 'manageKeyTable') &&\n                          index === 2 &&\n                          row.cells[0].row.original.status ===\n                            'FORCE_CHANGE_PASSWORD' && (\n                            <Text>\n                              {row.cells[0].row.original.email}{' '}\n                              <Badge\n                                borderRadius=\"20px\"\n                                padding=\"0px 10px\"\n                                variant=\"outline\"\n                              >\n                                {' '}\n                                not verified{' '}\n                              </Badge>\n                            </Text>\n                          )) ||\n                        cell.render('Cell')}\n                    </Td>\n                  );\n                })}\n                {rightHoverIcon && (\n                  <Td\n                    // minWidth=\"10px\"\n                    minWidth=\"95px\"\n                    padding=\"0px 5px\"\n                    paddingLeft=\"4px\"\n                    paddingRight=\"0px\"\n                    minWidth={type === 'testAnalyticsTable ' ? '50px' : '95px'}\n                  >\n                    <Flex\n                      sx={{\n                        '.testTr:hover &': {\n                          display: 'block',\n                        },\n                      }}\n                      id={`box${i}`}\n                      display=\"none\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                    >\n                      {type === 'testAnalyticsTable ' && (\n                        <Icon\n                          as={MdOutlineAnalytics}\n                          w=\"25px\"\n                          color=\"grey1\"\n                          h=\"25px\"\n                        ></Icon>\n                      )}\n\n                      {type === 'appbuildstable' && rightHoverIcon}\n                      {type === 'manageUserTable' && (\n                        <HStack align=\"center\" h=\"30px\">\n                          <Flex\n                            w=\"30px\"\n                            data-icon-id={`delete-user-icon-button-${row.cells[0].row.original.user_name}`}\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            borderRadius=\"5px\"\n                            cursor=\"pointer\"\n                            onClick={e =>\n                              deleteUserClickHandler(\n                                row.cells[0].row.original.user_name,\n                              )\n                            }\n                            //   onClick={e => dispatch(actions.deleteUserDetail(row.cells[0].row.original.id)) }\n                          >\n                            <Icon color=\"grey1\" as={FaTrashAlt}></Icon>\n                          </Flex>\n                          <Flex\n                            //id = {row.cells[0].row.original.id}\n                            data-icon-id={`edit-user-icon-button-${row.cells[0].row.original.user_name}`}\n                            w=\"30px\"\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            cursor=\"pointer\"\n                            borderRadius=\"5px\"\n                            onClick={e =>\n                              editUserClickHandler(row.cells[0].row.original)\n                            }\n                          >\n                            <Icon color=\"grey1\" as={MdEdit}></Icon>\n                          </Flex>\n                        </HStack>\n                      )}\n                      {type === 'manageKeyTable' && (\n                        <HStack align=\"center\" h=\"30px\">\n                          <Flex\n                            //id = {row.cells[0].row.original.id}\n                            data-icon-id={`edit-user-icon-button-${row.cells[0].row.original.user_name}`}\n                            w=\"30px\"\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            cursor=\"pointer\"\n                            borderRadius=\"5px\"\n                            onClick={e =>\n                              editUserClickHandler(row.cells[0].row.original)\n                            }\n                          >\n                            <Icon color=\"grey\" as={GrShieldSecurity}></Icon>\n                          </Flex>\n                        </HStack>\n                      )}\n                      {type === 'journeyTable' &&\n                        row.cells[0].row.original.createdBy === email && (\n                          <HStack align=\"center\" h=\"30px\">\n                            <Flex\n                              w=\"30px\"\n                              data-icon-id={`delete-user-icon-button-${row.cells[0].row.original.id}`}\n                              h=\"30px\"\n                              bg=\"white\"\n                              align=\"center\"\n                              justify=\"center\"\n                              borderRadius=\"5px\"\n                              cursor=\"pointer\"\n                              onClick={e =>\n                                deleteUserClickHandler(\n                                  row.cells[0].row.original.uuid,\n                                )\n                              }\n                              //   onClick={e => dispatch(actions.deleteUserDetail(row.cells[0].row.original.id)) }\n                            >\n                              <Icon color=\"grey1\" as={FaTrashAlt}></Icon>\n                            </Flex>\n                            <Flex\n                              //id = {row.cells[0].row.original.id}\n                              data-icon-id={`edit-user-icon-button-${row.cells[0].row.original.id}`}\n                              w=\"30px\"\n                              h=\"30px\"\n                              bg=\"white\"\n                              align=\"center\"\n                              justify=\"center\"\n                              cursor=\"pointer\"\n                              borderRadius=\"5px\"\n                              onClick={e =>\n                                editUserClickHandler(row.cells[0].row.original)\n                              }\n                            >\n                              <Icon color=\"grey1\" as={MdEdit}></Icon>\n                            </Flex>\n                          </HStack>\n                        )}\n                      {type === 'manangeProjectTable' && (\n                        <HStack align=\"center\" h=\"30px\">\n                          <Flex\n                            w=\"30px\"\n                            h=\"30px\"\n                            data-icon-id={`delete-project-icon-button-${row.cells[0].row.original.uuid}`}\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            borderRadius=\"5px\"\n                            cursor=\"pointer\"\n                            onClick={e =>\n                              deleteUserClickHandler(\n                                row.cells[0].row.original.uuid,\n                              )\n                            }\n                            // data-delete-project-button-id={\n                            //   row.cells[0].row.original.uuid\n                            // }\n                            //   onClick={e => dispatch(actions.deleteUserDetail(row.cells[0].row.original.id)) }\n                          >\n                            <Icon color=\"grey1\" as={FaTrashAlt}></Icon>\n                          </Flex>\n                          <Flex\n                            //id = {row.cells[0].row.original.id}\n                            data-icon-id={`edit-project-icon-button-${row.cells[0].row.original.uuid}`}\n                            w=\"30px\"\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            cursor=\"pointer\"\n                            borderRadius=\"5px\"\n                            onClick={e =>\n                              editUserClickHandler(row.cells[0].row.original)\n                            }\n                          >\n                            <Icon color=\"grey1\" as={MdEdit}></Icon>\n                          </Flex>\n                        </HStack>\n                      )}\n                      {(type === 'deleteappbuilds' ||\n                        type === 'deletetestsuite') && (\n                        <HStack align=\"center\" h=\"30px\">\n                          <Flex\n                            w=\"30px\"\n                            h=\"30px\"\n                            bg=\"white\"\n                            align=\"center\"\n                            justify=\"center\"\n                            borderRadius=\"5px\"\n                            cursor=\"pointer\"\n                            data-delete-button-id={\n                              row.cells[0].row.original.uuid\n                            }\n                            onClick={e =>\n                              deleteUserClickHandler(\n                                row.cells[0].row.original.uuid,\n                              )\n                            }\n                            //   onClick={e => dispatch(actions.deleteUserDetail(row.cells[0].row.original.id)) }\n                          >\n                            <Icon color=\"grey1\" as={FaTrashAlt}></Icon>\n                          </Flex>{' '}\n                        </HStack>\n                      )}\n                    </Flex>\n                  </Td>\n                )}\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </CustomTable>\n      {/* \n        Pagination can be built however you'd like. \n        This is just a very basic UI implementation:\n      */}\n      <Flex\n        justifyContent=\"flex-end\"\n        padding=\"10px 0px\"\n        marginRight=\"10px\"\n        color=\"grey13\"\n      >\n        <Flex\n          fontFamily=\"Montserrat\"\n          fontWeight=\"500\"\n          className=\"pagination\"\n          boxShadow=\"0px 3px 6px #00000029\"\n          borderRadius=\"13\"\n          marginTop=\"10px\"\n          marginRight=\"5px \"\n          color=\"grey2\"\n          padding=\"5px 10px\"\n          display=\"inline-block\"\n        >\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n            <Box as=\"b\" fontWeight=\"500\" borderRadius=\"50%\">\n              {' '}\n              &lt;{' '}\n            </Box>{' '}\n            &nbsp;\n          </button>{' '}\n          <Box as=\"span\" color=\"black\" paddingRight=\"2px\" paddingBottom=\"3px\">\n            <Input\n              variant=\"flushed\"\n              size=\"18px\"\n              width=\"25px\"\n              _focus={{ color: 'none' }}\n              textAlign=\"right\"\n              fontSize=\"14px\"\n              borderBottom=\"1.5px solid\"\n              borderBottomColor=\"grey2\"\n              ref={inputRef}\n              type=\"number\"\n              value={pageIndex + 1}\n              onFocus={e => e.target.select()}\n              onKeyUp={e => {\n                if (e.key === 'Backspace') {\n                  e.target.select();\n                }\n              }}\n              onChange={e => {\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                gotoPage(page);\n              }}\n            />\n          </Box>{' '}\n          <Box textTransform=\"lowercase\" as=\"span\" color=\"black\">\n            <span>of {pageOptions.length}</span>{' '}\n          </Box>\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\n            &nbsp;\n            <Box as=\"b\" fontWeight=\"500\" borderRadius=\"50%\">\n              {' '}\n              {'  >'}\n            </Box>\n          </button>{' '}\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Automation.a7979bd9.svg\";","import { ManageUserData } from 'types/ManageUser';\n\nexport interface manageProjectState {\n  loading: boolean;\n  error: null | ManageProjectErrorType;\n  deleteProjectData: manageProjectDetail;\n  loadingScriptAppbuildUnlink: boolean;\n  errorUnlink: null | ManageProjectErrorType;\n  unlinkScriptAppbuild: manageProjectDetail;\n  loadingScript: boolean;\n  errorDeleteScript: null | ManageProjectErrorType;\n  deleteScriptData: manageProjectDetail;\n  loadingAppbuild: boolean;\n  errorDeleteAppbuild: null | ManageProjectErrorType;\n  deleteAppbuildData: manageProjectDetail;\n}\n\nexport interface deleteProjectDetail {\n  //   name: string;\n  //   email: string;\n  //   password: string;\n  //   role: string;\n  //   id: string | number;\n}\nexport interface manageProjectDetail {}\nexport enum ManageProjectErrorType {\n  RESPONSE_ERROR = 1,\n  TEST_NOT_FOUND = 2,\n}\nexport enum UpdatedUserErrorType {\n  RESPONSE_ERROR = 1,\n  TEST_NOT_FOUND = 2,\n}\n","import GetIdToken from 'Authentication/configuration/GetIdToken';\nimport { call, put, takeLatest, delay, takeEvery } from 'redux-saga/effects';\n\nimport { request } from 'utils/request';\nimport { projectManageActions as actions } from './';\nimport { ManageProjectErrorType } from './types';\nimport { REACT_APP_AUTOMATION_TESTING_BASE_URL } from 'utils/enviroment';\n\nconst BASE_URL = REACT_APP_AUTOMATION_TESTING_BASE_URL;\n\nfunction* deleteProjectSagaWorker(param) {\n  const idToken = GetIdToken();\n  // console.log(param.payload);\n  const requestUrl = `${BASE_URL}/projects?projectId=${param.payload}`;\n\n  const config = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n\n  try {\n    const response = yield call(request, requestUrl, config);\n    if (response.hasOwnProperty('message')) {\n      yield put(actions.deleteProjectDataLoaded(response));\n    } else {\n      yield put(\n        actions.deleteProjectDataError(ManageProjectErrorType.RESPONSE_ERROR),\n      );\n    }\n\n    //console.log(response);\n  } catch (e) {\n    yield put(\n      actions.deleteProjectDataError(ManageProjectErrorType.RESPONSE_ERROR),\n    );\n  }\n}\n\nfunction* unlinkScriptAppbuildSagaWorker(param) {\n  const idToken = GetIdToken();\n  //console.log(param.payload);\n  const config = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${idToken}`,\n    },\n  };\n  const requestUrl = `${BASE_URL}/files?fileId=${param.payload.buildId}&${param.payload.type}`;\n  try {\n    const response = yield call(request, requestUrl, config);\n    if (response.hasOwnProperty('message')) {\n      yield put(actions.unlinkScriptAppbuild(response));\n    } else {\n      yield put(\n        actions.unlinklScriptAppbuildError(\n          ManageProjectErrorType.RESPONSE_ERROR,\n        ),\n      );\n    }\n    //console.log(response);\n  } catch (e) {\n    yield put(\n      actions.unlinklScriptAppbuildError(ManageProjectErrorType.RESPONSE_ERROR),\n    );\n  }\n}\n\nexport function* manageProjectSaga() {\n  yield takeLatest(actions.loadDeleteProject.type, deleteProjectSagaWorker);\n  yield takeLatest(\n    actions.loadUnlinkScriptAppbuild,\n    unlinkScriptAppbuildSagaWorker,\n  );\n}\n","// @ts-nocheck\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\nimport { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';\nimport { manageProjectSaga } from './saga';\nimport { manageProjectState } from './types';\n//import { testSessionSaga } from './saga';\n//import { TestSessionState } from './types';\n\nexport const initialState: manageProjectState = {\n  loading: false,\n  error: null,\n  deleteProjectData: {},\n  loadingScriptAppbuildUnlink: false,\n  errorUnlink: null,\n  unlinkScriptAppbuild: {},\n  loadingScript: false,\n  errorDeleteScript: null,\n  deleteScriptData: {},\n  loadingAppbuild: false,\n  errorDeleteAppbuild: null,\n  deleteAppbuildData: {},\n};\n\nconst slice = createSlice({\n  name: 'manageProject',\n  initialState,\n  reducers: {\n    loadDeleteProject: state => {\n      state.loading = true;\n    },\n    deleteProjectDataLoaded: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = null;\n      state.deleteProjectData = action.payload;\n    },\n    deleteProjectDataError: (state, action: PayloadAction<any>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    loadUnlinkScriptAppbuild: state => {\n      state.loadingScriptAppbuildUnlink = true;\n    },\n    unlinkScriptAppbuild: (state, action: PayloadAction<any>) => {\n      state.loadingScriptAppbuildUnlink = false;\n      state.unlinkScriptAppbuild = action.payload;\n      state.errorUnlink = null;\n    },\n    unlinklScriptAppbuildError: (state, action: PayloadAction<any>) => {\n      state.loadingScriptAppbuildUnlink = false;\n      state.errorUnlink = action.payload;\n    },\n  },\n});\n\nexport const { actions: projectManageActions } = slice;\n\nexport const useManageProjectSlice = () => {\n  useInjectReducer({ key: slice.name, reducer: slice.reducer });\n  useInjectSaga({ key: slice.name, saga: manageProjectSaga });\n  return { actions: slice.actions };\n};\n","// @ts-nocheck\nimport { CloseButton, Flex, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useManageProjectSlice } from '../slice';\n\nfunction BuildScriptFileComp({ item }) {\n  const dispatch = useDispatch();\n  const { actions } = useManageProjectSlice();\n  const unLinkScriptAppbuildHandler = id => {\n    //console.log(id);\n\n    dispatch(actions.loadUnlinkScriptAppbuild({ buildId: id, type: 'unlink' }));\n  };\n\n  ////console.log(item);\n  return (\n    <Flex\n      alignContent=\"center\"\n      data-appscript-id={item.uuid}\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n    >\n      <Text data-appscript-name-id={item.uuid} overflow=\"hidden\">\n        {item.fileName}\n      </Text>\n      <CloseButton\n        color=\"grey1\"\n        onClick={e => unLinkScriptAppbuildHandler(item.uuid)}\n        data-appscript-cloasebutton-id={item.uuid}\n      ></CloseButton>\n    </Flex>\n  );\n}\n\nexport default BuildScriptFileComp;\n","import { Flex, HStack, Spacer, Stack, Text } from '@chakra-ui/react';\nimport ButtonComp from 'app/components/ButtonComp';\nimport {\n  selectAppBuildAndroidListState,\n  selectAppBuildListState,\n  selectScriptAndroidState,\n  selectScriptState,\n} from 'app/pages/Xcui/slice/selector';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport BuildScriptFileComp from './BuildScriptFileComp';\n\nfunction EditMangeProject({ onClose, projectdetails }) {\n  //console.log(projectdetails);\n  const getAppbuildListIos = useSelector(selectAppBuildListState);\n  const getAppbuildListAndroid = useSelector(selectAppBuildAndroidListState);\n  const getScriptListIos = useSelector(selectScriptState);\n  const getScriptListAndroid = useSelector(selectScriptAndroidState);\n\n  // console.log(\n  //   getAppbuildListIos,\n  //   getScriptListAndroid,\n  //   getAppbuildListAndroid,\n  //   getScriptListIos,\n  // );\n  const updateHandlerProject = () => {\n    onClose();\n  };\n  return (\n    <Stack spacing=\"15px\" padding=\"10px 15px\" fontWeight=\"500\" width=\"100%\">\n      {/* <ButtonComp onClick={ updateHandlerUser } >update </ButtonComp> */}\n      <Flex w=\"100%\" h=\"400px\" flexDirection=\"column\">\n        <HStack width=\"100%\" padding=\"10px\">\n          <Text fontWeight=\"600\">Project Name</Text>\n          <Spacer></Spacer>\n          <Text>{projectdetails.name}</Text>\n        </HStack>\n        <Stack padding=\"10px\" height=\"370px\" boxShadow=\"0px 3px 6px #00000029\">\n          <Flex width=\"100%\">\n            <Flex flex={1}>\n              {' '}\n              <Text fontWeight=\"600\">App Builds </Text>\n            </Flex>\n            <Flex flex={1}>\n              {' '}\n              <Text fontWeight=\"600\">Scripts</Text>\n            </Flex>\n          </Flex>\n          <Flex width=\"100%\">\n            <Flex flex={1} flexDirection=\"column\" h=\"325px\">\n              <Flex\n                flexDirection=\"column\"\n                width=\"100%\"\n                overflowY=\"auto\"\n                css={{\n                  '&::-webkit-scrollbar': {\n                    width: '8px',\n                    //height: '30px',\n                    border: '5px solid #F3F6F9',\n                  },\n                  '&::-webkit-scrollbar-track': {\n                    boxShadow: 'inset 0 0 6px white',\n                  },\n                  '&::-webkit-scrollbar-thumb': {\n                    backgroundColor: '#C1C1C1',\n                    borderRadius: '5px',\n                    boreder: '2px solid',\n                  },\n                }}\n                padding=\"5px\"\n              >\n                {getAppbuildListIos.length > 0 &&\n                  getAppbuildListIos.map(item => (\n                    <BuildScriptFileComp item={item}></BuildScriptFileComp>\n                  ))}\n                {getAppbuildListAndroid.length > 0 &&\n                  getAppbuildListAndroid.map(item => (\n                    <BuildScriptFileComp item={item}></BuildScriptFileComp>\n                  ))}\n              </Flex>\n            </Flex>\n            <Flex flex={1} flexDirection=\"column\" h=\"325px\">\n              <Flex\n                flexDirection=\"column\"\n                overflowY=\"auto\"\n                css={{\n                  '&::-webkit-scrollbar': {\n                    width: '8px',\n                    //height: '30px',\n                    border: '5px solid #F3F6F9',\n                  },\n                  '&::-webkit-scrollbar-track': {\n                    boxShadow: 'inset 0 0 6px white',\n                  },\n                  '&::-webkit-scrollbar-thumb': {\n                    backgroundColor: '#C1C1C1',\n                    borderRadius: '5px',\n                    boreder: '2px solid',\n                  },\n                }}\n                padding=\"5px\"\n                width=\"100%\"\n              >\n                {getScriptListIos.length > 0 &&\n                  getScriptListIos.map(item => (\n                    <BuildScriptFileComp item={item}></BuildScriptFileComp>\n                  ))}\n                {getScriptListAndroid.length > 0 &&\n                  getScriptListAndroid.map(item => (\n                    <BuildScriptFileComp item={item}></BuildScriptFileComp>\n                  ))}\n              </Flex>\n            </Flex>\n          </Flex>\n        </Stack>\n      </Flex>\n\n      <Flex\n        borderTop=\"1px solid\"\n        paddingTop=\"5px\"\n        borderColor=\"grey16\"\n        justify=\"end\"\n        width=\"100%\"\n      >\n        <ButtonComp\n          borderColor=\"white3\"\n          color=\"grey1\"\n          width=\"95px\"\n          buttonHandler={onClose}\n          fontWeight=\"500\"\n        >\n          Cancel\n        </ButtonComp>\n        <ButtonComp\n          backgroundColor=\"blue1\"\n          borderColor=\"blue1\"\n          color=\"white\"\n          width=\"95px\"\n          fontWeight=\"500\"\n          buttonHandler={updateHandlerProject}\n        >\n          Update\n        </ButtonComp>\n      </Flex>\n    </Stack>\n  );\n}\n\nexport default EditMangeProject;\n","// @ts-nocheck\nimport { Flex, Icon, useDisclosure } from '@chakra-ui/react';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport NoContent from 'app/components/NoContent';\nimport PopupComponent from 'app/components/PopupComponent';\nimport { PaginatedTable } from 'app/pages/TestAnalytics/components/Table';\nimport { useTestExecutionSlice } from 'app/pages/Xcui/slice';\nimport {\n  selectLoadingProjectList,\n  selectProjectError,\n  selectProjectList,\n} from 'app/pages/Xcui/slice/selector';\nimport React, { useState } from 'react';\nimport { BsFillFileTextFill } from 'react-icons/bs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport EditMangeProject from './EditMangeProject';\n\nfunction ManageProjectTable({ deleteProjectHandler }) {\n  const selectProjectOptionList = useSelector(selectProjectList);\n  const ProjectOptionListError = useSelector(selectProjectError);\n  const projectOptionListLoading = useSelector(selectLoadingProjectList);\n  const [getProjectDetails, setProjectDetails] = useState();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { testExecutionActions } = useTestExecutionSlice();\n  const dispatch = useDispatch();\n  //console.log(selectProjectOptionList);\n\n  const columns = [\n    {\n      Header: 'Project Name ',\n      accessor: 'name',\n    },\n    {\n      Header: 'Project Id',\n      accessor: 'uuid',\n    },\n\n    {\n      Header: 'Description          ',\n      accessor: 'description',\n    },\n  ];\n\n  const editProjectHandler = details => {\n    setProjectDetails(details);\n    //console.log(details.name);\n    const paramStringAppBuild = {\n      fileCategory: 'ios-application',\n      projectName: details.name,\n    };\n\n    dispatch(testExecutionActions.loadSelectAppBuildList(paramStringAppBuild));\n    const paramStringScript = {\n      fileCategory: 'ios-test-application',\n      projectName: details.name,\n    };\n    dispatch(testExecutionActions.loadSelectScriptList(paramStringScript));\n\n    const paramStringAppBuildAndroid = {\n      fileCategory: 'android-application',\n      projectName: details.name,\n    };\n\n    dispatch(\n      testExecutionActions.loadSelectAppBuildAndroidList(\n        paramStringAppBuildAndroid,\n      ),\n    );\n    const paramStringScriptAndroid = {\n      fileCategory: 'android-test-application',\n      projectName: details.name,\n    };\n\n    dispatch(\n      testExecutionActions.loadSelectScriptAndroidList(\n        paramStringScriptAndroid,\n      ),\n    );\n    onOpen();\n  };\n\n  return (\n    <Flex flexDirection=\"column\" width=\"100%\">\n      {projectOptionListLoading ? (\n        <LoadingComponent height=\"105vh\"></LoadingComponent>\n      ) : (\n        <>\n          {ProjectOptionListError === 1 ? (\n            <NoContent message=\"Something went wrong\"></NoContent>\n          ) : (\n            <>\n              {selectProjectOptionList.length > 0 ? (\n                <PaginatedTable\n                  data={selectProjectOptionList}\n                  leftIcon={\n                    <Icon\n                      w=\"22px\"\n                      h=\"20px\"\n                      color=\"grey1\"\n                      as={BsFillFileTextFill}\n                    ></Icon>\n                  }\n                  columns={columns}\n                  rightHoverIcon={true}\n                  editUserClickHandler={editProjectHandler}\n                  deleteUserClickHandler={deleteProjectHandler}\n                  type=\"manangeProjectTable\"\n                ></PaginatedTable>\n              ) : (\n                <NoContent height=\"60vh\" message=\"NO Data Found\"></NoContent>\n              )}\n            </>\n          )}\n        </>\n      )}\n      <PopupComponent\n        title=\"Unlink Script and Build\"\n        buttonHandler1={onClose}\n        width=\"600px\"\n        footer={true}\n        isOpen={isOpen}\n        onClose={onClose}\n      >\n        <EditMangeProject\n          onClose={onClose}\n          projectdetails={getProjectDetails}\n        ></EditMangeProject>\n      </PopupComponent>\n    </Flex>\n  );\n}\n\nexport default ManageProjectTable;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { RootState } from 'types';\nimport { initialState } from '.';\n\n// First select the relevant part from the state\nconst selectSlice = (state: RootState) => state.manageProject || initialState;\n\nexport const selectDeleteProjectData = createSelector(\n  [selectSlice],\n  state => state.deleteProjectData,\n);\nexport const selectDeleteProjectDataError = createSelector(\n  [selectSlice],\n  state => state.error,\n);\nexport const selectLoadingDeleteProject = createSelector(\n  [selectSlice],\n  state => state.loading,\n);\n\nexport const selectUnlinkScriptAppBuild = createSelector(\n  [selectSlice],\n  state => state.unlinkScriptAppbuild,\n);\nexport const selectUnlinkScriptAppBuildError = createSelector(\n  [selectSlice],\n  state => state.errorUnlink,\n);\nexport const selectUnlinkScriptAppBuildLoading = createSelector(\n  [selectSlice],\n  state => state.loadingScriptAppbuildUnlink,\n);\n","// @ts-nocheck\nimport { Flex, Text, useDisclosure } from '@chakra-ui/react';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport PopupComponent from 'app/components/PopupComponent';\nimport SubLayout from 'app/components/SubLayout';\nimport { useTestExecutionSlice } from 'app/pages/Xcui/slice';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ManageProjectTable from '../components/ManageProjectTable';\nimport { useManageProjectSlice } from '../slice';\nimport { selectLoadingDeleteProject } from '../slice/selector';\nimport { useLocation } from 'react-router-dom';\nimport usePlatformtypeHook from 'app/pages/HomePage/usePlatformtypeHook';\n\nfunction ManageProject() {\n  const { testExecutionActions } = useTestExecutionSlice();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [getDeleteProjectId, setDeleteProjectId] = useState();\n  const { actions } = useManageProjectSlice();\n  const dispatch = useDispatch();\n  const isMobileTesting = usePlatformtypeHook();\n\n  const loadingDeleteProject = useSelector(selectLoadingDeleteProject);\n\n  useEffect(()=>{\n      dispatch(testExecutionActions.loadSelectTestExecutionProjectList(isMobileTesting ? 'app-automation,mobile-interact':'lr-automation,lr-interact' ));\n      },[isMobileTesting])\n\n\n\n  const deleteProjectHandler = id => {\n    setDeleteProjectId(id);\n    onOpen();\n  };\n  const deleteProjectButtonHandler = id => {\n    //console.log(getDeleteProjectId);\n    dispatch(actions.loadDeleteProject(getDeleteProjectId));\n    onClose();\n  };\n  return (\n    <Flex flexDirection=\"column\" position=\"relative\">\n      {loadingDeleteProject && (\n        <LoadingComponent\n          height=\"100vh\"\n          // background=\"#3F425429\"\n          isOverLay={true}\n          position=\"absolute\"\n        ></LoadingComponent>\n      )}\n\n      <SubLayout>\n        <Flex\n          fontFamily=\"Montserrat\"\n          fontWeight=\"500\"\n          fontSize=\"14px\"\n          flexDirection=\"column\"\n          padding=\"20px\"\n          width=\"100%\"\n        >\n          <ManageProjectTable\n            deleteProjectHandler={deleteProjectHandler}\n          ></ManageProjectTable>\n        </Flex>\n      </SubLayout>\n      <PopupComponent\n        title=\"Delete Project\"\n        buttonHandler1={onClose}\n        width=\"450px\"\n        //footer={true}\n        isOpen={isOpen}\n        onClose={onClose}\n        buttonTitle1=\"Cancel\"\n        buttonTitle2=\"Delete\"\n        buttonHandler1={onClose}\n        buttonHandler2={deleteProjectButtonHandler}\n      >\n        <Flex\n          justify=\"center\"\n          width=\"100%\"\n          align=\"center\"\n          justifyItems=\"center\"\n        >\n          <Text textAlign=\"center\">Are you sure delete this Project ? </Text>\n        </Flex>\n      </PopupComponent>\n    </Flex>\n  );\n}\n\nexport default ManageProject;\n","// @ts-nocheck\nimport { Flex, Icon, Text, useDisclosure } from '@chakra-ui/react';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport NoContent from 'app/components/NoContent';\nimport PopupComponent from 'app/components/PopupComponent';\nimport { PaginatedTable } from 'app/pages/TestAnalytics/components/Table';\nimport { useTestExecutionSlice } from 'app/pages/Xcui/slice';\nimport {\n  selectAppbuildAndroidError,\n  selectAppBuildAndroidListState,\n  selectAppBuildAndroidLoading,\n  selectAppbuildIosError,\n  selectAppBuildIosLoading,\n  selectAppBuildListState,\n} from 'app/pages/Xcui/slice/selector';\nimport React, { useEffect, useState } from 'react';\nimport { BsFillFileTextFill } from 'react-icons/bs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useManageProjectSlice } from '../slice';\nimport { useLocation } from 'react-router-dom';\nimport usePlatformtypeHook from 'app/pages/HomePage/usePlatformtypeHook';\n\nfunction ManageProjectAppBuilds() {\n  const dispatch = useDispatch();\n  const { testExecutionActions } = useTestExecutionSlice();\n  const getAppbuildListIos = useSelector(selectAppBuildListState);\n  const getAppbuildListAndroid = useSelector(selectAppBuildAndroidListState);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [getDeleteAppbuildId, setDeleteAppbuildId] = useState();\n  const { actions } = useManageProjectSlice();\n  const loadingAppbuildAndroid = useSelector(selectAppBuildAndroidLoading);\n  const loadingAppbuildIos = useSelector(selectAppBuildIosLoading);\n  const errorAppbuildIos = useSelector(selectAppbuildIosError);\n  const errorAppbuildAndroid = useSelector(selectAppbuildAndroidError);\n  const isMobileTesting = usePlatformtypeHook();\n  const columns = [\n    {\n      Header: 'Build Name ',\n      accessor: 'fileName',\n    },\n    {\n      Header: 'Build Id',\n      accessor: 'uuid',\n    },\n\n    {\n      Header: 'File Category',\n      accessor: 'fileCategory',\n    },\n  ];\n\n  useEffect(() => {\n    const paramStringAppBuild = {\n      fileCategory: 'ios-application',\n      //  projectName: '',\n      testType: isMobileTesting\n        ? 'app-automation,mobile-interact'\n        : 'lr-automation,lr-interact',\n    };\n\n    dispatch(testExecutionActions.loadSelectAppBuildList(paramStringAppBuild));\n    const paramStringAppBuildAndroid = {\n      fileCategory: 'android-application',\n      // projectName: '',\n      testType: isMobileTesting\n        ? 'app-automation,mobile-interact'\n        : 'lr-automation,lr-interact',\n    };\n\n    dispatch(\n      testExecutionActions.loadSelectAppBuildAndroidList(\n        paramStringAppBuildAndroid,\n      ),\n    );\n  }, [isMobileTesting]);\n  const deleteAppbuildButtonHandler = () => {\n    dispatch(\n      actions.loadUnlinkScriptAppbuild({\n        buildId: getDeleteAppbuildId,\n        type: '',\n      }),\n    );\n    onClose();\n  };\n\n  //console.log(getAppbuildListIos);\n\n  const deleteAppbuildHandler = id => {\n    setDeleteAppbuildId(id);\n    onOpen();\n  };\n\n  return (\n    <Flex flexDirection=\"column\" padding=\"20px\" width=\"100%\">\n      <Text padding=\"\" fontWeight=\"600\">\n        Builds\n      </Text>\n      <>\n        {loadingAppbuildAndroid || loadingAppbuildIos ? (\n          <LoadingComponent height=\"80vh\"></LoadingComponent>\n        ) : (\n          <>\n            {errorAppbuildIos === 1 && errorAppbuildAndroid === 1 ? (\n              <NoContent message=\"Something went wrong\"></NoContent>\n            ) : (\n              <>\n                {getAppbuildListIos.length > 0 ||\n                getAppbuildListAndroid.length > 0 ? (\n                  <PaginatedTable\n                    data={[...getAppbuildListIos, ...getAppbuildListAndroid]}\n                    leftIcon={\n                      <Icon\n                        w=\"22px\"\n                        h=\"20px\"\n                        color=\"grey1\"\n                        as={BsFillFileTextFill}\n                      ></Icon>\n                    }\n                    columns={columns}\n                    rightHoverIcon={true}\n                    // editUserClickHandler={editProjectHandler}\n                    deleteUserClickHandler={deleteAppbuildHandler}\n                    type=\"deleteappbuilds\"\n                  ></PaginatedTable>\n                ) : (\n                  <NoContent height=\"60vh\" message=\"NO Data Found\"></NoContent>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </>\n      <PopupComponent\n        title=\"Delete Project\"\n        buttonHandler1={onClose}\n        width=\"450px\"\n        //footer={true}\n        isOpen={isOpen}\n        onClose={onClose}\n        buttonTitle1=\"Cancel\"\n        buttonTitle2=\"Delete\"\n        buttonHandler1={onClose}\n        buttonHandler2={deleteAppbuildButtonHandler}\n      >\n        <Flex\n          justify=\"center\"\n          width=\"100%\"\n          align=\"center\"\n          justifyItems=\"center\"\n        >\n          <Text textAlign=\"center\">Are you sure delete this App Build ? </Text>\n        </Flex>\n      </PopupComponent>\n    </Flex>\n  );\n}\n\nexport default ManageProjectAppBuilds;\n","// @ts-nocheck\nimport { Flex, Icon, Text, useDisclosure } from '@chakra-ui/react';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport NoContent from 'app/components/NoContent';\nimport PopupComponent from 'app/components/PopupComponent';\nimport { PaginatedTable } from 'app/pages/TestAnalytics/components/Table';\nimport { useTestExecutionSlice } from 'app/pages/Xcui/slice';\nimport {\n  selectAppBuildAndroidListState,\n  selectAppBuildListState,\n  selectScriptAndroidError,\n  selectScriptAndroidLoading,\n  selectScriptAndroidState,\n  selectScriptIosError,\n  selectScriptIosLoading,\n  selectScriptState,\n  selectTestExcutionState,\n} from 'app/pages/Xcui/slice/selector';\nimport React, { useEffect, useState } from 'react';\nimport { BsFillFileTextFill } from 'react-icons/bs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useManageProjectSlice } from '../slice';\nimport { useLocation } from 'react-router-dom';\nimport usePlatformtypeHook from 'app/pages/HomePage/usePlatformtypeHook';\n\nfunction ManageProjectAppBuilds() {\n  const dispatch = useDispatch();\n  const { testExecutionActions } = useTestExecutionSlice();\n  const getScriptListIos = useSelector(selectScriptState);\n  const getScriptListAndroid = useSelector(selectScriptAndroidState);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [getDeleteAppbuildId, setDeleteAppbuildId] = useState();\n  const { actions } = useManageProjectSlice();\n  const loadingScriptAndroid = useSelector(selectScriptAndroidLoading);\n  const loadingScriptIos = useSelector(selectScriptIosLoading);\n  const errorScriptIos = useSelector(selectScriptIosError);\n  const errorScriptAndroid = useSelector(selectScriptAndroidError);\n  const isMobileTesting = usePlatformtypeHook();\n  const { selectVisualScriptList, loadingVisualScriptList } = useSelector(\n    selectTestExcutionState,\n  );\n\n  const columns = [\n    {\n      Header: 'Script Name ',\n      accessor: 'fileName',\n    },\n    {\n      Header: 'Script Id',\n      accessor: 'uuid',\n    },\n\n    {\n      Header: 'File Category',\n      accessor: 'fileCategory',\n    },\n  ];\n\n  useEffect(() => {\n    const paramStringScript = {\n      fileCategory:\n        'ios-test-application,appium-python-test-application,appium-java-test-application',\n      // projectName: '',\n      testType: isMobileTesting\n        ? 'app-automation,mobile-interact'\n        : 'lr-automation,lr-interact',\n    };\n    dispatch(testExecutionActions.loadSelectScriptList(paramStringScript));\n    const paramStringScriptAndroid = {\n      fileCategory: 'android-test-application',\n      // projectName: '',\n      testType: isMobileTesting\n        ? 'app-automation,mobile-interact'\n        : 'lr-automation,lr-interact',\n    };\n\n    dispatch(\n      testExecutionActions.loadSelectScriptAndroidList(\n        paramStringScriptAndroid,\n      ),\n    );\n    const paramStringVisualScript = {\n      fileCategory: 'visual-journey-script',\n      //  projectName: '',\n      testType: isMobileTesting\n        ? 'app-automation,mobile-interact'\n        : 'lr-automation,lr-interact',\n    };\n    dispatch(\n      testExecutionActions.loadSelectVisualScriptList(paramStringVisualScript),\n    );\n  }, [isMobileTesting]);\n\n  const deleteScriptButtonHandler = () => {\n    dispatch(\n      actions.loadUnlinkScriptAppbuild({\n        buildId: getDeleteAppbuildId,\n        type: '',\n      }),\n    );\n    onClose();\n  };\n\n  const deleteAppbuildHandler = id => {\n    //console.log(id)\n    setDeleteAppbuildId(id);\n    onOpen();\n  };\n\n  return (\n    <Flex flexDirection=\"column\" padding=\"20px\" width=\"100%\">\n      <Text padding=\"\" fontWeight=\"600\">\n        Test Script\n      </Text>\n\n      <>\n        {loadingScriptAndroid || loadingScriptIos || loadingVisualScriptList ? (\n          <LoadingComponent height=\"80vh\"></LoadingComponent>\n        ) : (\n          <>\n            {errorScriptIos === 1 && errorScriptAndroid === 1 ? (\n              <NoContent message=\"Something went wrong\"></NoContent>\n            ) : (\n              <>\n                {getScriptListIos.length > 0 ||\n                getScriptListAndroid.length > 0 ||\n                selectVisualScriptList.length > 0 ? (\n                  <PaginatedTable\n                    data={[\n                      ...getScriptListIos,\n                      ...getScriptListAndroid,\n                      ...selectVisualScriptList,\n                    ]}\n                    leftIcon={\n                      <Icon\n                        w=\"22px\"\n                        h=\"20px\"\n                        color=\"grey1\"\n                        as={BsFillFileTextFill}\n                      ></Icon>\n                    }\n                    columns={columns}\n                    rightHoverIcon={true}\n                    // editUserClickHandler={editProjectHandler}\n                    deleteUserClickHandler={deleteAppbuildHandler}\n                    type=\"deletetestsuite\"\n                  ></PaginatedTable>\n                ) : (\n                  <NoContent height=\"60vh\" message=\"NO Data Found\"></NoContent>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </>\n      <PopupComponent\n        title=\"Delete Project\"\n        buttonHandler1={onClose}\n        width=\"450px\"\n        //footer={true}\n        isOpen={isOpen}\n        onClose={onClose}\n        buttonTitle1=\"Cancel\"\n        buttonTitle2=\"Delete\"\n        buttonHandler1={onClose}\n        buttonHandler2={deleteScriptButtonHandler}\n      >\n        <Flex\n          justify=\"center\"\n          width=\"100%\"\n          align=\"center\"\n          justifyItems=\"center\"\n        >\n          <Text textAlign=\"center\">\n            Are you sure delete this Script Build ?{' '}\n          </Text>\n        </Flex>\n      </PopupComponent>\n    </Flex>\n  );\n}\n\nexport default ManageProjectAppBuilds;\n","// @ts-nocheck\nimport { Flex, Text, useDisclosure, useToast } from '@chakra-ui/react';\nimport LoadingComponent from 'app/components/LoadingComponent';\nimport PopupComponent from 'app/components/PopupComponent';\nimport SubLayout from 'app/components/SubLayout';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useTestExecutionSlice } from '../Xcui/slice';\nimport ManageProjectTable from './components/ManageProjectTable';\nimport ManageProject from './Features/ManageProject';\nimport ManageProjectAppBuilds from './Features/ManageProjectAppBuilds';\nimport ManageProjectScriptBuilds from './Features/ManageProjectScriptBuilds';\nimport { useManageProjectSlice } from './slice';\nimport {\n  selectDeleteProjectData,\n  selectDeleteProjectDataError,\n  selectLoadingDeleteProject,\n  selectUnlinkScriptAppBuild,\n  selectUnlinkScriptAppBuildError,\n  selectUnlinkScriptAppBuildLoading,\n} from './slice/selector';\n\nexport function SettingsManageProject({\n  activeTestSetupPageLink,\n  setActiveTestSetupPageLink,\n}) {\n  const { testExecutionActions } = useTestExecutionSlice();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [getDeleteProjectId, setDeleteProjectId] = useState();\n  const dispatch = useDispatch();\n  const { actions } = useManageProjectSlice();\n\n  const deleteProjectresponse = useSelector(selectDeleteProjectData);\n  const deleteProjecterror = useSelector(selectDeleteProjectDataError);\n  const loadingDeleteProject = useSelector(selectLoadingDeleteProject);\n  const unlinkScriptAppbuildresponse = useSelector(selectUnlinkScriptAppBuild);\n  const unlinkScriptAppbuilderror = useSelector(\n    selectUnlinkScriptAppBuildError,\n  );\n  const loadingUnlinkScriptAppbuild = useSelector(\n    selectUnlinkScriptAppBuildLoading,\n  );\n  const toast = useToast();\n  useEffect(() => {\n    if (deleteProjectresponse.hasOwnProperty('message')) {\n      if (deleteProjectresponse.message === 'Success') {\n        toast({\n          title: 'Successfully Deleted',\n          status: 'success',\n          isClosable: true,\n          position: 'bottom-right',\n        });\n        dispatch(testExecutionActions.loadSelectTestExecutionProjectList());\n      } else {\n        toast({\n          title: deleteProjectresponse.message,\n          status: 'error',\n          isClosable: true,\n          position: 'bottom-right',\n        });\n      }\n      dispatch(actions.deleteProjectDataLoaded({}));\n    }\n    if (deleteProjecterror === 1) {\n      toast({\n        title: 'Could not Deleted',\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n      dispatch(actions.deleteProjectDataError(null));\n    }\n  }, [deleteProjectresponse, deleteProjecterror]);\n  useEffect(() => {\n    if (unlinkScriptAppbuildresponse.hasOwnProperty('message')) {\n      if (unlinkScriptAppbuildresponse.message === 'Success') {\n        toast({\n          title: 'Successfully Deleted',\n          status: 'success',\n          isClosable: true,\n          position: 'bottom-right',\n        });\n        const paramStringAppBuild = {\n          fileCategory: 'ios-application',\n          //  projectName: '',\n        };\n\n        dispatch(\n          testExecutionActions.loadSelectAppBuildList(paramStringAppBuild),\n        );\n        const paramStringAppBuildAndroid = {\n          fileCategory: 'android-application',\n          // projectName: '',\n        };\n\n        dispatch(\n          testExecutionActions.loadSelectAppBuildAndroidList(\n            paramStringAppBuildAndroid,\n          ),\n        );\n        const paramStringScript = {\n          fileCategory: 'ios-test-application,appium-python-test-application',\n          //  projectName: '',\n        };\n        dispatch(testExecutionActions.loadSelectScriptList(paramStringScript));\n        const paramStringScriptAndroid = {\n          fileCategory: 'android-test-application',\n          //projectName: '',\n        };\n\n        dispatch(\n          testExecutionActions.loadSelectScriptAndroidList(\n            paramStringScriptAndroid,\n          ),\n        );\n      } else {\n        toast({\n          title: unlinkScriptAppbuildresponse.message,\n          status: 'error',\n          isClosable: true,\n          position: 'bottom-right',\n        });\n      }\n      dispatch(actions.unlinkScriptAppbuild({}));\n    }\n    if (unlinkScriptAppbuilderror === 1) {\n      toast({\n        title: 'Could not Deleted',\n        status: 'error',\n        isClosable: true,\n        position: 'bottom-right',\n      });\n      dispatch(actions.unlinklScriptAppbuildError(null));\n    }\n  }, [unlinkScriptAppbuildresponse, unlinkScriptAppbuilderror]);\n\n  const deleteProjectHandler = id => {\n    setDeleteProjectId(id);\n    onOpen();\n  };\n  const deleteProjectButtonHandler = id => {\n    //console.log(getDeleteProjectId);\n  };\n\n  return (\n    <Flex flexDirection=\"column\" position=\"relative\">\n      {loadingUnlinkScriptAppbuild && (\n        <LoadingComponent\n          height=\"100vh\"\n          // background=\"#3F425429\"\n          isOverLay={true}\n          position=\"absolute\"\n        ></LoadingComponent>\n      )}\n\n      <SubLayout>\n        <Flex\n          fontFamily=\"Montserrat\"\n          fontWeight=\"500\"\n          fontSize=\"14px\"\n          flexDirection=\"column\"\n          width=\"100%\"\n        >\n          {activeTestSetupPageLink === 'testsetup' && (\n            <ManageProject></ManageProject>\n          )}\n          {activeTestSetupPageLink === 'scriptbuilds' && (\n            <ManageProjectScriptBuilds></ManageProjectScriptBuilds>\n          )}\n          {activeTestSetupPageLink === 'appbuilds' && (\n            <ManageProjectAppBuilds></ManageProjectAppBuilds>\n          )}\n        </Flex>\n      </SubLayout>\n    </Flex>\n  );\n}\n\nexport default SettingsManageProject;\n"],"sourceRoot":""}